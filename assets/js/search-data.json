{
  
    
        "post0": {
            "title": "Blogging to the Oldies",
            "content": "Reality, Meet Opportunity . For quite a while now, I have wanted to update my blog, do some more writing (both personally and professionally) and generally flex some unused muscles a bit. Fortuna often has sadistic tendencies as some can attest. Consider the recent toppling of the NS8 empire 1, 2, 3, 4, 5, 6 and a great fall of nepotism with recent developments and former employee actions. So many links to criminal conspiracy to defraud and so little daylight; regardless, I have had more than a little time to navel gaze in recent weeks. . I’ve long been frustrated by the available tools for blogging. Some of these goals compete with each other and some are onerous due to costs–I want as much of my platform to be free (both as in beer and as in speech) as possible and I want as much control over my platform as possible and I want to have features like commenting and search and analytics and there can be no ads and the word Jekyll may not be invoked. I have an old Blogger site, which I desperately want to retire; and I have a Medium site which I am increasingly frustrated with: from the inability to post articles in the past to Mediums idiotic approach to monetization–what was initially cool about medium is no longer interesting to me. . So I set out to figure out how to create the blog platform you, dear reader, are currently (hopefully) enjoying. . Goals . Broadly speaking, I want to be able to meet these objectives: . Easy to add new posts | Easy to update existing posts | Keep revision history of edits | Blog is searchable | Commenting in some form is possible, and comments are stored in my control | No ads (at least for now) | Service is free for me to host my content and free for consumers | I can more or less change anything about the blog at whim | Fast to manage | . Non-starters . I considered a number of options, and I won’t go too deep into the pros and cons so much as leave breadcrumbs for others to follow (in no particular order): . Medium: it looks nice, but I have to surrender too much control. It’s not free as in speech or free as in lattes. | Blogger: it looks dated. It does most of what I need, but it’s slow to manage and cumbersome to maintain. | Ghost: it used to be a nice competitor to Medium, but the target audience for users no longer includes me. It’s free to self-host, but non-trivial to manage. | All other self-hosted solutions (Ghost included): while I can run anything on my local systems, I don’t want to depend on my personal equipment to run my site and I don’t want to have to deal with security (although services like Ngrok and Pagekite are awesome and definitely worth your time). | Cloud hosting options are a mixed bag when looking for free. You can get lots of usage out of Azure on the initial free options, but eventually you have to pay. | WordPress/Drupal/etc. Will never use; will not investigate. | Solution . One “blog” concept that I’ve always liked is by @raganwald is his use of Github for organizing content. I have long considered this approach as it checks off a lot of boxes: . Complete control | Free as in latkes and free as in peaceful protests | It’s git, so it’s all under control | . The perceived negatives I have had in the past seem to be less of an issue these days with the emergence of a few factors (some relatively new, some a bit older): . Github Pages: a free static content website based on the content of a branch of your repository. Commonly the gh-pages branch, which is how this blog is served. | Github Actions: Manage your updates to Github Pages automatically | Github Codespaces: Everything you need to manage your site, in your browser. This is a very nice to have–you can do this anywhere/anytime already with other tools. | GatsbyJs: A pretty slick static site generator based on React. Lots of extensions and pluggability. | Comments: Using a tool called Utterances, which is just a convenient wrapper around Github Issues–commenting is free and easy and completely under my control. | Search: This is the only 3rd party piece that I cannot take and move just anywhere, but it’s free as in pancakes for my purposes, so I’ll content with it for now and/or until I need something better. | . Getting There . I did some basic soul googling for blog github pages -jekyll and quickly found Creating my blog with Gatsby and Github Pages, which was more than enough to get me going. I explored a variety of Gatsby Templates (once I had decided that Gatsby would meet all my needs) and I picked the Gitbook Starter template as a base. There were a variety of things I needed to change–most notably the logic for generating the sidebar tree, which required comparing the template repo with the demo repo. . Most of my time was occupied fixing annoyances–I spent more than a few hours wrestling with the gh-pages module that I use for automating deploys to, you guessed it, Github Pages. The production build process for Gatsby is much slower than I would like, which is especially annoying in the early phases of development when you’re making lots of minor tweaks and changes. Combine that with trying to guarantee that I cache bust my site with new deploys, the general speed of build+deploy, local caching issues, remote caching issues–and I easily spent most of a day refreshing my browser in a state of uncertainty as to whether I was testing the right version of my code. Once I generally worked through my self-inflicted CI/CD pipeline issues, I am very satisfied with what I was able to throw together over a day and a half. . Outstanding Concerns . One of the fun bits of doing all this work is that it’s a beautiful combination of development work, writing and designing–all of which I love. I get to keep polishing my dev chops as I work through my backlog of blog posts to migrate as well as explore new technologies and solutions to my own little set of concerns. I’ve historically struggled to find a development problem that aligns with my personal interests, and for the first time I feel like I have the beginnings of a solution here. . Still, much remains todo if I want to consider this feature complete: . Add analytics so I can measure traffic. | Some form of management for comments. | Find alternate ways to authenticate for comments so not everyone needs to have a Github account to comment. | Fix some rendering issues on page load. | Tagging and other basic “bloggy” features. | Migrate all my old content over. | Refactor the whole thing to TypeScript, because {reasons}. | Refactor the whole thing from TypeScript to Rust, because…why not? | . If any of this has been interesting, please let me know in the comments or in the code, which is the blog, which is the code, which…! .",
            "url": "https://luddites.me/logging/code/tech/2020/10/04/blogging-to-the-oldies.html",
            "relUrl": "/logging/code/tech/2020/10/04/blogging-to-the-oldies.html",
            "date": " • Oct 4, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Oscar",
            "content": "Words have been changed and characters rearranged to limit liability to the not guilty. . Every sixty minutes at seven minutes past the hour exactly, Oscar would run naked through the house. He always entered through the front door, streaked through the living room, raced down the hallway, dashed in and out of each room (bathrooms and closets included), ran a quick circle around the island in the kitchen and exited through the mudroom and out the garage. If the garage door were closed, Oscar would mash the button and jog in place until the door raised high enough to dart under. . While Oscar’s hourly run was in and of itself perplexing, what confused us even more was that not one of us had the faintest idea who was Oscar or whence he came. Did he visit other houses on our street? The pure oddity of our visitor left us in an unusual position. Customarily, it is not appropriate to approach a stranger’s house (be it or not a neighbor’s), knock upon the door and inquire about nude persons that may or may not be running through said person’s home. . “Good afternoon, ma’am. I’m your neighbor from down the street, and…” “Oh, yes, ma’am. Number 312, yes.” “I’m sure you have seen me riding down the street. Yes, ma’am.” “Oh, no, ma’am — we don’t even play baseball. I don’t…” “Yes, ma’am, I see. I am very sorry about the window, but it really wasn’t…” “If I may, I will ask my mother to inquire around.” “Yes ma’am, integrity and responsibility are very important virtues for our young people, yes. As a matter of fact, I…” “Of course, ma’am. I could not agree more.” “Ma’am, the reason I came by is to ask if you have ever seen Oscar.” “Well, you see, ma’am, I really do not know. I only know that he runs naked through our house every day.” “Heaven forbid, ma’am. This is no prank…” “Please, I assure you, I had no such intention…” “Accept my apologies; I am sorry to have disturbed you.” “Yes, I will have my mother…” “Good day ma’am.” . So you see, the question of asking about the neighborhood was itself quite out of the question. The next, most obvious approach was to try to follow Oscar and see where he went. Now, I do not know if you have ever tried to chase a naked, fully grown man with a seven foot long beard as he runs down the street in broad daylight, but the folks around here do not take kindly to it. Frankly, we didn’t much relish the idea either. It is one thing to blissfully, obliviously ignore a naked person streaking past and quite another thing entirely to try to unsee a couple of children chasing a naked, fully grown man with a seven foot beard. . If we were not going to interview the neighbors and if we were not going to chase a naked, four and a half foot tall, fully grown man with a seven foot beard, then the next best thing had to be to setup a stakeout. I would watch the front door and keep a clear view up and down the street. Isaac would set up base at the top of the street and Jordan would keep watch from the bottom of the street. You will now be forgiven if you thought this a perfectly good and reasonable plan, for none of us expected to see Oscar floating gently down toward the ground, a parachute the color of the setting sun holding him aloft as his freely dangling loins taunted us with the ineffable and inscrutable ceremony of Oscar’s visit. No one expects a naked, four and a half foot tall, fully grown man with flowing red hair and a seven foot beard to parachute into their driveway, release and then run through every nook and cranny of their house. Indeed, faced with the blur of that buck naked, birthday suit clad, man coursing through our house, we were still caught by the shock of the parachute entrance to react in any significant way before Oscar was already tearing out the garage toward the end of the street. Curiously, as we watched him slowly fade into the horizon, the wind picked up and before I had a chance to snap my fingers the parachute caught the breeze and carried itself after Oscar down the street. . As you might imagine, my brothers and I were most puzzled. Did Oscar always parachute down? That seemed highly improbable — surely it would take more than an hour to get back into a plane, take off, circle overhead and parachute back down again. There was only one thing for it: stay in position and wait sixty minutes. We decided to take turns at the front of the house for the next round. I drew the short straw, so the first watch was mine. At five minutes past the hour, I would blow a whistle to call my brothers out and we would all fall into position. So it was that at 7:05 in the evening, the three of us resumed our triangular formation to await Oscar. The seconds dripped off our foreheads like icicles sweating. I was focused with such intensity on my watch that the explosion in the middle of the street nearly snatched the life right out of me. At 7:06:30 the sewer lid in the middle of the street shot straight up into the air and Oscar tumbled forward in a pop-off suit. Quick as a jackrabbit, he discarded the suit into the sewer just as the cover landed perfectly back in place. Thus we were left staring at the massive, yellow smiley face tattooed on Oscar’s posterior as that naked, four and a half foot, fully grown man with flowing red hair and a seven foot beard flashed in and out of our house toward the setting sun. . We had time for one more watch before darkness fell. We briefly discussed positioning a camera through the night to capture Oscar’s various entrances but just as quickly decided we had already seen enough of naked Oscar and did not need to further stain our memories with yet more images of Oscar’s pride. As before, we waited until the appointed time, and at 8:05 that evening resumed our watch in anticipation of Oscar’s return. We stood facing the street, no longer attempting to hide, standing in plain view in the middle of the driveway. Were it not for Isaac’s excellent hearing and quick wit, we might have missed Oscar’s entrance entirely. At Isaac’s signal, we swiftly turned around to face the house just in time to see Oscar release his grip on a hang glider and land nimbly on the roof, from which he performed a flawless backflip, his neatly braided armpit hair swinging like dreadlocks, landing before the front door and streaking inside. . There comes a point in the day when one can take no more of a naked, four and a half foot tall, full grown man with flowing red hair, a seven foot beard, a giant smiley face butt tattoo and armpit hair dreadlocks. After all, he would be lapping through our house every hour, all night long. We had given up closing bedroom doors long ago. Oscar could pick a lock in less than a second. Deadbolts didn’t stop him. Barricading the door slowed him down not in the least. In the beginning, once it had become clear that Oscar was an unstoppable force, my parents had begun trying to solicit advice from friends and family — but try as they might, they could not find a way to broach the subject of the naked man. My parents tried hosting dinner parties in a more casual effort to allow the subject of Oscar to occur organically in conversation, but Oscar’s hourly runs would prove as frictionless as my mother’s desserts find their way from table to tummy — Oscar could loop through the house, setting foot in every room, unseen and unheard by all except we privileged few with tickets to the never ending show. Gradually, we would come to accept that Oscar’s loins were intended for an audience of us and us alone. . My parents tried all the usual sorts of things that simple, hardworking, market fearing adults should try. They called the police. . “Yes, officer, fourteen inch toenails painted neon green with glitter.” “No, officer, I assure you — this is not a joke.” . They called the city newspapers. . “No, officer, I assure you — this is not a joke.” “Yes, tugboat earrings in both ears — quite large. The tugboats make a horn sound as he runs.” “Well, no, we don’t have any pictures…the man is stark naked. If you could just come by the house…” “What time? Any hour of the day; just be here at seven past the hour.” “What? Yes, of course I am serious!” . They called animal control. . “Well, no, he is not technically an animal himself, but he does run with a gerbil in each hand.” “Well the gerbils look quite distressed!” “Their squeaks sound most concerned.” “I assure you that being swung about in the hands of a naked man is not among the things Mother Nature provisioned for a gerbil’s recreational activities.” . They called the fire department. . “No sir, nothing is burning. Yet. Not at this exact moment.” “Well, you see, the back of his neck, you see. Erm. His neck hairs to be precise. Well, the back of his neck is always smoking and the hairs are singed you see.” “Something is burning them.” “Well, as I said, not at this exact moment, but if you come by in just thirty minutes, I am sure you will see the smoke.” “No, I am not threatening to start a fire!” . They called the FBI. . “I see. You’ve already heard about us, eh?” “Nothing you can do? Nothing at all? Can’t even take a message, eh? Would just get thrown away as soon as I hang up, you say?” “Would it make any difference to know that he has tiny tattoos of the Russian flag above his nipples?” “None whatsoever, eh…” . At that my father gave up hope. For a time, my mother carried on. She called the local churches, the banks, the grocery stores. She called plumbers and electricians and contractors. She called the Red Cross, Amnesty International, the UN and the WHO. I do believe she called every non-residential entity with a phone number before finally collapsing against the cold, hard, unrelenting truth: Oscar’s naughty bits were inextricably intertwined with our lives. . My parents were nothing if not rational creatures, disposed to dispensing healthy portions of the scientific method at every opportunity (and to them, moments do not exist that are not opportune). Logically, if we could not rely upon anyone else, then from beneath our own bootstraps we must emerge prepared to do battle. Gods bless them, they did try so many things. If I recall correctly, my mother had the first idea: equip each of us with solar eclipse glasses and turn out the lights before Oscar’s next run. Mother handed out the glasses and we sat wrapped in the comforting embrace of darkness, eyes closed behind thick, dark lenses with the quiet evening holding vigil around us. Darkness, sweet and absolute, suddenly abandoned us without warning as the light of a thousand flares roared to raging life around the house, bringing Oscar’s frank and beans into perfect clarity and focus as he flitted gracefully, rapidly through the house. In the dark of the evenings, my father tried cutting the power to the house. Naturally, Oscar persisted, his whole body wrapped in a complex web of glow sticks. At that, my brothers and I did begin a short lived philosophical discussion on whether or no the glow sticks constituted a form of clothing; but we quickly tired of the question and are happy to defer it to consideration by future generations. . Among all the curiosities that surround Oscar: his arrival, appearance and routine, the simplest to explain (and not without coincidence the first question often asked of this simple narrative) is how we came to know his name; and for this we have but Oscar to thank, for every time Oscar opened the front door, he proclaimed in a sing-song voice “Oscar’s back” with the “ack” extended in a lilting sort of way, extended but not entirely detached from the “b” of its birth — the way a mother might soothe a infant on her return: all is well, worry not, sanity and security are restored. The answers to most other questions remain shrink wrapped in enigmas: how and where does he sleep? Does he have a family? What does he do each hour for the 58½ minutes not spent inside our house? How does he keep this up, every single hour of every single day for months if not years on end? What happens when he gets sick? Has he ever been late? Where did he come from? And why? Why? Why — by the unwritten, sacred names of all the unspoken holiness around us — why? . As it does, time passed. Like a sudden burst of sunlight severing the grip of an icicle from the roof, an idea smashed into my consciousness with the same abruptness as Oscar bursting through the doorway: why not ask him? For reasons that will soon clarify as they crystalize: attempting to start a conversation with Oscar proved slightly more difficult than my confidence in the idea suggested. One Saturday morning, as Oscar entered the living room, I braced myself for the unthinkable and managed to release a whispery “Are you hungry?”, which only barely managed to escape my lips before Oscar reached the garage. Each conversation felt as a stained glass window being assembled from its shattered fragments. Our first dialog differed little from the rest except insofar as it was the end of the evitable. . 06:07 — Are you hungry? 07:07 — Yep. 08:07 — Would you like a sandwich? 09:07 — Please. 10:07 — What kind of sandwich? 11:07 — Tuna… 12:07 — …fish… 13:07 — …no… 14:07 — …pickles. . At 3:07 in the afternoon, a tuna fish sandwich, on toasted rye bread, lounged upon the kitchen counter, waiting with a diagonal come hither slice down the middle for Oscar to return. Oscar took the sandwich and at 4:07 said “Thanks” as he passed. From that day forward, I left a tuna sandwich on the kitchen counter in the afternoons. Our conversations continued, Oscar replying a word or two per hour. . I asked: . “Do you enjoy this?” “This is…” “…the job…” “…I was…” “…born…” “…to do.” “Is the pay good?” “Decent…” “…Has per diem…” “…Benefits…” “…Travel.” “When did you start?” “A few…” “…years ago.” “What made you get into this line of work?” “Great…” “…exercise…” “…Meet new…” “…people…” “…See new…” “…places.” . So the conversations went for days or weeks, until (quite unexpectedly) I stumbled upon the question I should have asked at the very beginning. “So. Um. Oscar? So, why our house?” I paused, “I mean, this is great and all — don’t get me wrong — the gerbils really close the deal…but why choose to do this in our home?” . Oscar skidded to a halt in mid stride. He turned to face me and walked slowly into the living room. “Eh,” he said, “Sorry. Say that one more time?” “Well,” I started, “I mean, of all the houses in all the world, why ours?” Oscar scratched his head for a moment, his red hair somehow still flowing, “Why. Hrm. Yes, why, indeed.” From where I cannot imagine, Oscar produced a thick stack of papers. “Let’s see,” he started, thumbing through the papers, “Kilpatricks. 312 Maple. Full service package. Ordered on February 2nd. Full year, paid in advance.” He looked up at me, “This is 312 Maple. You are the Kilpatricks, right?” “Oh, no” I said, “You want 313, just across the street.” . Inside a blur of motion, Oscar had a phone in his hand and he was furiously tapping away at the screen. He lifted the phone to his ear. . “Jimmy, Oscar here. Looks like corporate screwed up again.” “Yeah, the DF-10.75 package with full service add-on. Yeah, it’s 313 Maple.” “Right, send the usual cleanup crew.” “Ok. I’ll update the protocol.” “Sounds good. I’ll start on them first thing tomorrow.” . At that, Oscar hung up and the phone vanished as quickly as it had appeared. He flipped through the paperwork, located a page and held that with one hand while the other produced a tongue depressor in a sterile package, “Lick that and swab here please,” he said to me. Dazed, I unwrapped the small wooden device from the plastic, gave it a lick and spread the ooze on the form where he indicated. “I’m very sorry about all of this,” Oscar said as the paperwork and tongue depressor vanished. “You know how corporate gets sometimes. Mistakes happen. Big wigs don’t think like the little wigs, and so on.” Oscar looked around, almost with a hint of sadness — though it was difficult to interpret his emotions behind the layers of clown makeup on his face. “Again, so terribly sorry about all of this. Corporate will be in touch to tidy things up here, hog tie any loose ends, wrangle any problems, etcetera.” Oscar walked toward the front door and said without looking back, “Well, good luck with…well, whatever it is you people do here.” He was gone, and I have never seen him since. . My mother walked into the living room later that evening and observed me — I must have looked glazed over, sitting on the couch and staring at the wall. “What happened dear?” she asked. “I have no idea. I mean, Oscar’s gone. Seems he won’t be back. Something about a wrong address. I had to lick some paperwork. I guess he wanted the Kilpatricks from across the street.” The color fell off my mother’s face like a mortar dropping toward the earth, “The Kilpatricks moved away months ago, dear. A new family just moved in last week.” . “Oh. Oh, dear my. Oh dear,” I said. “Should we…? Should we, you know, say something?” . My mother mused for a moment before slowly composing herself and turning toward the kitchen, “No…No, I think it’s best they figure this out for themselves.” .",
            "url": "https://luddites.me/fiction/short%20story/2020/09/30/oscar.html",
            "relUrl": "/fiction/short%20story/2020/09/30/oscar.html",
            "date": " • Sep 30, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Code Generation Fail: An all the king’s horses tragedy",
            "content": "Sometimes best intentions and good ole fashioned elbow grease are no match against the tyrannical fist of Reality. In my previous post, I discussed some of the initial ambitions and achievements in my attempt to convert the Entity Framework Core + MVC project into a dynamically generated template using T4. The good news? T4 is a perfectly adequate way to generate code from templates. The bad news? There is no way to make this completely integrated in a pure .NET Core project. What does this mean, and why is this a problem? . The Story . Full disclosure: if you want something approximating a tldr; just skip to the next section. . For starters, the beauty of .NET Core is that I can compile and run a .NET Core app as easily on my Pixelbook as I can on my Windows devices. Getting a Core app up and running is just a git clone and dotnet build away! This simplicity is bruised, battered and beaten when we can’t run the transforms required to generate that code. In an ideal world, when I run dotnet build on the AutoEcMvc solution, the CodeGeneration project would compile and output the generated code into the AutoEcMvc project, which would then compile. . If this worked, the project could then drop seamlessly into Azure Pipelines which would automatically compile, test and deploy the project to my Azure app container! (It should be noted, I can still make this work, but it’s extra work that should be unnecessary). . Before I dive into the full autopsy of the deceased dream, I’ll explain my temporary solution and a few alternatives that I considered. For reasons that I’ll explain momentarily, the only way for even msbuild to work with a T4 project is to base the project on .NET Framework. In order to keep the T4 free from compilation issues (because Text Transformation happens before build, you can find yourself in a situation where the solution cannot compile without some minor hacking), I find it useful to keep the C# backing code for the templates in its own project. Unfortunately, the minimum project type that will work is .NET Standard (.NET Framework will also work, but the goal is to get as close to .NET Core as possible). For these reasons, my current solution’s solution has three projects, in build order: CodeGeneration (.NET Standard) &gt; T4 (.NET Framework) &gt; AutoEcMvc (.NET Core). CodeGeneration has only the utility functions required for the T4 project, which has only the metadata JSON and TT files, and AutoEcMvc has the user defined and generated content together. In another chapter, we’ll remove generated code from source control entirely, but for now I’m leaving it in place as a way to easily review and compare changes with the original project. . With this configuration, msbuild works seamlessly and I’ll update my Azure Pipeline to use msbuild and get my CI/CD plans back on track. I’m less than thrilled with having to throw dotnet build under the bus, but I’ve also spent more hours trying to crack this nut than I want — and I have whales need fryin’. . Before I completely abandoned the dream of a pure .NET Core solution, I explored a few options. There is Scripty, which “lets you use Roslyn-powered C# scripts for code generation. You can think of it as a scripted alternative to T4 templates.” While it sounds promising, the project hasn’t been updated in a while and seems to have outstanding issues with .NET Core. There is also the issue of documentation — any examples of converting a T4 template to Scripty would be enormously helpful. Another promising option was T5, but no amount of tinkering prevailed against the ineffable and inscrutable refusal from Core to comply. Finally, there is scaffolding built into ASP.NET Core, but this is specific to Razor pages and not really a way to keep generated code in sync with metadata in the way I want to use it. . Absent other ideas, T4 still seems like the best approach without a major rewrite. I should note, my specific use of T4 is not terribly complicated, and it would be easy to ditch the templates altogether and simply write the code entirely in C#, but then it would cease to be generic and defeat the purpose of this little exercise. I may emerge from this experiment with a different opinion, but for now I’ll assume that T4 will remain the backbone of the project (until proven differently). . As always, this has been a long winded series of asides, a slow and drifting detour from the main point: T4 and .NET Core do not mix. The latter does not abide the former. There is hostility, vitriol and threats of malice aforethought between the two. How do I know this? . My Current “Solution” . To understand the problems with trying to migrate T4 into .NET Core, I think it useful to explain the challenges presented in .NET Framework. There are two paths to text transformation. . The first is a developer convenience baked directly into Visual Studio since at least 2015. When you add a new .tt file into a project, VS immediately recognizes the template and offers a few convenience options for you as a developer: (1) whenever you save changes to the template, VS immediately runs text transform and the output is regenerated, (2) VS gives context menu options to manually transform (aka Run Custom Tool) and to debug the template, which will launch the debugger and allow you to set breakpoints anywhere, and (3) VS offers the option to run all transforms at the project/solution level. All of these features are hugely beneficial to the development of templates. But. And this is a big “but”. . The second is through msbuild which is what I would normally use in my CI pipeline. Msbuild launches text transform in a different context than VS, which means that the relative paths (e.g. $(SolutionDir) )that work in VS no longer work from msbuild. . In order to reconcile the two different behaviors, we need to make some changes to the .csproj file. Unfortunately, a project using .NET Framework has to be unloaded to be edited, then reloaded. Personally, I edit the project file directly in VS Code and let VS trigger the reload warning after I save changes. This is tedious, but it eliminates a few right-clicks. . If we start with a T4 import that looks like this: . #&gt;&lt;#@ assembly name=&quot;$(SolutionDir)CodeGeneration bin netstandard2.0 CodeGeneration.Dll&quot; #&gt;&lt;#@ assembly name=&quot;$(SolutionDir)CodeGeneration bin netstandard2.0 Newtonsoft.Json.Dll&quot; #&gt;&lt;#@ import namespace=&quot;Newtonsoft.Json&quot; #&gt;&lt;#@ import namespace=&quot;Newtonsoft.Json.Linq&quot; #&gt;&lt;#@ import namespace=&quot;CodeGeneration&quot; #&gt; . we have two immediate problems. $(SolutionDir) cannot resolve outside of VS, and our 3rd party dependency on Newtonsoft will not be available from the bin directory. Starting with the latter, you can add this into a property group in the project file: . &lt;PropertyGroup&gt; &lt;CopyLocalLockFileAssemblies&gt;true&lt;/CopyLocalLockFileAssemblies&gt; &lt;/PropertyGroup&gt; . Now, all reference binaries will be copied into the build output directory. . Next, the challenge of resolving the path to that output directory can be solved as well. A custom mapping is required, which is also possible with a little XML markup: . &lt;PropertyGroup&gt; &lt;targetFolder&gt;$(MSBuildProjectDirectory) .. CodeGeneration bin netstandard2.0&lt;/targetFolder&gt; &lt;/PropertyGroup&gt; &lt;ItemGroup&gt; &lt;T4ParameterValues Include=&quot;targetFolder&quot;&gt; &lt;Value&gt;$(targetFolder)&lt;/Value&gt; &lt;/T4ParameterValues&gt; &lt;/ItemGroup&gt; . Now, I can update the T4 imports to: . #&gt;&lt;#@ assembly name=&quot;$(targetFolder) CodeGeneration.Dll&quot; #&gt;&lt;#@ assembly name=&quot;$(targetFolder) Newtonsoft.Json.Dll&quot; . And this will work seamlessly between VS and msbuild. There are a few other changes to make, but these are much more clearly documented elsewhere. For reference here, you also need: . &lt;Import Project=&quot;$(MSBuildToolsPath) Microsoft.CSharp.targets&quot; /&gt; &lt;PropertyGroup&gt; &lt;!-- Get the Visual Studio version: --&gt; &lt;VisualStudioVersion Condition=&quot;&#39;$(VisualStudioVersion)&#39; == &#39;&#39;&quot;&gt;16.0&lt;/VisualStudioVersion&gt; &lt;!-- Keep the next element all on one line: --&gt; &lt;VSToolsPath Condition=&quot;&#39;$(VSToolsPath)&#39; == &#39;&#39;&quot;&gt;$(MSBuildExtensionsPath32) Microsoft VisualStudio v$(VisualStudioVersion)&lt;/VSToolsPath&gt; &lt;/PropertyGroup&gt; &lt;!-- This is the important line: --&gt; &lt;Import Project=&quot;$(VSToolsPath) TextTemplating Microsoft.TextTemplating.targets&quot; /&gt; &lt;PropertyGroup&gt; &lt;TransformOnBuild&gt;true&lt;/TransformOnBuild&gt; &lt;OverwriteReadOnlyOutputFiles&gt;true&lt;/OverwriteReadOnlyOutputFiles&gt; &lt;TransformOutOfDateOnly&gt;false&lt;/TransformOutOfDateOnly&gt; &lt;RunPostBuildEvent&gt;Always&lt;/RunPostBuildEvent&gt; &lt;/PropertyGroup&gt; . This is the final glue to ensure that you get identical behavior when compiling the project from any direction. . Once all these pieces are in place, msbuild should just work. . References: . T4 Parameter Directive | Pass build context data into the templates | TransformOnBuild (I didn’t end up using this solution, but exploring the project helped me resolve some issues) | . My Struggle . The next time I run into this class of problem, I definitely want to track all of my uncommitted changes and correlate each attempted fix with the relevant errors that occur which drive me to all the URLs and searches for answers as I attempt each new iteration of the fix. Then, ideally, I could blog about each stage of the journey with a little more coherence. For now and for the sake of the reader, I will simply list all of the relevant bits (that I can find in my browser history) that have led me to the conclusion that (as of this moment) T4 and Core cannot coexist. . Incomplete Solutions: . Re-implementation of T4 in Mono | T4 Templates at Build Time with Dotnet Core | T4Executer | . Relevant GitHub Issues: . dotnet build fails to generate TypeGeneration.cs on linux | Add MSBuild targets package | Several FileNotFoundException using Newtonsoft.Json inside T4 template | FileNotFoundException (System.Runtime, Version=4.2.1.0) when reflecting in T4 template | Package type ‘DotnetCliTool’ is not supported by project | PlatformNotSupportedException with dotnet-t4-project-tool | build failing — and what worked for me | . Relevant StackOverflow Issues: . T4 subtemplates TransformText() not working | TextTemplating target in a .Net Core project | The imported project “C: Program Files dotnet sdk 2.1.201 Microsoft VisualStudio v15.0 WebApplications Microsoft.WebApplication.targets” was not found | . Microsoft Docs: . TextTransformation Class | FileNotFoundException (System.Runtime, Version=4.2.1.0) when reflecting in T4 template in .NET Core 2.1 app | . As always, I hope this has helped someone with a similar quest. Please feel free to correct anything I have missed, suggest corrections or alternatives, or otherwise reach out to collaborate on solutions for this journey. .",
            "url": "https://luddites.me/metadata/retrospective/code/generation/2019/07/10/code-generation-fail-an-all-the-kings-horses-tragedy.html",
            "relUrl": "/metadata/retrospective/code/generation/2019/07/10/code-generation-fail-an-all-the-kings-horses-tragedy.html",
            "date": " • Jul 10, 2019"
        }
        
    
  
    
        ,"post3": {
            "title": "Code Generation: Connecting T4 to Entity Framework Core",
            "content": "I have enjoyed working with T4 in my .NET projects, and I have wanted to start exploring Entity Framework Core with ASP.NET Core. Fortunately, Microsoft has an excellent suite of tutorials which makes it dead simple to get a sample project up and running. I jumped straight to the end and began by copying down the project code from the ASP.NET Core Documentation repo and I started my own git repo my new and intuitively named AutoEcMvc (Automatic EF Core over MVC) project. I even went the extra mile and set up a free Azure account to host the project at https://autoecmvc.luddites.me. The challenges of connecting the GitHub project to a CI/CD pipeline for hosting on Azure will be addressed in a follow up blog post. . This project is still in the early prototype phases, but the goal is to maintain feature parity with the original Microsoft tutorial project while eliminating the majority of the code. That said, it has most of the essential building blocks for dynamically generating models and controllers using code generation powered by T4. . Before diving in further, the most obvious question to answer is: What problems does this project solve? If you have ever needed to design, extend or maintain an application that either sits on relational database or exposes a concrete set of APIs, you may be familiar with the sudden weakening of the stomach as you realize just how many lines of boiler plate code need to be written in order to get your new classes or modifications to classes ready for consumption by the compiler and the consumers of the app. Factories must be updated, new view/model/controller classes must be written. Potentially hundreds of lines of code that must be manually maintained — hundreds of lines of code that are nearly identical in style and substance to the classes that came before. With code generation, we can eliminate all of that boiler plate and focus exclusively on just the (usually) small subset of things that are actually different from our new or extended schema changes. . T4 is one code generation/templating solution that can help us solve this problem. Since we’ll be using .NET Core as our project type, we never have to worry about adding/removing new files to/from the project — that happens automatically. T4 has some idiosyncrasies and shortcomings (also the subject of a follow-up blog post), but it works well enough for this prototype that I am comfortable recommending it as a starting point. . A few goals and guiding principles that I have applied: . Code Generation should live in a separate project from the main application projects. This becomes essential as if your generated code does not compile, you can quickly get stuck in a chicken/egg/rooster situation where you cannot -pile to fix the compile. | All code templates should use structure data format for defining how to generate code. For this project, I use JSON files which represent each unique entity to be translated into actual project code. | Use partial classes everywhere possible to allow extension and custom properties logic. | Use abstract base classes to allow injecting custom logic inside the generated code. This is critical if you need custom logic to execute inside a constructor, for example, and do not want to overly complicate the templates. | Keep as much business logic out of the template as possible. | Separate generated code from user code and annotate generated code appropriately. | . If you look through the structure of AutoEcMvc, you’ll notice that there are two main projects: AutoEcMvc, which is the app that gets deployed and CodeGeneration, which is just the templating logic. I picked .NET Standard as the project type for CodeGeneration, as I ran into numerous issues trying to get the project working using .NET Core. I will revisit that in the near future. . Perhaps the single most import part of code gen is the structured data format in use. I need to be able to map my JSON back to a C# class that can be used deterministically in T4, so my Course class is defined in JSON as: . &quot;Description&quot;: &quot;A course represents a college course that a student can take&quot;, &quot;DisplayName&quot;: &quot;Title&quot;, &quot;HasControllers&quot;: true, &quot;ControllerMethods&quot;: [ &quot;Index&quot;, &quot;Details&quot;, &quot;Create&quot;, &quot;Edit&quot;, &quot;Delete&quot; ], &quot;Name&quot;: &quot;Course&quot;, &quot;DatabaseGeneratedOption&quot;: &quot;None&quot;, &quot;PrimaryKeyDisplayName&quot;: &quot;Number&quot;, &quot;Columns&quot;: [...] . Each entity has a collection of columns, and a column looks like: . &quot;Description&quot;: &quot;Unique name of the course&quot;, &quot;Length&quot;: 50, &quot;MinimumLength&quot;: 3, &quot;Name&quot;: &quot;Title&quot;, &quot;Order&quot;: 0, &quot;Type&quot;: &quot;string&quot; . Honestly, it took quite a few iterations before I landed on the current data structure — and there is still quite a bit of cruft that can be removed to polish this. I started with the model classes, because they are the simplest and require the least amount of logic overall. I opted to use a numbered naming convention for the templates as a clue to the developer on the order in which things should be done: note this is simply an opinion and has no effect on the text transform step of compile — these templates can (and should always be able to) be transformed in any order. So 02_models.tt is the first step of the process. . First, include our imports for T4: . &lt;#@ include file=&quot;imports.ttinclude&quot; #&gt;&lt;# . You’ll notice that I frequently start an opening tag immediately after a closing tag #&gt;&lt;# . This is just a trick to avoid injecting extra white space into the output file. . Second, load our schema from JSON: . var tables = BuildMethods.GetJsonFilesAsTables(Path.GetDirectoryName(Host.TemplateFile) + &quot; .. schema&quot;); foreach(var table in tables) { . It becomes easier as you scale the templates up and out to use utility methods. I have opted to store these in a static BuildMethods class for two reasons: (1) you get compile time errors that make sense if the methods don’t compile and (2) debugging is much simpler inside a C# class. You could just as easily write these in a shared T4 include, which I also do for the SaveOutput methods. Either way works just as well. The plus sides of defining methods in T4 in this way are (1) you don’t need the “BuildMethods” prefix and (2) the methods do not need to compile before the transform executes. Personally, I generally prefer the static BuildMethods approach for most of my logic. . Third, we run through vanilla T4 concepts to construct our output model class. There are far better resources on the ins and outs of T4 to waste your time here, and I’d rather focus on the nuances of trying to model entities from JSON. Perhaps the biggest hurdle at the model layer is getting the property types correct. If you look at the final output for Course.cs, you’ll notice that it doesn’t have many properties, but most of them are special in one or more ways. . First, we have CourseID which is the primary key for the Course table. Almost every table should have some unique identifier, and we can probably assume that it will be named {tableNmae}Id for the majority of cases (Person is an exception which required some custom logic). . Second, we have a relationship to Department which has the database column DepartmentID as well as the materialized, convenience property of Department. For almost all primitive properties (int, string, DateTime, etc), I use a column definition that references the primitive explicitly, e.g. &quot;Type&quot;: &quot;int?&quot;. This works well for the most part — there are a variety of cases where we need extra information, such as to specify a string min/max length. Relationships, whether one-to-one, one-to-many or many-to-many require a bit more work. I opted to use a dedicated set of types for these: [&quot;relationship&quot;, &quot;relagtionship?&quot;, &quot;relationships&quot;] which I can then use inside my type building logic to write out the type exactly the way I want without having to specify multiple synonymous properties in JSON — that is, we could have accomplished this by defining two separate properties in the column definition, but that seemed wasteful and a potential pitfall for anyone maintaining the code — forget either property and the app won’t work as expected. . Third, we write out a model file for each JSON file that’s been processed: . &lt;# SaveOutput(table.Name + &quot;.cs&quot;, &quot;..//..//..//AutoEcMvc//Generated//Models&quot;); } //foreach(var table in tables) #&gt;&lt;#@ include file=&quot;saveoutput.ttinclude&quot; #&gt; . Since I want to have a single model template generate many model outputs, this handles the writing of the individual files. T4 still generates a single, backing file — which is annoying. I set the template output extension to .ignore, which generates a 02_models.ignore file after each compilation. A post build event then deletes all .ignore files. It’s not the most elegant solution to the problem, but it works well enough. . I attacked the problem of generating the model classes from T4 by solving each class individually. From the starting project, I attacked each class in alphabetical order and committed the changes when I had each new class compiling and there were no regressions in the UI. If I were to start over, I would have written the tests first; but since the goal of this refactoring was to produce nearly 100% identical code to the original using code gen — most of the work was spent looking at the diffs to spot the bugs in my transform logic. . I would also note that this approach would be very different if I cared about producing the most well designed code/architecture. There are numerous edge cases I shimmed into the logic to handle inconsistent naming conventions; for example, if I were to write these classes from scratch, I would guarantee all properties were named consistently and could then throw away some of the custom logic required in transforms. Since the goal was to mimic the original code as closely as possible, I feel relatively at peace with the choices made to get here. . Next time, I’ll talk about some of the challenges with templating the controller classes — work that I have nearly finished. Following that, views are next up and potentially the most challenging. . If you enjoy working with T4 or other code generation technologies, let me know what your experience has been like. If you have any tips or tricks (especially trying to get T4 transforms running under dotnet build), please, please do let me know. .",
            "url": "https://luddites.me/metadata/retrospective/code/generation/2019/07/08/code-generation-connecting-t-4-to-entity-framework-core.html",
            "relUrl": "/metadata/retrospective/code/generation/2019/07/08/code-generation-connecting-t-4-to-entity-framework-core.html",
            "date": " • Jul 8, 2019"
        }
        
    
  
    
        ,"post4": {
            "title": "The Solstice Squid",
            "content": "The Squid (TS) lives at the South Pole; this much we know. How she came to live there or her reasons for making this her permanent place of residence, we do not; but we can perhaps draw some conclusions for her behavior from this simple fact. . In the depths of the ocean, deep beneath the Antarctic, where darkness reins supreme, TS watches for light. At that moment, when the Earth is on the cusp of its return from longest nights into longer days, TS reacts. Light is the celebration, to which TS brings her joy. . Riding a sleigh of sea horses through the seven seas, TS brings presents to the residents of this world, driving furiously through the night to enter each home through the plumbing that inevitably connects all water to the ocean. Flinging presents from her many tentacled arms toward whatever artifice those residents have established: be it tree of wood or tree of candles, TS gently deposits gifts she has translated from the requests buried within our tears that have flowed from our eyes and sifted down into the depths of the deep. . TS requires nothing of us from this, her annual sacrifice; at times, those who acknowledge TS can compliment her by leaving plates laden with kelp or seaweed salad near the showers or bathtubs of their homes. . As the moon rises or sun sets on the eve of Solstice, consider TS and her labors. She has considered yours. .",
            "url": "https://luddites.me/solstice/winter/squid/2018/12/20/the-solstice-squid.html",
            "relUrl": "/solstice/winter/squid/2018/12/20/the-solstice-squid.html",
            "date": " • Dec 20, 2018"
        }
        
    
  
    
        ,"post5": {
            "title": "Remoting: It’s even better and even worse than you expected",
            "content": "Billions of gallons of ink have been spilled on this subject. Google if you want any other perspective. I think this one angle has received… . Billions of gallons of ink have been spilled on this subject. Google if you want any other perspective. I think this one angle has received less attention than most (angles). . I’ve had this thought rolling around in my head since at least November of last year. Previous title ideas included: . Remoting: the terrific highs and terrible lows. | 513 things you didn’t know about Remoting but wished you did before you started. | Remoting sucks. This is why you should do it. | Want to hate yourself a little? Try remoting. | . I jest. I’m only 3/8 serious. It’s important to be accurate when you work in the field of bioinformatics and statistical analysis. . We write a lot about our technical challenges, our innovations, our problem solving and tool adoption — all of that is exciting and fun to discuss. There’s a human element, a personal element, a uniquely individual element of working in this field and in this way that I think is oft ignored, and it is to that end that I’d like to call some attention. I think it’s as important as anything else — perhaps even more so. I can have the best of the best when it comes to hardware and software, but if I don’t have meaningful personal connections to those around the campfire — it’s all for naught. . Remoting is a challenge; and it’s supremely challenging because every single person on every single team is different and unique and has their own set of needs and expectations. . For me, I have five children. My day starts around 5:45 am. I’m sure that’s pretty late for some folks — I am not a morning person. I don’t like it. But that’s my day, and I love my kids, and I wouldn’t trade it for anything. So I go from an instant on, hard focus on the kids =&gt; breakfast, kids =&gt; dressed, kids =&gt;packed and ready routine to a space from about 7:30 am to 9:00 am where I try to get a power nap and “really” get focused on the day. That almost never works. And then there’s the whole other separate reality which is my personal life vs my work life. The kids have karate, basketball, soccer, horse riding, concerts, plays, parent teacher conferences, doctors appointments, dentist appointments, play dates, birthday parties. My partner has her own life. We only have one car. Ignoring everything else about the nature of work — life is hard. . Add your job on top of that. Meetings, requirements discussions, deadlines, real-time communications, conflicts, emotional engagements in that virtual office. For some, the profession comes first and the personal comes after; others invert that; I’m sure for some it’s neutral — but the challenge of remoting is that we open ourselves up to this realm wherein these worlds are going to collide against each other. . I hope that it’s not a bait-and-switch. I don’t actually have any concrete advice or statistically significant analysis to offer to anyone. I couldn’t be the kind of father or partner or employee were it not for the ability to remote. Remoting has enabled/opened opportunities that would not exist otherwise. . Remoting is a challenge. I’ve used almost all of my sick days for vacation. No matter how awful I might feel after getting the flu, I do this, “But I can put myself in front of the computer, so I can’t cop out today” sort of self-talk. I don’t give myself the care and attention that I deserve. I work longer hours than I think I would otherwise. The lack of physical contact and interaction makes it hard to self-assess about how well I’m executing/performing. A certain neurosis can set it. . All of this is surmountable and solvable and usually (easily) addressed by just getting on a call with some other human and expressing my feelings. It’s a simple solution. But it’s an easy solution to forget. I think if I could say anything concrete or absolute, it would be that a person’s ability to recognize when they just need to physically (as much as is possible) connect with another human is the single most important criteria for determining whether remoting is right for you or no. . I stand by it. It’s not easy, but it’s worth it. .",
            "url": "https://luddites.me/remote/work/tech/2018/05/12/remoting-its-even-better-and-even-worse-than-you-expected.html",
            "relUrl": "/remote/work/tech/2018/05/12/remoting-its-even-better-and-even-worse-than-you-expected.html",
            "date": " • May 12, 2018"
        }
        
    
  
    
        ,"post6": {
            "title": "Code Generation: There and Back Again",
            "content": "I can’t remember a project (engineering or otherwise) during which I haven’t paused to ask myself: “Why did I design this thing that way?” Sometimes as a result of this introspection, I find myself feeling remorse or self-loathing, regret or the hollow embrace of ennui. Sometimes the buyer’s remorse can begin to settle in only after years of work. Sometimes the anthropomorphic representation of the design conceit simply lurks in the shadows sewing mischief as it’s able. I’ll defer to future versions of myself to conclude the relative merits or lack thereof of this particular set of concerns. . Every application — from this humble blog to the social behemoths starts with data. Most projects start with a fairly predictable set of questions: what language(s) are we going to write this thing in, what type of application is this, and where are we going to store the data? Vast amounts of our data is purely relational; equal volumes of equally critical data isn’t. At the end of the day, a relational database seemed the right choice — and most grown up databases these days support storing and searching on structured and unstructured data. . I think this choice continues to make sense. Personally, I’ve always found managing relational databases at scale at the lower end of the spectrum of things which bring me joy as a developer. Data migrations, schema changes, wrestling with referential integrity constraints as customer requirements change…the whole mess of managing data leaves a foul taste that’s difficult to rinse out. So a younger version of myself, a rather clever fellow in his own mind, came up with a solution: . Code generation! . Looking back to the earliest commits in our repo, some of the very first were the JSON files that form the backbone of our code generating homunculus. A few simple properties in our library of JSON files are responsible for generating every C# class that backs the tables in our database. Tired of a property? Update a JSON file. Need more tables, more properties, more relationships? It’s all just JSON. . This makes other aspects of developing the architecture rather pleasant. Need to create or maintain a factory? Never write another line of factory code by hand. Need certain classes to implement an interface? Automate it. Need DTO versions of your table classes? Already done. RESTful web services that automatically implement ALL the verbs for every class and every possible relationship between entities? Our homunculus did that for you the day before you asked for it. . Orthogonally, at the database tier, we made a rather nice design choice to use globally unique ids. Our first table committed to code is a simple dictionary of Ids and Types. Every other table inherits from this base table, which means that given any valid Id, I can find the corresponding dog, cat, person or object with no extra information. When it comes to representing these data structures as REST resources, our routes can be as terse or verbose as desired. If we were so inclined, the route to add a dog to a person’s pets collection could be as simple as posting to /api/{personId}/{petId}, although in practice we rarely deviate from RESTful norms (/api/person/{personId}/pets/{petId} is the actual route). . The flexibility that working with globally unique identifiers would be half as pleasant if we could not automatically create and maintain the factories required to fetch an object by id and then cast it to the appropriate implementation class. As objects mature, they often have a tendency to develop greater and deeper relationships with other objects in the database. Automatically generating these relationships and the pathways between them at every tier of our framework has been a boon. . I regret none of this automation. As long as fundamental design choices remain constant (or at least change slowly), vertical changes to the code — changes to the JSON that result in the creation/deletion of code, scales smoothly. . Life gets much more interesting as we scale horizontally — changing the templates that sit between the JSON and the final C# files. Diabolical bugs can lurk by manner of a single typo in a template, waiting to reproduce themselves across hundreds of files with the click of a button. Whitespace changes annoy to the extreme. We can (usually do) anticipate and surmount many of these hurdles. Frequent commits guarantee that noise doesn’t swallow avoidable faults. When refactoring a template, always make sure that optimization changes to the template code always produce identical outputs before other refactorings. . Changes to behavior lead to the nightmarish class of faults that lurk under the bed and are far more insidious: changes to validation logic, unique validation, how objects are cached inside a database transaction, when/how permissions are evaluated. It is trivial to change a template in such a way that crippling performance issues are immediately injected into the app. Fail to properly dispose an object, and the app can begin gradually leaking memory. Hunting down these bugs is time consuming and tedious. . Orthogonally (yet again), the technology choices we made to drive code generation are somewhat dated by today’s standards. T4 would be far easier to maintain than our antiquated format; and we have inconsistencies in where template code is defined: inside the template itself or in an external “code generation” project which has to be compiled before the templates can run. While it all technically works, the cost to maintain the code gen library has only increased over time — and the cost to refactor the project to use modern frameworks is difficult to justify relative to providing new features that someone would be willing to pay for. . We have extracted a tremendous amount of value from this design decision overall, so I cannot condemn the philosophical approach we have taken; but within that bundle of ideas, design and technology choices there are multitudes of tiny decisions that certainly could have been better planned with an eye toward the future. The elegance of the design choices that I admire sadly must coexist with a certain amount of spaghetti, but such is the nature of development at times. . I suspect these dichotomies are somewhat ubiquitous in nature, but I do look forward to the opportunity to either perfect our approach to code generation or discover a superior path forward. .",
            "url": "https://luddites.me/metadata/retrospective/code/generation/2017/10/24/code-generation-there-and-back-again.html",
            "relUrl": "/metadata/retrospective/code/generation/2017/10/24/code-generation-there-and-back-again.html",
            "date": " • Oct 24, 2017"
        }
        
    
  
    
        ,"post7": {
            "title": "The Tetraktys by Pythagoras",
            "content": "Mr. George Pyncheon bolted upright in bed and stared at the ceiling for a moment, before he reached to the corner stand at his bedside to pick up the phone. His fingers trembled in the spaces between the buttons on the phone as he hastily tried to dial his office. The trembling in his fingers had shifted to his voice. . “Ms. Mansfield?” . “Yes, I’m very sorry — I won’t be in to work today.” . “Sick? No, no — nothing like that. No, quite the opposite, I feel wonderful.” . “Well, it’s just that — I’ve discovered something, something quite incredible.” . He paused to inhale deeply; the air raked across the roof of his mouth, gurgling in little eddies as he tried to exhale in the same moment. His fingers danced along the handle of the phone, and he struggled to maintain his grip. . “Yes, I know it’s a rather unique request.” . “Of course, I am just an accountant — you needn’t stress over that.” . “Yes, well, I just need the day off — this is enormous, you see; it will change everything.” . “No, no — I imagine that it’s sort of a permanent change.” . “No, of course I’m not quitting, I’m talking about the discovery.” . “Perhaps, tomorrow. We’ll see. Goodbye.” . Martha Pyncheon rolled onto her side and judgingly watched George leap out of bed, as he rushed to his dresser, flinging clothes into the air, a few of which lighted atop his head. . Rushing into the bathroom, George quickly dressed, barely stretching his arm through the sleeve of his shirt in time to rescue a toothbrush his other sleeve had aggressed. Walking back into the bedroom, he found Martha staring at him with a mixture of contempt and apathy. She began, . “George, whatever are you doing?” . “Martha, it just struck me. I’ve had a most singular revelation. It’s going to change this whole muddled mess of things.” . “I hadn’t realized there was a mess, or that it was muddled. What are you talking about?” . George paused to look about the room, apparently searching for some visual aid to help his forthcoming explanation. At last, he said, “Come to the kitchen — I’ll show you.” . Martha detachedly watched George as he sped through the bedroom to the kitchen, letting his clothes struggle desperately to keep pace and eventually finally make their way onto his body. For a moment, George stood restlessly in the kitchen, glancing about at cabinet doors, while he finished pulling his pants up to their appropriate height. At last, his gaze settled on a drawer, which he quickly pulled open. . With a satisfied smile, George called out to Martha as he began pulling four apples out of the drawer and placed them on the counter. Time passed. George found himself pondering the nature of breakfast and was absentmindedly lifting one of the apples to his mouth, when Martha emerged into the kitchen. . “Well, George, what is it?” . The question called up to George as if from the bottom of a staircase, which he presently began descending for reasons he could not accurately define. The stairs seemed solid enough to him, though he could not quite fathom why they needed to be employed at this moment. At last, he had reached the question and begun to size it up, when his wife repeated, . “Well? What is it?” . “Oh yes, quite right.” George slowly looked about the kitchen. He felt certain that something of great importance had brought him here. “Just a moment.” Searching for a clue, hint or remnant of purpose, he continued, “It will come to me; I’ve just forgotten momentarily.” . His wife heaved a sigh from her shoulders and turned to exit the kitchen. “I should have known.” Taking a step forward, she stopped and looked at him briefly, “George, go back to bed, or go to work, or do something useful.” . George nodded as if he had heard her, mumbling automatically, “Yes, dear;” while his eyes made a quick escape through the office of his mind, stopping at the doorway to render a sharp salute, before they about-faced and began to march the line along the counter from the sink to the row of apples. Finally, his mind peered up from its desk, rushed forward through the doorway and apprehended the eyes en route back to the apples. Taking them firmly in hand, mind and eyes approached the four apples and stood resolutely and placidly as if waiting for a sign. A minute passed. . “Martha! Martha! How silly of me — I’ve remembered. Of course! Come here. Quickly, now. Have a look at this!” . A voice called from the bedroom, “What is it, George?” . “You have to see it to believe it. Come here!” . Martha reemerged into the kitchen, barely catching up to the sigh, which had preceded her. “Yes?” she asked, fatigued. . George stood with the eagerness of a schoolboy, who has finally arrived at the right answer after repeated failure. “Watch this.” George paired the apples apart. “Look, there’s four of them, right?” Not waiting for an answer, “Well, there are two of them on one side, and another two are on the other side.” George paused, “You see?” . Martha made no move to answer. “Look here, the two plus the other two equals four. It’s so simple; it’s amazing.” . Martha met George’s eagerness like she might have met a stray cat with a broom. . “George — you’re an accountant, not a philosopher. Come back to bed.” Almost turning to leave it at that, she thought better of it and continued, “Besides, you haven’t considered the drawer yet. You may as well say 16+7=4; it’s all the same thing. Any child could tell you that, George.” . “No, but Martha, I’m not talking about the apples in the drawer. I’m only talking about the four apples on the counter. Pretend the others don’t exist; or better yet, pretend we’re not even talking about apples at all, just the numbers themselves. I think that 2+2 always equals 4.” . “George, look, there’s no use being foolish this early in the morning. You can’t dismiss all of the numbers that do exist and pretend that only a few of them matter. Look here, ‘two’ doesn’t exist. You know that. Or look at it this way, does it matter whether we call it two apples or a couple of apples? No, of course not. It’s just an adjective. A descriptive adjective. It doesn’t mean anything. We could just call them a group of apples, or we could pick any other word to describe them: two, three, fourteen — it doesn’t matter.” Sensing that George still needed further coaxing, she continued, “Look, let’s say there’s just the one apple — to use a metaphor. We know that one apple doesn’t exist. Of course not. There has to be a tree to make the apple, which means that other trees with apples have to pollinate that tree, which means that ‘thousands’ of apples and seeds and trees have to exist to produce the illusion of this, one apple. There’s never really one or two or four. You know that.” . “Yes, of course, I know,” he said rather sheepishly; “but if you didn’t consider all the rest of them. What if we just pretend that the only apples that matter are these four apples, these four on the counter here? We could take them and say that 2+2=4 or 3+1=4 or anything else we wanted. You see?” . “George, if you want to wake me up every time you feel like playing make-believe, don’t. Stop this nonsense and come to bed.” . “But why is this nonsense? Look, it’s plain as day. 4 apples. 2 groups of 2. 4.” . “George…” Martha stopped to run an angry hand over her eyes, “where were the apples before you put them on the counter? In the drawer, right? Where will they be in an hour? Who can say? Maybe back in the drawer, maybe eaten, maybe they’ll be thrown out with the trash, right? Well, it stands to reason that they only appear to be in groups of two for the moment — because you don’t really know where they are. It’s only an illusion, George. It doesn’t mean anything. You might as well try to figure out everywhere they’ve ever been and everywhere they’re going to be. You have to realize, George, that you can’t say anything real about them. The sky isn’t blue, now is it, George?” . Flustered, George responded, “No, of course not.” . Pressing him, Martha continued, “And it’s not pink, either, is it?” . Reverting to his schoolboy form, George almost recited, “No, colours are just an illusion, a product of imprecision. Everyone knows that.” . “Yes, and numbers are the same thing. What appear to be two one moment may be three the next moment. Numbers are inefficient ways to describe temporary abnormalities.” . George looked down at his feet and almost pleaded with them to agree with him, “But what if they weren’t? I mean, who says that they have to be temporary or abnormal? What if we just pretended for a moment that there was some real, definite and quantifiable way to look at these apples? What does it matter if the quantity changes? Couldn’t we just add them again afterwards?” . Martha almost struck George across the face, but in a quick feat of composure, resumed her lecturing. “Look here, if numbers were real, you’d be separating groups of apples into twos, ‘adding’ and ‘subtracting’ constantly. Don’t you see? You’d never be saying anything about anything else. Isn’t that what’s most important, George — saying something true? There’s no way to make progress by controlling the ‘number’ of apples. You see that, don’t you? You’re trying to impose your own system of order where it doesn’t belong instead of trying to say what can be said.” . Martha felt relieved. She had established her point, and George would surely accept it. The matter had been resolved satisfactorily. Pleased with herself, she finished, “No, George, you just stick to accounting; and all will be well.” . George was not, however, entirely convinced. “But…Martha, what if…you see, we could use the same sorts of numbers and arrange them to describe all of that. Wouldn’t that be grand? We could describe the number of apples coming on to and off of the counter just as easily as we liked. It would be no problem,” he paused, “really, it wouldn’t.” . The cool composure that Martha had struggled to achieve flew out of her with an exasperated cry of rage. “George, you ignorant fool! Sometimes I wonder how our marriage lasts! You self-conceited pig; you dumb ass! Don’t you see? You’re just trying to control the world. You feel dissatisfied with your place, because of some sick, twisted envy or greed for power that has overcome you. By ‘quantifying’ and ‘collecting’ you introduce some measure of control over a world that will not be controlled. You become powerful, assertive, aggressive, and for what? It’s a pleasant delusion, George; I agree with you there. But have you thought about the cost? The terrible cost? Where could we find freedom in a system that imposes such ridiculous and inconstant rules — or any rules at all? You do support, freedom; don’t you, George? Of course you do — you’re not a traitor, stupid as you are. We need to stay focused on what’s real, what’s important — on the things that matter.” . “Why shouldn’t this matter? It could be useful, helpful even. Imagine if I could tell Harry more than ‘Yes, we have money today,’ or ‘No, Harry, no money today.’” What if I could tell him, ‘Harry, we have 28,000 dollars.’? What might that be like? What if we created business exchanges based on quantities — on numbers?” . “To accomplish what, exactly? Look at the apples, George. Look at them! Do you see any numbers there? Are they separated into any groups? No! Do you know why that is? Because they don’t exist! Because you imagined them and imposed these things upon the apples. Where is a ‘one’? Do you see ‘one,’ because I don’t? Now stop all of this before you make me more upset than I already am. Stop it at once!” . George felt like the schoolboy, who had been publicly humiliated by the teacher, though he still felt certain, perhaps even more certain than he had been before, that he was right. . “Martha, listen to me — ” . But Martha had had quite, “ENOUGH.” With that, she stormed out of the kitchen to the bedroom. George stood by the counter, staring resolutely at the apples. The sound of dialing wafted into the kitchen with the scent of his wife’s perfume. He was vaguely aware of some rapid, hushed dialog; though, his mind paid attention only to the groups of two that he observed beneath him. After a moment, he was aware of the sound of a handle being placed quietly on the receiver. Cautiously, he turned and approached the bedroom and peaked through the doorway to look at his wife, who sat huddled on the bed, her knees drawn up to her chin. She was crying, he noticed. . “Martha, Martha — what’s the matter. Why are you crying?” George began. . “George, are you ready to drop all this nonsense about numbers and apples?” She raised her eyes over the knees she had hid them behind to look at him, slowly wiping a tear from her eye. . “Martha, perhaps I’ve explained it all badly. Let me try again in a way that won’t upset you.” . “No, you needn’t bother, George.” Martha sobbed. “There’s someone I think you should talk to.” . The car ride passed in silence. George stared out of the passenger-side window of the car into the countryside. As the car ambled along the road, George caught his eyes and mind closed within their offices, calculating odd sums, counting telephone poles and bridges, and creating little equations. George left them to their business and looked at the heavy silence that sat like a wet loaf of bread between him and Martha. He briefly considered eating his way through. In the end, he followed his eyes out the window and passed the car ride agreeing with his own conclusions. He didn’t turn back to look at Martha until he noticed that the car had stopped moving and the engine was cold. . “George, are you still certain of these little ideas of yours?” . “Martha, I feel as if I’ve never been more certain of anything in my life. The whole countryside seems to be alive with sums and calculations. I don’t know how I could have missed them for so long.” . Martha struggled to maintain her composure. She felt tears welling up inside her, but resisted them with the desire to be strong for her husband, who needed her now more than ever. “Ok, George…” she paused to wipe her palm against her brow, “…I just hope Mr. Laughton can help.” . George felt as if there was something very large that should be obviously apparent to him that he could simply not make out. “Help? Whatever with?” . Stepping out of the car, Martha said, “Just follow me, George.” . George followed her automatically. The office building that stood before him made no impression on George. It seemed to him to be vaguely familiar, if only because it looked like every other office building he had ever seen. The only distinguishing characteristic that drew George’s attention stood against a sign, which faced inward toward the building, showing the word “Integration” to all the open windows of the office. George followed Martha into the lobby towards a receptionist. . “Well, well, welcome,” the rosy woman greeted them. The receptionist briefly glanced at a clipboard on her desk. Smiling broadly, she said, “George, Martha, so good to see you. Mr. Laughton is waiting for you.” . “Thank you,” Martha said. . “Wonderful, wonderful. Marvelous.” . Martha pointed George in the right direction, and released him like a wind-up toy. Martha began to follow sadly behind him, when the receptionist quietly motioned to her. . “Pardon me, Martha, how bad is it?” she whispered. . “Worse than you can possibly imagine.” . “Don’t worry, there’s a girl. Mr. Laughton will know what to do. No worries.” . George and Martha had stood in the waiting room less than a moment, before Mr. Laughton appeared, a mountain of hand-shaking and ‘how-are- you’s. Laughton’s face had almost been split in two with the smiles that flashed across it in rapid succession. . “Well, well, what a wonderful surprise, what a pleasant surprise we have here. My goodness, my. Yes, wonderful. Well, what seems to be our little problem? Yes, what indeed? What seems to be our situation? Goodness. My. And how are you George? Looking wonderful. Yes, my — goodness. What can be done? What can I do?” . Martha gushed, “Oh, please Mr. Laughton, you have to help him. You simply must. Please, he woke up this morning half-mad, talking about twos and fours, apples, and a whole lot of other nonsense; and he won’t give it up. He’s even getting worse, talking about ‘certainties’ and ‘equations’ and who-knows what else.” . “Who-knows, indeed. Oh my! Goodness! George? What’s all this? Come, George, tell me what’s on your mind. What can be done, I say. I say, what can we do?” . George stared down at his feet, wondering fleetingly how a sheep might describe the look. “Well, it’s just that…” he paused to take a deep breath, “…I was looking at these apples this morning, four of them, you see; and I noticed that you could divide them into two groups of two and then add them back together again to make four, you see. Well, I was rather thinking that you could do that in general.” . “I say, what? Divide apples, you say? In general? Come George, let me have it all.” . “Well, yes, of course apples, I suppose; but I was thinking that you could make a sort of general principle out of it, you know. Like, you could say 2+2=4.” . Martha spurted, “Do you see what I mean? I’ve been arguing with him all morning, but he just won’t listen to reason. You see how he is.” She pouted, jabbing her thumb toward George. . Laughing vigorously, Mr. Laughton said, “Martha, why don’t you wait out here, while I talk to George inside.” . Turning, he took George by the arm and led him through the doorway to his office. Laughing and closing the door behind him, he continued, “Wonderful! Marvelous! George, of course you can! 2+2=4? Quite rich, George. Quite funny. You’re absolutely right, George. Quite right. Let me show you something.” . George looked around the small office, while Laughton searched his bookcase for a specific volume. The bookcase itself, was little more than a piece of rusted wire, bent and twisted in a long series of angles, upon which sat a great many volumes, resting against each other unevenly. Between George and the bookcase stood a tall, gold-framed picture of a dark, mahogany bookcase, filled with leather bound volumes. Next to the bookcase sat a cardboard box, upon which someone had scribbled, “Desk.” Another picture sat adjacent to the box, featuring a mahogany desk in the same style as the bookcase. Behind the desk sat a metal, foldout chair, next to which stood a picture of a high-back, leather-upholstered chair. In front of the box, George noticed another foldout chair, next to which stood a picture of a long leather couch. . Turning from the bookcase, Mr. Laughton said, “George, have a seat on the couch; make yourself comfortable. Relax, George, that’s the thing. Nothing to stress over. No reason to be uncomfortable. Oh no! Not here, George. No reason at all.” . George sat down in the chair. . “That’s the spirit, George. What do you think about that couch there? It’s fresh in from Europe — very expensive, very, I dare say, sheik. Oh yes. My! Goodness! Now…about your revelation, your little hypothesis, let’s have a look.” . Mr. Laughton retrieved a book from the top shelf and turned toward George. “2+2=4? Wonderful. Marvelous! It’s so avant-garde. It’s so prosaic. Very post-modern. Very, dare I say, edgy. That’s the thing, when you’re writing poetry; you want it in their faces, upfront and uncomfortable. I dare say. Not like here, not like now — oh no. You want to express something. Am I right?” . “Well, yes, I do suppose that’s right. I do want to express something — ” . “ — Of course you do, my boy, of course you do. Are you familiar, I wonder, with some of the ancient Greek poetry? I dare say you aren’t. It’s very dry reading, very drab, very prosaic — but quite profound, quite unique.” . Taking the volume in his hand, he walked towards George and handed him the book. . “Here’s a fellow, quite extraordinary, quite delicious, name of Euclid. Take a look at him now, if you like. Quite harmless, quite vague. He has written a neat collection of poems there in a unique “Earth meter,” I believe. He coined the phrase, you know. Very edgy. Of course, it’s a question of interpretation, mind you. Is he talking about sunsets or rose gardens? You see where I’m driving at, do you not? You see my direction?” . George opened the book and turned a few pages. “A point is that which has no parts.” . Flipping through the book, he looked up, “What if…I mean…suppose we interpreted him literally, you know?” . Mr. Laughton paused and scratched his head before an enormous grin united his ears. . “George, it might be genius! I think I see where you’re driving at, George, where you’re driving to — this is interesting. Very. Perhaps, you’ve been wasted as an accountant. Perhaps you should have been a schoolteacher for literature. Your grasp on these things is quite intuitive. Perhaps you are right. It could be that Euclid is using poetry as a medium to speak philosophically. There was that undercurrent of ambient philosophy with the Greeks — their form is always so legalistic, so rigid — always so difficult to understand what they were trying to say. But that’s another matter, George. Quite another, distant matter. The important thing, the thing of importance, the thing I cannot stress enough, George, is that all of this is quite normal. Quite usual. Quite healthy. You wouldn’t believe the quiet, normal people who come in here for a quick spot of advice on their way to work, now and again.” . “So other people have had the same thoughts?” . “Oh my! Yes, George. All the time. They just need a push in the right direction, like you, to help them say what it is that they want to express. Sometimes, you get a notion in your head, and it becomes difficult to separate this thought from the Truth. One moment, you don’t like your job, or you have the thought that you’d be better off skydiving than accounting. You don’t like skying diving, do you George?” . “Why, I suppose not, no,” George said. . “Of course you don’t. But sometimes you have this thought, and the next thing you know the only thing in your life worth a toss is the idea of throwing yourself out of an airplane. You see what I mean.” . “Well, I’m not sure that I do; I’m not sure how all of this relates to me. I just had this idea, you know…I don’t really see what all of the fuss is about.” . “Ah! Hrmmm…I see…Well, George, I hadn’t wanted to get into this — but, well, perhaps. Let me put it this way, George. We, you and I, George, are not terribly smart men. We’re competent, I dare say, technically proficient, you know — we function well, you and I. We are not great minds. We are not ‘the thinkers,’ George. There have been and will always be the great minds. These men wrestle with ideas. They’ve been doing it since the Greeks. Now, you would object to a carpenter, who began to lecture you about how to perform accounting, would you not? I dare say you would. As would I. Well, in the same right, it is the job of the great minds to do some amount of thinking. I say, it’s their job, you know. They think these thoughts; I say, these things have been thought through. They’ve been decided. Resolved. Sometimes, it’s true; the great minds have a change of opinion. Evidences come to light. Proofs. It’s true. It happens. But look at yourself, George. Are you a man to challenge a carpenter? Will you build a better house? Have you the tools, my good man? I mean, of course, have you studied? Have you been to university? Have you trained? Have you researched and conferred with peers the same caliber as yourself? No? Well, I am not such a man to be arrogant about these things. Not so proud that I dare to challenge what men smarter than myself have learned. Do you not think they are men just like yourself, with the best intentions? Men after the Truth? Men looking out for the good of their work and the pursuit of freedom? Do you not? These are men of science, George. Men of Progress. Yes. Now, I know you, George. You’re no more arrogant than I am. No, clearly not. You’re right of course, men have ideas. You have ideas. This is the right and proper thing for men to do. But more than this, George, we must learn how to express ourselves. That’s the thing. Thoughts crave expression. Expression is part of Freedom, is it not, George?” . George nodded his agreement. . “Of course it is. Now, we are civilized men, you and I — we are properly progressive. We are supporters of the Institution of Freedom, are we not? We are not the types to cry ‘fire!’ in a theater. We are not treasonous. No. We are both servants, you and I, to our proper commissions. There is no great fuss, you see — no cause for alarm. We must strive to do our best by doing that which we do well, as we have always done. You see what I mean, don’t you, George?” . “Well, yes, of course. I suppose I do. I hadn’t thought of it all quite like that. You must be right, I’m sure.” George paused to look at the picture of the bookshelf. “That is a lovely bookcase.” . “Quite right, George. Quite. Hmm…the bookshelf? Oh, yes.” Mr. Laughton paused to allow himself a confident grin. “Yes, I suppose that they do allow me certain privileges, certain liberties. It is a positive, yes. But these fine things,” he gestured toward the whole room, “are as much for your comfort and pleasure as they are for mine. I am only a servant.” . “So this has been studied before, I take it? The great minds have researched it?” . “Quite thoroughly, George. Quite. Volumes have been written. Critical responses. Whole libraries of poetry have been dedicated to questions such as these. The important thing, I say, the thing to note is that we know how to express ourselves. We do not wish to run about shouting that the sky is blue or the world is round or any such nonsense, not unless we mean to make a point, unless we mean to say something about Truth, unless we are exercising our Freedom, George. As long as we recognize the metaphor for what it is, we are free to use it however we feel.” . “So I’m free to use it — ” . “ — Free indeed, George! Free indeed. We mustn’t do anything to jeopardize Freedom, George. That is the golden rule, dare I say, the only rule. We cannot challenge our universal right to freedom — that is the thing that must be protected, valued, I say, defended at all costs. You are free to be free. And this great charge has but only one price: you must not limit freedom. It must free to grow and expand, as it will, free to flourish. Yes. If I were a smarter man than I am, I might speculate that this very notion may have been present before the great minds when they decided on such things as numbers and adjectives and metaphors — this very notion may have prompted their studies, their diligent inquiries, their painstaking research in some small way. But this is my speculation, mind you; only my humble hypothesis shared between close friends, only a wild guess — not a fact, not by any means a certainty. The important thing, George is that you not challenge the march of Freedom. Certainly not.” . “I believe that I begin to see your meaning,” George began. “I must confess, I hadn’t thought of these things quite this way before. I hadn’t realized — ” . “ — Worry not, George! You have no reason to feel anything but totally liberated, totally free. As I said in the beginning, there is nothing to worry about. Nothing unusual. No fuss, I dare say, no problems whatsoever. Martha, no doubt, has your best interest always in mind, so to speak. Marriage can be trying, you understand. It’s easy to react, to overreact, to jump to conclusions, I won’t wager. Easy to misunderstand. That’s why we must be careful, considerate, ‘forgiving’ so to speak. There’s no fault to be found, no reason to be ungrateful. No, no, quite not. Quite the opposite. Wonderful, really, all of it. No, I’ll just have a quick word with her to explain today’s misunderstanding, a quick note of reassurance passed between friends, a quick chat to sooth the seas.” . George stood up from his chair, looking most pleased and grateful for Mr. Laughton’s sudden proposal of kindness. “Thank you. I would appreciate it. You know…” . George stopped to peer again at his feet, which had been hidden so recently beneath the chair; satisfied that they were each in order, “You know, I do hate to be a bother.” . Laughing and smiling preceded Mr. Laughton’s reassuring, “Bother? Don’t be absurd, George. No bother at all. None whatsoever. None at all. This is all quite usual. Quite normal. Ordinary. I am your servant. Just ask Margaret on your way out, and she’ll have transportation arranged to your office. No sense missing work, am I right, George?” . “Oh, yes, most certainly. Thank you again for your assistance. I shill be on my way, then.” . “Anytime, George, anytime. I am here for you. For you, I dare say, I am here.” . Moments later, George observed his feet as they stood on the edge of the sidewalk looking toward the road. An unmistakably plain van pulled around the corner and stopped in front of George. Stepping between a picture of a stretch limousine and the door, he climbed into the vehicle. “To the Ministry of Accounting, then, George?” the driver asked. . “Please, if you will, thank you.” . Mr. Laughton took Martha into his office with the grave air of a surgeon about him. His many smiles had been replaced by concentrated frowns. . “Martha…” he paused to place a hand on her shoulder, “you did the right thing, I say, the thing to do. George is in bad shape, Martha. It’s not the worst I’ve seen. I have seen worse. We need to watch him, though; keep a close eye on him. The thing to keep in mind through all of this is that you don’t want to keep the embers burning. You don’t want him to flare up again. You don’t want to fan the fire. You don’t want to suggest that his delusions are in fact delusions. You want him to feel quite ordinary, quite free. The feelings are the thing. When these common people snap, when the common man suffers from these mental fancies, when they take their dreaming a step too far, you must humor them to a point — to a point, Martha. We want them to adjust properly. Believe it or not, nothing is more dangerous to the cause of Freedom than the common man. The confused thinker, the dissident mind, that ghastly, uneducated mind, which begins to make leaps without a proper foundation, can incite a most unfree spirit among its peers. . It’s not the thoughts that are important so much as the feeling. That sense of challenge, of pride, of awful vanity can spread infectiously from man to man. No, at all costs, George must not suspect that anything is wrong. Nothing unusual about his thoughts. He must believe them to be quite usual. He must begin to express himself properly. As I said, Martha, you did the right thing. Quite. But let us not react too violently to his thoughts. Let our reaction be of no reaction. Interpret his meanings for him. Compliment him on his cleverness and quick wit. That’s the medicine, that’s the ticket to be bought, that’s the course to be followed. Of course, do let me know if the situation becomes worse. Measures may need to be taken. Measures may be needed. We may need to follow certain paths. Indeed. Quite.” . Martha extended her thanks as she nodded seriously throughout Mr. Laughton’s prognosis. Exiting the office, she allowed herself a sigh of relief. Once the door had been shut, Mr. Laughton turned toward his desk, glancing about the room. “Now, where did I set that Euclid?” . Seating himself in his cubicle, George glanced up to look at the picture of his workplace, which portrayed a solid cherry desk, several gold-trimmed leather chairs, and a series of other odd pieces of furniture. Shifting uncomfortably in the metal foldout chair, upon which he sat, he grasped the ringing phone. “Hello?” “Yes, of course.” . George stood and walked toward the department manager’s office. He had barely begun to knock when the door swung open to greet the manager himself, who peered down at George through a pair of horn-rimmed glasses, which seemed to be struggling desperately to remain in place atop the manager’s nose. Smiling enormously, he swept George into the office with a broad welcome. “Well, George, it’s good to see you. Come in, come in.” . The manager closed the door behind him. . “We’re all so glad you’re well. Ms. Mansfield told me that you had called in sick; now, here you are, right as rain! I talked to Martha a few moments ago — she called to make sure you had arrived here safely. I just wanted to talk to you privately for a moment, to express how valuable you are to this department. You are valuable, George. What’s more, to show our appreciation, I think you may have noticed that we have taken the liberty of refurnishing your office. How do you like it?” . George beamed, “It’s wonderful, thank you.” . “Think nothing of it, George. We’ll spare no expense for you, George. Not for you.” . The manager stopped as if to assess the situation. Apparently finding everything in order, he continued, “Well, that about covers it. I can expect the usual finance report from you today?” . Nodding assuredly, “Yes, of course.” . “Wonderful. I know you haven’t had a chance to go over the books yet, so to speak; but can you tell me ‘off-the- record,’ have we got any money?” . “Yes, I would say that we’ve got quite a lot of it.” . The manager laughed instantly and heartily, “That’s too rich, George. Quite a sense of humor you’ve got. Keep up the good work then.” .",
            "url": "https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/2017/07/15/the-tetraktys-by-pythagoras.html",
            "relUrl": "/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/2017/07/15/the-tetraktys-by-pythagoras.html",
            "date": " • Jul 15, 2017"
        }
        
    
  
    
        ,"post8": {
            "title": "Apeiron by Thales of Miletus",
            "content": "I opened his heart on the kitchen counter this morning with a pairing knife and a garlic press. His body lay still, still warm on the hearth as I worked; and the dawn still played table tennis with the snow — returning awkward beams of light back and forth from the heaven to the ground. His flesh was less malleable than I had anticipated. It lacked any of the phantom palpitations I half expected from late night and early morning movies, but it moved between my fingers in a way that almost felt conscious. That he didn’t give it to me doesn’t lead to the conclusion that I stole it. Quite the contrary. His daughter pleaded with me to take it; and now we stand together in the act of its dissection — morally, if not literally. . Of particular interest to me is the right ventricle. I long suspected it to be deficient in at least one capacity, and it is now my good fortune to arrive at a firsthand, concrete resolution. .",
            "url": "https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/15/apeiron-by-thales-of-miletus.html",
            "relUrl": "/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/15/apeiron-by-thales-of-miletus.html",
            "date": " • Jul 15, 2017"
        }
        
    
  
    
        ,"post9": {
            "title": "Arkhē by Heraclitus of Ephesus",
            "content": "The mechanic paused to wipe the grease from his hands across the murky surface of his coveralls before he grabbed the x-ray from the rack overhead. A cigarette clung precariously to his bottom lip as he held the x-ray up against the light of a lone, white light bulb swinging at the end of a length of electrical wire. Looking away from the x-ray toward a chart posted against the wall, the mechanic walked steadily towards the man on the operating table. . “Well, Mr. Guthrey, she don’t look good — and that’s a fact.” The mechanic spoke quickly, carelessly slurring his words together as he brushed grease stained fingers across the x-ray. . “Now, I’m thinkin’ we ken go in right through here — quick in, swap her out, and have you up an’ running ‘n less than two hours. But here’s tha thing….” The mechanic paused to stub his cigarette out on the corner of the operating table as he leaned in closer to the patient, speaking more hurriedly and anxiously. “The whole block’s gotta come out. The whole dern thing. I mean, it’s bad through ‘n through. Plain bad. Now, yer good for 2…maybe 3 weeks after I swap out this here part; but we’ll get those parts on order, get that new block in, have it here for you Monday, whenever yer ready, bring you in, swap’er out, in — out, good as new, no more than a few hours parts and labor.” . Mr. Guthrey stared at him for a moment from the table, “I just don’t know, Ted.” Pausing to scratch his head, he continued, “I don’t know — can’t you just rebuild it?” . The mechanic paused to scratch his head, lighting another cigarette as he returned to examine the x-ray. “Well, I mean, here’s the deal…I pull that sucker out an’ start workin’ on her, no tellin’ what can happen, no sir, no way to know. I mean, I get her open’ up, no tellin’ what all’s messed up in there, what all’s gone wrong. The heart’s a funny little contraption, and that’s no lie. I mean, say I get her out and realize that I can’t do it? Say she’s blocked up something awful? Say she’s just plain unfixable? Well, then yer stuck on the arty until Monday anyways. Nope. No sir. Don’t feel comfortable with that. Not a bit. If it was a kidney, you know — no problem. Take that puppy out, have her fixed up, good as new, stick her back in whenever yer ready. No problem. But this here…” he said gesturing towards the heart, “is the meat ‘n potatoes of yer whole operation.” . “Well, Ted, I’m just not sure — do you mind if I get a second opinion?” . “Not a problem, Mr. Guthrey. Bill’s just down the street; and you know Phil’s across town — he’s a good mech; and you know I’ll match prices with any of the locals.” . “Sure thing, Ted, I’ll let you know.” . “Well, don’t think about her too long, now — that right ventricle…she’s going down. Any day now, I swear. Got the parts right here, you know. Just you be careful. Keep putting in premium ‘till we get that baby out.” . “Will do, Ted.” . The mechanic waved at Ted and turned to walk into the shop’s waiting room. “I can take another customer in bay three,” he said. . A big man, farmer type stepped up and followed Ted into the bay. Turning, Ted looked at him and asked, “Well, sir, what ken we do for you?” . “Well, I just need a tune-up, really; but my knee has been making this funny noise lately. Can you take a look at it?” . “Sure can. Why don’t you have a seat and describe that noise for me.” .",
            "url": "https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/14/arkhe-by-heraclitus-of-ephesus.html",
            "relUrl": "/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/14/arkhe-by-heraclitus-of-ephesus.html",
            "date": " • Jul 14, 2017"
        }
        
    
  
    
        ,"post10": {
            "title": "Currying Favor with Partial Application to get JavaScript SQL",
            "content": "Editor’s Note: This is an old post from March of 2013, from an old blog. Apparently it still gets enough hits to need updating as links have changed. Re-posting it here with URL corrections. . There is a domain that attends to curry as one of the quintessential elements of regional cuisine. This is not that domain; though in this domain I would argue we need a paprika. . If the terms curry or partial application are at all unfamiliar to you, I highly recommend Reg Braithwaite’s latest opus on the subject. Lending support are +Ben Alman with his own eviscerating tour de force as well as +Axel Rauschmayer with his very, extremely, routinely reputable entry. If you’ve ever followed me here before, you may remember a fog surrounding an idea that touched on partial application from Good Reads, where I linked to (again to Mr. Braithwaite) the skinny. . Do not be confused, dismayed, disheartened or discouraged. Currying and partial application are not easy-to-grok. The literature on the subject, while vast, is dense. Even in the most skilled hands, attempts to bring these tomes down from Mt. Sinai, have not routinely resulted in greater clarity. . But this is not yet-another-indoctrination on the subject. Defer to the authorities above for that. Here, I’m attempting to exploit the potential for good. Using both ingredients, it is possible to create a semantic for querying JavaScript objects in a syntax that resembles SQL. Are there other solutions to do this? Yes. . Once you’ve apprehended grokation of the concepts, it should be straightforward to see the implementation of a few partial application standard methods: map, filter and fold. Lots of libraries have already done the diligence and written these for us but for the sake of having something to write, let’s implement them again (In the real world, you’re better off taking what functional js or wu.js have already built)! . function curryLeft(func) { var slice = Array.prototype.slice; var args = slice.call(arguments, 1); return function() { return func.apply(this, args.concat(slice.call(arguments, 0))); . } } . function foldLeft(func,newArray,oldArray) { var accumulation = newArray; each(oldArray, function(val) { accumulation = func(accumulation, val); }); return accumulation; . } . function map(func, array) { var onIteration = function(accumulation, val) { return accumulation.concat(func(val)); }; return foldLeft(onIteration, [], array) } . function filter(func, array) { var onIteration = function(accumulation, val) { if(func(val)) { return accumulation.concat(val); } else { return accumulation; } }; return foldLeft(onIteration, [], array) } . With just these, we can do something that’s almost cool. We can extend the native Array class to add some new methods: . Object.defineProperties(Array.prototype, { ‘_where’: { value: function(func) { return filter(func, this); } }, ‘_select’: { value: function(func) { return map(func, this); } } }); . At this point, given an instance of an Array (thanks to Faker), like: . var somePeople = [ {“FirstName”:”Cristina”, “LastName”:”Quigley”, “PhoneNumber”:”1-189-868-2830”, “Email”:”Imelda@lourdes.ca”, “Id”:0}, {“FirstName”:”Eriberto”, “LastName”:”Bailey”, “PhoneNumber”:”1-749-549-2050 x36612”, “Email”:”Pamela_Gaylord@ludie.net”, “Id”:1}, {“FirstName”:”Amina”, “LastName”:”Schaden”, “PhoneNumber”:”463-301-9579 x9511”, “Email”:”Conner_Gusikowski@jolie.tv”, “Id”:2}]; . If we wanted to select the FirstName of each record, we could do something crude like: . somePeople._select(function(row) { return row.FirstName }); . But this is still too obtuse. With a little curry, we can make it better. We used partial application to get to ‘_select’, but we can switch gears to curry to get a better query mechanism. First, let’s define a query method: Update: we technically don’t need curry here, as we’re not abstracting the ‘query’ object as a parameter. Thanks to Thomas Burette in the comments. . var query = function(array) { var tables = []; tables.push(array); var _query = { tables: tables, from: from, select: select, run: run }; return _query; }; . select and from methods are straightforward: . function select() { var query = this; . var slice = Array.prototype.slice; var args = slice.call(arguments, 0); query.columns = query.columns || [ ]; each(args, function(argumentValue) { query.columns.push(argumentValue); }); return query; . } . function from(array) { var query = this; query.tables.push(array); return query; } . which then only leaves execution. I’ve deliberately not optimized this method for the purpose of illustration: in the absence of the tools, this is what such code looks like. Look at the redundancy and duplication. Marvel at the inelegance. Appreciate the fact that it works. . function run() { var query = this; var ret = []; if (query.columns.length &gt; 0) { var results = []; each(query.columns, function(columnName) { . each(query.tables, function(tbl) { if (Array.isArray(tbl)) { var res = {}; var val = tbl. _select(function(val) { return val [columnName ]; }); if (val) { res [columnName ] = val; results.push(res); } } }, true); }); var returnRows = [ ]; if(results &amp;&amp; results.length &gt; 0) { var firstResult = results [0 ]; each(firstResult, function(val, key) { each(val, function(cell){ var row = {}; row [key ] = cell; each(results.slice(1), function(result) { each(result, function(v,k){ each(v, function(c) { row [k ] = c; }) },true) },true) returnRows.push(row); },true); },true) } } return returnRows; . } . Now, this yields a syntax which looks a lot more like SQL: . var newQuery = query(people).select(‘FirstName’, ‘LastName’); var results = newQuery.run(); . From here, ‘where’, ‘join’ (yes I said JOIN), ‘orderby’ and ‘groupby’ are all implementation details. This is just a proof-of-concept post, but given some large Faker data sets it already works quite well given its limitations. Refactoring ‘run’ into a method which utilizes partial application will yield mountains. . As always, everything I blog and code is public domain. You can view the source from the oj-sql project here, collab with me on c9 here, or do whatever strikes your whim. May the wind that strikes your whim be always at your back. .",
            "url": "https://luddites.me/currying/code/partial/application/2017/02/04/currying-favor-with-partial-application-to-get-java-script-sql.html",
            "relUrl": "/currying/code/partial/application/2017/02/04/currying-favor-with-partial-application-to-get-java-script-sql.html",
            "date": " • Feb 4, 2017"
        }
        
    
  
    
        ,"post11": {
            "title": "How to Lose an Employee in 10 Seconds or Less",
            "content": "The answer, contrary to what one might naively assume, is profoundly simple: stare your employee squarely in the face and say quite plainly and with complete sincerity, “Go fuck yourself.” So long as you do not make the mistake of apologizing, you will be rid of the parasitic worm leaching funds from your company’s precious coffers in record time. True, the conversation (should we elect to elevate this pitiful exchange of syllables to such exalted status) might last a few moments longer — but the fatal blow will have been dealt. . Your employee might apologize for what he or she has perceived to be the trigger for your words, but a swift and confident, “Pull your head out of your own ass insert context specific vagaries here” will dispense this drivel. Your employee may even try to appeal to emotion or to their own misconceived understanding of social norms, but simply remind them that it is their responsibility to cope with your management style, this managerial style is immutable, while subject to constant revision, and that failures to accept and embrace this style will be viewed as open hostility to yourself and to the company. When in doubt, consult the rules for arguing. . I am confident this exchange will not be further prolonged. Your employee may even walk out the metaphysical door without another feeble syllable in their defense. . Now, when is the right moment to deploy this intercontinental payload of confusion, this aggressive-aggressive/passive-aggressive bundle of joy? . Honestly, I haven’t the faintest idea however, it happened to me a little more than a year ago. I have been reflecting up the whole of its story since that time. I wanted to take a long pause to fully process the events in my own mind, but I have simultaneously felt a constant, nagging, nigh oppressive desire to write which I can no longer resist. The time, right or otherwise, has thrust itself into the forefront of my consciousness and refuses to be ignored. . The rest of this tale may have little material value to the rest of the world; though it should prove amusing to some. I learned something. Your mileage may vary. . A few days ago, I celebrated another year at Doctor Evidence (DrE), a company in which I strongly believe. This, by itself, would be an otherwise heartwarming milestone for myself but a triviality hardly worth noting for any readers who have wandered past. The cause for pause at this moment in time is less my own gratitude for passing yet another notch on the yardstick of time than it is for my enormous gratitude to be here at all — and there is ample cause to be grateful. . To appreciate the context, we’ll need some. Rewind the clock more than three years. . The evening sauntered towards its inevitable end. I closed my laptop and called out to my wife. She did not respond. After some searching, I found her soaked to the bone, lying face down on the bare concrete in the carport in the brutal cold of early 2013. I still do not know whether she deliberately or merely accidentally attempted suicide that night, but I knew we needed help. Over that year, I struggled to keep my family together as I tried to solve my wife’s substance abuse. My hubris knew few limits. I honestly believed that I could fix this. . Home life affected everything. By the fall, I was depressed, exhausted, suffering at work. I believe I had my first and only negative review that year after almost 7 years of near constant promotions, praise and loyal, excellent work. When Despair becomes your bedfellow, the darkness knows no boundaries. . Light, I often find, is insurmountable — though the speed at which it arrives in practice is often at odds with theory. Quite unexpected and out of the blue, I received an email from Edan Shalev, (I am very pleased to call him now) my boss. He offered me a job. And not just any job. A chance to work from home; a significant raise; the opportunity to design an entire platform from the ground up. Complete creative control. The chance to save or at least improve human lives. How could I say no? . I felt enormously conflicted. My boss at the time, David Hessler, for whom I have the utmost respect and admiration, once said of me, “You know what I love about you, Christopher? There are only two things in your world: things you’re excited about and things you haven’t discovered yet.” To date, it’s still the best compliment I have ever received. More than the respect and appreciation that David expressed to me then and on many other occasions, he and the whole company had invested greatly in my success. . I do not have a college degree. I dropped out of school and joined the Army. I learned Russian and managed to convince a publisher to let me write a book. I taught myself SQL and Visual Basic (for Applications) on a decrepit military laptop in the middle of constant mortar fire in Baghdad. And David hired me. . Not as a programmer, but as a systems engineer of sorts — providing personalized support to our most important customer. After a year of this, I was bored. I remember walking into David’s office one day to say, “I want into Development.” He said OK and our most senior developer, Steve Salter, began mentoring me. In all the years since, Steve is still the most brilliant engineer I’ve had the pleasure of calling peer and friend — and for all our many arguments and my hotheadedness and my emotional reactions, Steve never gave up on me. Because of this, and perhaps solely because of this, I went from a lowly customer support worker to a senior web developer in about three years. . So, again, I felt conflicted. This was a company that had been exceedingly loyal to me; that had taken great risks on my future; that had trusted me. David’s company was acquired by another in the same week as my decision needed to be made; and, in the spirit of transitions, the decision to leave felt right in the end. . On October 1, 2013 I logged into Doctor Evidence’s systems for the first time from my home office. The future, though distant and elusive to the touch, nevertheless felt as though it exuded a general warmth and soft glow. Working from home, I could directly attend to my family. We had a chance to fix everything. We could fix everything. We would. . My ex-wife walked out the door on Sunday, December 1st, 2013. The last words she said to me were, “I never want to see you, this house or those children ever again.” . My two, most precious assets, my beautiful children have been in my sole custody ever since. The first six weeks were some of the most arduous of my life — and I say this as a person that has survived blanket parties, direct fire, indirect fire, crashes and skirmishes and wars. The first week was the worst. Finding childcare for the kids, when every daycare in Ithaca has waiting lists on the order of months and years, would have been unimaginable without the help of friends and family and friends of family and family’s friend’s families. . Ithaca has often reminded me of my time in Germany. The summers are glorious beyond all human imagining. Surely, the Greeks had Ithaca, NY in their minds’ eyes when they envisioned Olympus. Then six months of winter arrive like an invasion force, snatch the sun from the sky and erect in its place a gloom, impenetrable and complete, leaving it to bear until the forces of Spring can usurp them. Darkness, literal. Real, biting Cold. Unrelenting misery. . But. Light abides. Spring returns. By the first, early glimpses of pure sunlight in 2014, the children and I were doing (if not well) far better than we had ever been before. The work at DrE was exciting and fulfilling. . All attempts at reconciliation with my ex-wife had failed. Uncertain what to do, but certain that I wanted to provide the best for my children, I soon filed for divorce. The legal process is least forgiving to the anxious, and such was the Anxiety that replaced Despair! Still, I was awarded sole custody of the children in relatively short order. The question of alimony/spousal maintenance would drag on until the end of the year. . Until very recently in New York, the question of alimony has been straightforward. The husband pays the wife 30% of his net income for a period determined by the length of the marriage and the wife’s ability to find employment. A plaintiff may argue that exigent circumstances merit a deviation from the default (e.g. the plaintiff has sole custody of the children of the marriage), but the judge has sole and final discretion on the matter. . On December 21, 2014, Despair found me once again at her mercy. The judge granted a narrow exception for the cost of my daughter’s preschool, but otherwise followed the formula. Beginning January 1, I needed to pay my ex-wife 50% of my gross income every month. The very first thought through my head screamed, “Thank the gods you already paid for Christmas!” All of the following thoughts began crunching the numbers. I could find no conceivable path to keeping the house — I would inevitably default on the mortgage. I couldn’t afford the winter heat bill. . Only one option proved viable: default on the mortgage and move in with my parents (basement, to be precise). By the third week of 2015, I found myself a true millennial — occupying some 100–150 square meters in my parent’s basement. I think my kids were stronger than I was through this period. . As an engineering manager for a hugely successful bioinformatics company, there was a huge amount of self-imposed shame in losing my house and moving into my parents’ basement. As a father, I felt an overwhelming sense of impotence in not being able to provide for my children. . Concurrently, DrE was pursuing several high-profile bids for new business, and I felt a certain amount of stress and anxiety around the sheer volume of work demanded internally and from our customers (actual and prospective). At the time, I was extraordinarily anxious (and on all fronts). As a company, I felt that we were promising far more than we could deliver and that what we could deliver would not match the level of quality that I require of my work. I perceived there to be a implicit demand that our engineers work to the bone to accomplish this; consequently, I found myself working 10 and 12 and 14 hour days, working through weekends. I felt weary. Stretched. Thin. Beyond the totality of human fatigue, I had doubts: “Will this company even survive beyond this effort?” . Pause. . These feelings are incontrovertible, as all feelings are. Feelings are real, of course — but they needn’t be overly burdened with facts. I doubt very much that anything can be done to argue with them or mutate them in any way; however, we can (I hope) process them better in the future. Thanks to retrospection, I can add one hugely valuable lesson to that list of hard lessons that only experience can supply: “Don’t make drastic life decisions when you are living in your parent’s basement.” Variations include: . Don’t make drastic life decisions in the middle of a divorce | Don’t make drastic life decisions while the bank is foreclosing on your house | Don’t make drastic life decisions in the middle of winter in Ithaca, NY | . Resume. . In early 2015, opportunity knocked again — and again, quite unsolicited. A good friend of mine, David Furber, had recommended me to a local company (XCo) as a potential candidate for their next Chief Technology Officer (CTO). . Now the foreshadowing of my clickbait title has finally come full circle. How will our humble narrator find himself quitting in under ten seconds? What new catastrophes await? Who will fool whom? And so forth. . The bait-and-switch, I will confess to immediately. Eight long months crawled past before I found my ten second moment, but nearly every moment of those months I found more bizarre than the last. . I interviewed with Xco’s owners, a husband and wife duo, for the CTO position; and shortly thereafter, they offered me the job. To be even more precise, I was offered a salary. All XCo’s funding came through a series of government grants, and XCo had no formal employees — except the duo, who were defined on the LLC proper. This duo had various other LLCs to account for other revenue streams (public speaking engagements, university teaching, publications), and it was never clear over which any or all of these I was intended to function (in spirit) as CTO. In the end, I was offered a salary to be paid out from a line item in a government grant’s budget, managed by a one of an out of state university’s many extension offices. Loud guarantees shouted that this was all very standard procedure in government/education space, nothing to worry about. The duo assured me that my own budget would permit hiring up to two additional developers in the first year, with an expansion of the team to be expected in the following year. . As someone who has worked hard to achieve everything I have, I find it challenging now to grapple with the cognitive disconnects I allowed then. On a fingernail or two of the one hand, this duo had each been divorced and were living in a joined family. They seemed to understand my current struggles, and they were offering their personal and professional support to help me through my own. They empathized with my predicament. On the other fist and a half, the whole proposal seemed perforated with warning signs. I couldn’t explain why I made this decision. . In retrospect, when someone offers to make you an officer of a company, a few things to have in writing: amendments to the articles of incorporation, access to the company records, documentation of your equity stake, an actual contract between the same company and yourself, a budget, and so forth. . Lacking hindsight, I trusted the duo at their word. I submitted my resignation to DrE and began at XCo on May 1, 2015. The most immediate problem was payroll. Though I didn’t know it at the time, I would not receive a paycheck for four months. Excuses were in no short supply: government grant policies had changed over the last year, new university extension policies on the distribution of grant funds had changed, my line item status on the grant was continually wrong from week to week to week, authorization was needed for my salary, and so forth. The duo insisted that it was my responsibility to negotiate the safe transport of my own salary from the university to my bank account, but they were willing to loan me (at 0% interest) money each month to stay afloat. . I suddenly found myself in the absurdly codependent situation of being wholly: physically and financially, dependent upon these people for my survival. . In the beginning, I borrowed little to nothing. I exhausted my savings first; then I cashed out most of my 401k from DrE. I found a realtor who sold the house before the bank foreclosed, and I landed a little from my half of the equity in the home. Le sigh. Inevitably, I had to start borrowing from them month to month to stay afloat. I would only borrow the bare minimum to pay rent, alimony and expenses, but the debt grew like cancer. . At the time, it did not feel as awkward as it does now in the recounting. Perhaps, in no small part having the anxiety of the foreclosure of the house behind me, the battleground for optimism had once again become to seem ripe for the taking. By August, my alimony payments had dropped considerably. I moved my family into an apartment. We were out of the basement. I did not take the time then to ponder that under nearly any other set of conditions: the house would have sold, that alimony would have become more bearable, that we might not live in my parents’ basement forever. . The absence of any form of compensation was certainly the first demonstration of the emergency broadcast system, running on all devices, all the time. Others amassed in different shapes and flavors. . I had met with the whole team at the end of April, immediately before embarking on this journey. We were nearly 20 in number and spent two full days discussing budgets, timelines, roadmaps and priorities. This meeting was to be one of the tentpoles for my optimism in this new venture: many were joined, a shared vision was present, the group seemed organized, we had a mission. . Little more than a few weeks later, the duo revealed that other aspects of grant regulations had changed. We would be restricted in our yearly budgeting to spending the total sum of the grant divided by the duration of the grant. So, if our grant were $5 and the grant duration were 5 years, our yearly budget could not exceed $1. This completely dismembered the budget discussions and roadmap planning that had occurred a few weeks prior. We had calculated that we could use nearly 60% of the total grant in the first year to accelerate development and partition the remainder for the remaining years. This revelation eliminated my own budget in its entirety. . Shortly after starting, I was left with no budget and no auxiliary means to finance development outside of employing myself for longer hours. Certain nominal expenses, such as Slack and Github, were paid from the duo’s other accounts, but the core infrastructure that would be needed to run our software would be financed from my yet non-existent payroll. . Still, we were deep in research and development. Lightweight servers with low usage (the duo and I were the primary users) are not expensive — the principle of the issue was offensive, but the cost was not burdensome. Optimism, optimism. . The zero balance on my budget became more concerning as I began to wrestle against the practical nature of our 24-hour clock. One developer alone, no matter how gifted, had no chance of delivering against our roadmap on our timeline. The duo was generally insistent that no compromises to feature development or delivery times could be accommodated. At a few points, I found prospective college students who might make promising interns, but the duo insisted that any new hires of any type work without compensation in exchange for letters of recommendation — a practice neither myself or any of my applicants could abide. . Absent any additional hours I could add to the day’s clock by leveraging new hires, the duo helpfully offered to let their high school aged children babysit my own, while I worked longer hours. Ironically, this was always positioned as a sacrifice the duo were making for XCo, and since Irony has no shame nor heeds no conventions, I soon found myself consistently working 12, 14 and 16 hour days with greater frequency than ever before. . Within a few months, we had our next company meeting. The group had shrunk rather considerably. We were approximately 10, down from 20, and were discussing radical cutbacks to the original roadmap. Two months later, we were 7. . The duo began proposing radical changes to our business model: running Kickstarter campaigns, starting a private high school, developing product for companies while the same product (funded by the grant) had yet to be delivered to the university, increasing marketing and sales for their publications. I would get inspired text messages at 4:30am with new ideas. I requested politely that non-critical text messages be deferred until waking hours. The duo informed me that such requests were not “CTO like” and that any Silicon Valley CTO would never complain. . In the last 2 months, the atmosphere began to change radically. Routine weekly meetings were suddenly cancelled, last minute, just before their appointed time. These meetings then magically vanished entirely from my calendar. My own critical Monday meetings with the CEO were suddenly cancelled with terse, “Nothing to discuss this week” cancellation messages. . I began sending email summaries of the tech progress on a week by week basis to the CEO. I would detail the work accomplished against the requirements and try to provide estimates. For lack of better eloquence, I felt weird doing this — and I never had a response. . In the first week of December, I included in my weekly report a summary of all the features that were to be delivered or delayed, based on an aggregate of all my previous progress reports. More suddenly than I was aware possible, I received an immediate response. In ALL CAPITAL LETTERS, the CEO asked who had authorized me to make the decision not to release a feature? . I think I responded politely. I cannot be sure. By this point, to my mind, I continued to be the nominal CTO of an amorphous confederation of promises, backed by travelers checks of dubious authenticity. Still, I was the CTO. If any person in the company has the authority to determine what technology features go into a release to the public, I hope by the gods below that the CTO is one of them. And where were the responses to all the other emails? How could this news be new news? Why were we not talking in person? How is it conceivable for a CEO to send an ALL CAPS EMAIL? Who does this? . I responded that I had informed him of the delays several times over the past 3 weeks but had not had a response. I said that the continued cancellation of our tech meetings only hindered the communication of these critical issues. . More suddenly than before, I received another ALL CAPS EMAIL: “Provide at least three different forms of proof that you ever communicated this to me.” . This was exceedingly easy, but I selected only one. I forwarded him an email in response with delicate golden highlights across my estimates and delivery projections, the dates quite clearly visible. . Less suddenly, but with the hour, I received a final, standard email. “Christopher, my lack of acknowledgement is never acceptance of your decisions.” . I must admit that I was stunned. A year later, and I still have no response to this; but, I was not done. I am stubbornly optimistic. To faults of faults. And loyal. . This whole exchange now as forgotten (or at least distant) as possible, we were a mere week or so later discussing a perceived outage on our website. A customer reported it “down”. . I logged into the site from my laptop, which seemed fine. I have long subscribed to a VPN service, which among other things, allows me to switch which country I am in. This is terribly useful when developing software for the web, because I can quickly switch to Ireland or China or Argentina and see how my web app behaves from that physical location. This also happens to be extremely useful when trying to determine whether something is “up” or “down”. Generally Ordinarily, if users in Germany, Russia, China and the UK can all access your website — your website it “up”. So, I checked. My website was “up”. . I explained that the global round robin had revealed no issues, to which my CEO said, “That’s great, since we don’t have any customers in Russia or China.” . I explained that in this case, this type of error can happen to any user of any app, anywhere in the world. Typically, we tell people how to reset their systems so that they can reconnect successfully — but there is absolutely nothing wrong with our application or our server. . My CEO responded, “Great. I’ll let our customers know that our CTO can’t be bothered to pull his head out of his own ass and fix their problems.” . I said, “OK. You should do that.” . “Go fuck yourself.” . That was the 10 second moment. Maybe my “OK. You should do that” line crossed the line. I don’t know. But the second that I heard those magical 3 words, I knew that I was done. . In that moment, I began to wonder how I had let it come to this. I was paying an Australian developer (as a contractor) out of my own pocket to help meet deadlines. I was working insane hours. The customers to which the CTO had alluded were really just Cornell University college students, using our app to do their homework for classes the duo’s taught there. We had no real users. Our roadmap looked like an Asian buffet — fried chicken next to pizza next to lo Mein. I had been working in the blind — my boss was not just ignoring me, he was refusing to communicate at all. 8 months into this position, and I still had no official position at all. I was CTO on a mound of dirt. . So, deep into yet another December, I realized that I needed to leave. I spent a few days trying to patch up my CV, but I began to feel the weight of despair closing in again. Hiring. Interviews. Finding a remote position. Waiting. Desperation. Then it occurred to me — something that I hadn’t even realized that I had done (or not done). I left DrE on excellent terms. I spent considerable time making sure their needs were met. DrE and I parted ways more than cordially. DrE told me: if you ever change your mind — if you ever want to come back, we believe in 2nd chances. You are welcome back here. . Burn your bridges wisely. . XCo had elements of a mission that I actually think is worthwhile — but everything else about the company is rotting from the outside inside outside in. That bridge, I happily detonated. I quit on the spot. . I called Edan. He hired me on the spot. DrE embodies the part of humanity that I want to serve, protect and embetter. They treated me well; I treated them well. Mutual respect and decency can make the difference between worlds. I am enormously grateful to have had the opportunity to cross this bridge again. . As I reflect on the choices I have made in my life and how I have responded to the challenges and opportunities that have risen before me, ultimately, I can find no escape from Optimism. . As I reflect on the state of our world, while the Darkness surrounding our species feels greater now than ever before, I must believe that winter will pass. There is a Spring waiting. There has to be. .",
            "url": "https://luddites.me/management/leadership/hiring/work/2017/01/16/how-to-lose-an-employee-in-10-seconds-or-less.html",
            "relUrl": "/management/leadership/hiring/work/2017/01/16/how-to-lose-an-employee-in-10-seconds-or-less.html",
            "date": " • Jan 16, 2017"
        }
        
    
  
    
        ,"post12": {
            "title": "The Audacity of Trying",
            "content": "Money (the desire for money), we might naively think, is the great unifier. We all want it, as much of it as we can get, at the lowest level of effort. Incorporated Individuals tend to thirst for it a little more than their non-incorporated peers. Only a few elites have come to realize that something greater than money exists; while the rest of us waste our effort in the acquisition of valued assets, this enlightened Select seeks out the superior resource: power. The company of these persons understands that power achieved is little without frequent demonstrations of power wielded. . Enter +Time Warner Cable. They understand that profit is secondary to subjugating their domain, keeping the serfs in place, and keeping the bar resting squarely on the shoulders of its many fiefdoms. . Naturally, we don’t go to TWC to buy services. We humbly approach them: low-crawling backwards, prostrate, repentant and humble in order to beg for the chance to buy services. I do not expect to succeed the first or second nor even the third time in this quest to become worthy enough to suckle broadband from TWC’s righteous teat. . So on September 15th, when I logged into my TWC account to upgrade my service from Standard to Extreme broadband, I rejoiced when order number 038150034 was processed–because TWC immediately emailed me to announce that their attempt to contact me had failed. And, on the same day, after calling sales and waiting on hold for over an hour, when Mr. Thisbit graciously agreed to speak with me and then hung up–I knew that I was on the path toward salvation. . As TWC continued to email me to notify me that attempts to contact me had failed, on September 16th, 17th and 19th, I could sense that great things were in store for me. . First, calling in response to these repeated emails, TWC seers would ask my to verify my identity by phone number. The depth of my depravity is made transparent as none of my actual phone numbers match the number on file. Though wretched, TWC allows me to redeem myself by providing my cable modem MAC address. While I am allowed to ask TWC to update my phone number, I am not yet worthy for that request to be considered. Not on the 16th, not on the 17th, nor indeed on the 19th. . Second, likewise in the course of these calls, TWC would request of me a PIN to further prove the level of my commitment. Repeatedly, I am exposed as a fraud as I cannot remember my PIN. And though I am allowed to ask TWC to set a PIN anew, my sins are too great for the request to be acted upon. . On September 20th, when TWC emailed me to state that in accordance with my request the order had been cancelled, I wept with joy. . Theoretically, TWC’s serf service might track each call with a unique identifier; but if so they wisely refuse to share it with actual serfs. When I attempted to leverage the online chat functionality of the account management system, no record of 038150034 or my journey to date could be found. So I attempted to place the order again, via chat. Mr. Thisbit, II congratulated me on my success. . Sadly, I was still not ready to partake. I would need more confession, atonement. While my service was never actually upgraded, until the end of October, my account was listed at the “Extreme” service tier. When the account was finally adjusted back to “Standard”, on November 1st, I again placed the upgrade order online. Order 3002039882 was not destined for success, but starting with order 3002044560 on November 6th I started getting meaningful traction. . November 8th: Mrs. Thisbit blesses my request for upgrade via online chat. My modem’s MAC address is immediately deleted from the TWC database and my Internet access is immediately terminated. I would need to do some deep soul googling, but was sadly limited to using my phone. . A few hours later, TWC restored my modem and my service. Since I work from home and spend significant time screen sharing and on calls, upload speed is quite important. While I did begin to see speeds closer to the promised 5Mbps, my download speeds dropped to ~10Mbps. . In the end, TWC allowed me to shift 5Mbps from my download to my upload for an extra $30/month. The phone number on my account is still wrong, I still don’t know my PIN, and I have no hope of ever getting the promotional Samsung Galaxy Tab 3; but I have been purged of much sin. . I better understand my place in the world, and I respect TWC now more than ever. .",
            "url": "https://luddites.me/cable/economy/donald%20thisbit/liberation/2013/11/09/the-audacity-of-trying.html",
            "relUrl": "/cable/economy/donald%20thisbit/liberation/2013/11/09/the-audacity-of-trying.html",
            "date": " • Nov 9, 2013"
        }
        
    
  
    
        ,"post13": {
            "title": "Keeping a Promise to IndexedDb",
            "content": "APIs are hellish things: inconstant moons, inconsistent interfaces, intolerable incompatibility. If you have not watched Bret Victor’s latest epic, I do recommend it. As he channels the spirit of innovation from the 1970s, he notes that it would be horrible if, 40 years from then, the only way two systems could communicate were through predefined and agreed upon interfaces. Indeed. What a terrible thing that would be it is. . As I continue to build out my prototype for OJ’s qDb component (trying to fulfill my promise to IndexedDb), I have done a few of the obvious things. I automated the database connection in the constructor as +Kyaw Tun recommended. I looked at +Taylor Buley’s own library and make some tweaks accordingly. I have tested inserting up to a million records and selecting from the resulting object stores. There are some memory leaks to address and a few other performance issues before I’d recommend qDb on very, very large datasets–but it is in an OK state. . Yet, as pleased as I am with the abstraction layer that I built, I feel a growing sense of frustration in this class of problem solving. . First, as OJ has grown, it has become unwieldy. I finally decided to begin chunking it out into separate projects, which can each have their own test suites. They can be fully independent and therefore fully modular from OJ’s point of view. Currently, I have: . OJ OJ-NameSpace | OJ-qDb | OJ-SQL | . | . This is nice. I can register each of these as NPM packages and list them as dependencies of OJ in its NPM config. The projects get versioned independently, greater decoupling them. And there was much rejoicing. . Second, as OJ has grown, it has become more tightly coupled internally. I personally detest the module pattern introduced in ES6, and I have never liked RequireJs or CommonJs’s module patterns. That is a rant for another day. I do very much like the idea of defining all dependencies of a class up front, and fortunately it is easy to do both that and to use the namespace pattern (which I far prefer), by using Promises to solve the dependency management. . I have wanted to blog directly at this feature, but I felt I needed to start at the beginning. I think Grunt is a critical, essential tool of the language and Grunt is necessary to solve this problem. I began introducing a part of my own migration to Grunt and the churn required to get your own documentation generated from code. I intend to follow this through my own namespacing pattern, into Promises and out to utopia. Not today. . Third, as I have developed interfaces with more and more tools, I am increasingly aware of the fragility and incompatibility of the technologies we develop. Even between my own raw, JavaScript object SQL library and my own IndexedDb abstraction, the two have completely different interfaces. I have been refactoring my Quips plugin to use Firebase, whose database API is completely different than anything I have already written (that’s not a complaint, Firebase is very awesome and looks quite promising). . Neither anticipated the other. And that is a sin. A sin with a capital In. . Bret Victor notes that if two systems cannot learn how to communicate with each other (without so called “API”s) that they cannot scale or survive. I think there is wisdom in this observation, and I think part of the answer is right in front of us. . A Promise is an agreement to try to do one thing. That thing can only succeed or fail (and potentially never do either). We know how to communicate Promises–within JavaScript, Q does a marvelous job transmogrifying loosely compliant promises into a standardized promises. Across languages, services, applications, architectures–we should think about agreeing upon, if nothing else, what it means to be a Promise and whether we agree to support it. . It is not a complete solution to the challenge of connecting interfaces, but I promise it would help. .",
            "url": "https://luddites.me/persistence/zen/code/promises/l%C3%AFf/2013/08/18/keeping-a-promise-to-indexed-db.html",
            "relUrl": "/persistence/zen/code/promises/l%C3%AFf/2013/08/18/keeping-a-promise-to-indexed-db.html",
            "date": " • Aug 18, 2013"
        }
        
    
  
    
        ,"post14": {
            "title": "God Probably, *Probably*, Doesn''t Use Your App",
            "content": "I propose we immediately deprecate the word “administrator”, and its diminutive form “admin”, from language. All language. And languages. . Let me explain. . I want to pick on TeamCity (TC) for a moment, as it represents the problem well. TC compiles, lints, tests and deploys your applications. Automatically. Continuously. It’s wonderful; but it commits a sin so great that I feel it worth singling it out. Do not mistake me, TC is a miraculous product. I have a dozen unpenned posts to JetBrains in praise of their work; but. . When you install TC and create the first user, that user is a global administrator. As a new user, I had to learn how to configure TC, to create the directives to build the code and the tasks to execute these directives. More than one person needed to access the app, so I needed to create more users. Only 30 minutes into testing, I had no idea how to configure new users and their permissions–so they became admins. . You can imagine how this story evolves. . I do not know how JetBrains fell into committing this sin, but I know how I do it. It starts with a problem. I start solving it by building a new application. Immediately, I realize more than one person needs to use the app at the same time. No problem: I create users. I discover the first rule boundary: not everyone should be allowed to delete–but all users can do everything! I need to distinguish between users. So I create “roles” (or groups or permission sets, etc.), and here I make the fatal mistake. I continue developing the app out from the perspective of the first user, the “admin” user. . The “admin” is really just me, the developer of the application, the only person who is supposed to know everything about it. No other user should be expected to assume this role (though they will need to sudo it). . One of the reasons my applications are harder to learn is for precisely this reason. I do not make clear, simple workflows to create roles and users; and I do not do this early and often. TC, like many apps, imposes a steep learning curve in exactly this way. I am not an “admin” of the app, just the manager of tasks; and all of the power user features that I get by virtue of being an admin are actually a hindrance–they make the app harder to learn, not easier. . There is a place for godlike power in my application, but I now reserve it for myself–making the app. Real users should get roles that actually mean something–roles should imply a path through the app toward a solution. .",
            "url": "https://luddites.me/g%C3%B6d/code/2013/08/14/god-probably-probably-doesnt-use-your-app.html",
            "relUrl": "/g%C3%B6d/code/2013/08/14/god-probably-probably-doesnt-use-your-app.html",
            "date": " • Aug 14, 2013"
        }
        
    
  
    
        ,"post15": {
            "title": "Making Sense of Grunt: Importing an Existing Project",
            "content": "Last year, I saw +Paul Irish’s introduction to Yeoman in the Google I/O 2012 session, and I instantly knew that I was fundamentally doing something wrong. Yeoman did not exist yet; but it was easy to find Grunt, which was already close to being well baked. However. All of the documentation for Grunt, its cousin Brunch, and the now available Yeoman seems to be geared toward starting new projects. . Not yet grokking how the whole system worked, I wanted a simple, straightforward explanation for migrating an existing project into Grunt. I have not yet found one, and a search for “import existing project into Grunt” still returns my SO question for the same in the top 10. So, this is my guide to taking a project and making it grunt. . I already knew my JavaScript project was becoming a mess, but I didn’t yet know how to fix it. I had a few problems: . I had to manually manage the dev and Production versions of all my HTML pages. Any changes to 3rd party libraries had to be changed in at least two places. Any JS file add/drop/renames had to be manually managed. | I was using a pretty crude Perl script to assemble my source files and pass them into Google Closure Compiler. This, too, had to be manually managed. | Google Closure Compiler hadn’t kept up with the language. As I began to rely more heavily on features in EcmaScript 5 as well as polyfills from ES6, Closure Compiler couldn’t keep up. I eventually had to rely on whitespace compilation only. | Instructions to update Closure Compiler had to be manually propagated across the team. | Repeat these issues with CSS compilation. I was using YUI Compressor. | My system had multiple, parallel points of failure. It was fragile. Management was entirely manual. I saw the potential that Grunt had to offer, but it took me awhile to trial-and-error my way to yes. NOTE: The Grunt documentation is good, and I do recommend using it heavily. . Step 1: What is Grunt . NodeJS, the server-side JavaScript platform, is the secret to this sauce and NPM is the package manager for Node (think Ruby RubyGems, Python pip, Perl PPM, Go… etc). Grunt is an npm package, which you’ll install. . At its core, Grunt is a task runner. You define a set of plain-vanilla, private functions that you want Grunt to execute. Then you define plain-vanilla JavaScript objects, which Grunt will then pass as parameters to these functions. Then you define a public superset of these functions that you want to allow Grunt to execute from the command-line. Then you can execute Grunt. . Install NodeJS | (if on Windows, I recommend using Chocolatey) | cinst nodejs.install . Globally install the Grunt command line (global vs local): | npm install -g grunt-cli . Step 2: Your Project is Now an NPM Package . The former incarnation of my project was a sprawling mass of files and folders, but Grunt requires that your content be packageable for NPM. In the end, you will even need to use NPM to install your package. For now, this means designating a root folder and creating a package file. Initially, you can think of your content structured in two categories: the content that you modify vs the content Grunt modifies. . Designate a root folder for your content (e.g. /web/) | Copy your assets into an assets folder in the root (e.g. /web/app/) It is customary to split assets according to type (e.g. /web/app/css/, /web/app/js/, /web/app/img/, etc.) | | Designate a folder for Grunt to output content (e.g. /web/release/) | Create the NPM package file, named package.json (e.g./web/package.json) | { &quot;name&quot;: &quot;&quot;, &quot;title&quot;: &quot;&quot;, &quot;description&quot;: &quot;&quot;, &quot;version&quot;: &quot;&quot;, &quot;homepage&quot;: &quot;&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;&quot;, &quot;email&quot;: &quot;&quot; }, &quot;repository&quot;: { &quot;type&quot;: &quot;&quot;, &quot;url&quot;: &quot;&quot; }, &quot;bugs&quot;: { &quot;url&quot;: &quot;&quot; }, &quot;licenses&quot;: [{ &quot;type&quot;: &quot;&quot;, &quot;url&quot;: &quot;&quot; } ], &quot;dependencies&quot;: { &quot;grunt&quot;: &quot;0.4.1&quot;, &quot;grunt-contrib-clean&quot;: &quot;latest&quot;, &quot;grunt-contrib-cssmin&quot;: &quot;latest&quot;, &quot;grunt-contrib-uglify&quot;: &quot;latest&quot; }, &quot;devDependencies&quot;: { }, &quot;keywords&quot;: [ ], &quot;engines&quot;: { &quot;node&quot;: &quot;0.8.x&quot;, &quot;npm&quot;: &quot;1.1.x&quot; } } . Should you ever want to publish your package to NPM, the whole file should be fleshed out. For now, the most important properties are dependencies and devDependencies. Dependencies are the names and versions of the NPM packages which must be installed for your project to execute. These are normally installed by calling . npm install --save . DevDependencies are the optional packages you need only to run non-essential tasks, install by calling . npm install --save-dev . Most of the common things you will want to do are defined in the context of Grunt plugins. Plugins are NPM packages tailored specifically to run as Grunt tasks. . Step 3: Identify Your Files . Grunt has access to the file system, but it does not know which files to process or how to think about them, so you must define the set of files you want Grunt to operate on. There are various ways to do this, but I prefer managing files in a dedicated configuration file. . Create an asset list (e.g. /web/files.js) | module.exports.app = [ &#39;app/js/NameSpace.js&#39;, &#39;app/js/ * */ *.js&#39; ]; module.exports.css = [ &#39;app/css/ * */ *.css&#39; ]; module.exports.vendorMin = [ &#39;vendor/js/modernizr-2.6.2.min.js&#39;, &#39;vendor/js/es5-shim.min.js&#39;, &#39;vendor/js/jquery-2.0.3.min.js&#39;, &#39;vendor/js/q.min.js&#39; ]; module.exports.vendor = [ &#39;vendor/js/modernizr-2.6.2.js&#39;, &#39;vendor/js/es5-shim.js&#39;, &#39;vendor/js/jquery-2.0.3.js&#39;, &#39;vendor/js/q.js&#39; ]; module.exports.images = [ &#39;app/img/ * */ *.png&#39;, &#39;app/img/ * */ *.gif&#39; ]; . We’ll later instruct Grunt to consume this file into a variable, and the `modules.exports` syntax will instruct Grunt to export each property as a member of the return object. Grunt also supports a range of globbing patterns–’**’ is the simplest way to include all files and folders beneath the path, recursively. . Step 4: Create the Gruntfile . The Gruntfile is by far the most complex piece, so for the purpose of this guide, I’ll focus on only three tasks: compiling JavaScript, compiling CSS and cleaning the release folder. . Create a file named Gruntfile.js (e.g. /web/Gruntfile.js) | / *global module:false */ module.exports = function (grunt) { var files = require(&#39;./files&#39;); //Load files.js into a local variable grunt.initConfig({ files: files, //store the files variable inside the grunt config object pkg: grunt.file.readJSON(&#39;package.json&#39;), clean: [&#39;release&#39; ], cssmin: { files: { src: files.css, dest: &#39;release/mycss.min.css&#39; } }, uglify: { files: { src: files.app, dest: &#39;release/myjs.min.js&#39; } } }); grunt.loadNpmTasks(&#39;grunt-contrib-clean&#39;); grunt.loadNpmTasks(&#39;grunt-contrib-cssmin&#39;); grunt.loadNpmTasks(&#39;grunt-contrib-uglify&#39;); grunt.registerTask(&#39;compile&#39;, [&#39;clean&#39;, &#39;cssmin&#39;, &#39;uglify&#39; ]); }; . I keep my Gruntfile broken into three purely conceptual sections. First, there is the variable initialization before calling `grunt.initConfig`. This just makes it clear that I am assigning some content outside of the Grunt init. . Second, there is the required call to `grunt.initConfig`. This is the core of the file. All common task configuration is done here. The names of the properties in this object usually map to the names of the associated task to run. . Third, there is the task initialization and task identification section. Here, `grunt.loadNpmTasks` is called to load a plugin for use in Grunt. This plugin must be installed and identified as a dependency in package.json. (installation happens automatically when you install your project). You can also define additional tasks to run by calling `grunt.registerTask` . The clean task is the most straightforward. Given an array of folder names, it will delete their contents. Cssmin will concatenate and compile CSS files into a single, compressed file. Likewise, uglify will take your JS files, concatenate and compile them into a minified file. . My custom task, ‘compile’ simply cleans the ‘release’ folder and then compiles the CSS and JS back into release. . Step 5: Release . Once the pieces are in place, putting them together is a one-two: . cd into the project directory (e.g./web/) | Install the project | npm install | Compile the project | grunt compile | I’m sure most of this was quite obvious to rest of the community, but it took me some considerable iteration to get it right. While it seems intuitive to me now, I thought it worth documenting from my own experience. You can see the entire Grunt configuration for my own project, OJ on Github. . These steps are enough to begin making headway, but they are by no means enough to get your entire project fully migrated into Grunt. Next time, I’ll discuss how to dynamically generate my project’s HTML using Grunt tasks. .",
            "url": "https://luddites.me/tools/code/2013/07/28/making-sense-of-grunt-importing-an-existing-project.html",
            "relUrl": "/tools/code/2013/07/28/making-sense-of-grunt-importing-an-existing-project.html",
            "date": " • Jul 28, 2013"
        }
        
    
  
    
        ,"post16": {
            "title": "From JsDoc to Github Pages in 27 easy steps (aka API Documentation Considered Evil)?",
            "content": "I ask the question, because I assume it must be (considered evil)–on the subsequent assumption that if it were not (considered evil) that someone, somewhere, somehow would have made it easy. I had a simple vision: take JsDocs from my project, convert them to an API document, publish that document to my Github pages place. . Impossible is nothing. . The short version . Document your code using the JsDoc v3 API. Follow this API with religious fervor. It is itself not well-documented. | The use (or omission) of certain tags can have undocumented side effects. The old JsDoc v2 Toolkit is still valuable as a reference. | JsDoc will emit very few exceptions, other than raw syntax exceptions. You can call the jsdoc NPM directly with the –debug flag to hook into the Rhino debugger, but this didn’t help me identify the issues. | I finally stumbled on a post by Simon William, which gave me the clues I needed to find the faults in OJ’s documentation. | | Install the grunt-jsdoc-plugin. Note: this plugin is a thin wrapper around the jsdoc NPM. Nearly every fault you experience will result from jsdoc, not from the grunt-jsdoc-plugin. | +Eugene Krevenets has a good starter post on how to extend this base task in order to skin the 1.put. This will get you closer to controlling the final skin of your API. | If you use Eugene’s steps (which I recommend), there is a gotchya inside the configuration file “.jsdocrc”. The path of the plugins you specify will use either a relative or an absolute path, which as implemented is actually the worst of both worlds. | Configure your grunt-jsdoc task to use DocStrap for theming. This is a set of Boostrap themes configured to work on jsdoc output. | I have not found a grunt task to automate this, so opted simply to copy the DocStrap project into a folder of my own project and link to it internally. The CSS styling is not as advertised, but it’s better than trying to build my own 1.nt task to solve the problem. | Sync the API doc output with Github using the Grunt githubPages task. This was actually straightforward and just worked out of the box. | The long version . A brief backstory. Early last year, we were expanding the team at ChemSW, and I wanted to be able to machine generate documentation from the the XML code comments across our various .NET projects. Aside: I had to look the date up, assuming it was years and years ago–shocking to find in the cold, hard, unrelenting truth of code commits that it was really just July, 01 2012 when I made my first commit on the subject. In spare time over 6-8 weeks or so, I scoured the inter-tubes for a tool which would do such a thing. . After all, Microsoft does this and they make .NET. How hard could it be? Hard. Note: Supposedly GhostDoc could (presumably still does) this; but I’m not interested in negotiating purchase authority. Most paths still lead to Sandcastle, or one of the many forks thereof. As best I remember, Sandcastle was a solution to problems which haven’t been imagined yet. In the end, I finally found a tool called Doco, which I was able to fork and make use of. All of this, of course, was for .NET only and didn’t include documentation for JavaScript. . For JavaScript, I chose the VsDoc style of documentation, because it purported to support some form of IntelliSense in Visual Studio. It does, and that feature works great until you add your 2nd JS file to the project. . So back to the present. A theme emerges. I recently started breaking new ground on OJ, and I wanted to generate API documentation. I did some research, and the Internet gave me full faith and confidence that JsDoc was finally the format of choice and machines were ready to eat it and spew out well formed HTML. . A few things have happened since then. First, the Chrome Dev team has made it drop-dead simple to debug your CoffeeScript and IcedScript and SASS and Less inside the dev tools. Second, Microsoft abandoned VsDocs when they embraced their own TypeScript. Third, since Grunt is now a de facto standard all its own, it’s easier than ever to write your own niche NodeJs task and parse a few thousands files according to whatever regex you want. So more languages, more tools, more variation and a lower-than-ever bar to entry to roll-your-own solutions. . For the past week, I have wrestled with getting various tools to comply with my core requirement: go make me some API docs. I started with the one and only jsdoc Grunt plugin, jsdoc. It didn’t work. If you search the Grunt plugins for ‘doc’, I think you’ll find a long list of other well meaning tools, each of which in their own, niche ways also don’t work. . There’s docco, a tool which dutifully generates a beautiful UI representing your standard comments next to code–it also mangles your actual code documentation comments with the associated code. I get that it’s easy to parse out all lines starting with “//” and that it’s hard to parse start “/**” and end “*/”, but it does not mean I’m interested in the solution to the easy problem. . There’s apidoc, a tool which promises to generate the beautiful API docs I want, using a jsdoc-like syntax. In almost every way, the semantics for this documentation is jsdoc, except every tag begins “api” + {tagName}, and it ignores all other tags. . After vetting nearly every other tool out there, I circled back to grunt-jsdoc-plugin and filed a bug. Just 2 days later, and I finally have the problem clearly identified. My code is not explicit enough for JsDoc, by itself, to parse. . / * * * Method to do something * @return {Array} An array */ Object.defineProperty(nameSpace, &#39;method&#39;, { value: function () { } }); . In plain JavaScript, I’m simply writing: . / * * * Method to do something * @return {Array} An array */ nameSpace.method = function () {} . which JsDoc knows how to interpolate as it parses the AST. In my case, by using Object.defineProperty, I am “obfuscating” the assignment, the name of the property assigned and the type of the value being assigned, JsDoc iterates over this block and sees nothing to report. In this case, it is possible to instruct JsDoc what to do by defining the appropriate tags: . / * * * @desc Method to do something * @name method * @return {Array} An array * @memberOf nameSpace */ Object.defineProperty(nameSpace, &#39;method&#39;, { value: function () { } }); . Presto. . Still. This time I solved the problem the traditional “right” way. By figuring out how to make the existing, seemingly proven tools work. I still have to refactor every code comment in my library before it will begin appearing in the documentation. Would it have been faster to grunt-force my own solution? Maybe next time. .",
            "url": "https://luddites.me/code/api/docs/2013/07/06/from-js-doc-to-github-pages-in-27-easy-steps-aka-api-documentation-considered-evil.html",
            "relUrl": "/code/api/docs/2013/07/06/from-js-doc-to-github-pages-in-27-easy-steps-aka-api-documentation-considered-evil.html",
            "date": " • Jul 6, 2013"
        }
        
    
  
    
        ,"post17": {
            "title": "A Promise to IndexedDb",
            "content": "Quite a bit of my free time in the last 8 months has slipped away into OJ, my solution to the hell of dynamic form creation (based on arbitrary data inputs and accordingly arbitrary data outputs). Folks at WuFoo and Bootsnip have some nice prototypes of runtime manipulatable engines; while each looks like excellent work, neither solves my problem of generating entire workflows based on data. I want the data to drive the UI; the UI should simply read the data and generate the necessary rich form content necessary to provide slick, intuitive, addictive user experiences. . In the pursuit of this heffalump, I had recently been working on decomposing Martin Orth’s query builder into classes in the OJ framework (see it on Github, in NPM, and collaborate with me in Cloud9). This body of work depends upon ExtJs, which is a powerful but extraordinarily inscrutable framework. I spend a frustrating amount of time comparing the inputs into Ext from OJ vs the inputs in Sencha’s examples or their documentation. It’s tedious and fragile as seeming minor changes can produce difficult to track bugs which go unobserved across several commits. . I wanted to be able to instrument my code in such a way that I could flip a switch and start logging every input into Ext. I had a few requirements: the objects logged needed to be in as close a state as possible to their values at the time of logging (logging to the console sends the object by reference, so you’ll usually get the last known value of the object by the time you see it). The objects needed to persist across page loads. There would be a lot of data (more than would fit in localStorage). Finally, the data needed to be queryable. . IndexedDb seemed like a potentially good fit. Unfortunately, like so many “HTML5” standards, the API is terrible. If the consumers of this API were just vendors, like Chrome and Firefox, it would be hard to identify any specific contract as “wrong”; but as a developer consuming this API, I cannot easily point to any component and say, “this is right.” But it is what it is, and it is all we’ve got. . So in an effort to transmogrify the indexedDb API into something that I would actually want to use myself, I put together a proof-of-concept wrapped around Promises. I am developing it inside of OJ, but it could easily be factored out to use independently. . You’ll need: . Q.js (Kris Kowal’s excellent Promise library) | The IndexedDb polyfill (to support the IEs of the world, and such) | FakerJs (Optional: very useful to get prototypes running without worrying about creating the data) | OJ (Optional: only if you don’t want to have to factor out my helper methods) | . This is the API that I wanted to call: . var tableName = &#39;messages&#39;, dbName = &#39;diagnostics&#39;, dbVersion = 1; //Create a new DB manager instance var newDbMgr = initDb(); //Connect to a specific database newDbMgr.connect(dbName, dbVersion); //Create or extend a schema //newDbMgr.ddl.dropTable(tableName); newDbMgr.ddl.createTable(tableName, &#39;messageid&#39;, true); //true == auto manage primary key newDbMgr.ddl.createIndex(tableName, &#39;subjectid&#39;, &#39;text.subject&#39;); newDbMgr.ddl.createIndex(tableName, &#39;timeid&#39;, &#39;time&#39;); newDbMgr.ddl.createIndex(tableName, &#39;usernameid&#39;, &#39;user.name&#39;); //Insert some data newDbMgr.insert(tableName, { message: { time: new Date(), text: { fault: Faker.Lorem.words(), subject: Faker.Lorem.sentence(), description: Faker.Lorem.paragraph(), }, user: Faker.Helpers.createCard(), }, }); newDbMgr.insert(tableName, { message: { time: new Date(), text: { fault: Faker.Lorem.words(), subject: Faker.Lorem.sentence(), description: Faker.Lorem.paragraph(), }, user: Faker.Helpers.createCard(), }, }); //Query the data var results = newDbMgr.select(&#39;message&#39;).from(tableName).where(&#39;user.name&#39;, &#39;=&#39;, &#39;Bob&#39;); . To make it happen, some work needed to be done. First, you need a database connection. I never liked the implementation of “versioning” the database in WebSQL–but conceptually, it is the same mystery bag of disappointments in iDb; so the first step is to abstract and encapsulate the mechanism for opening a database connection and handling the version control events. . var initDb = (function() { var name; //Store the last used db name, db version and db connect promise in the closure var version, db, connectPromise; var reInit = false; //The actual connect method to be used in order to establish a connection and/or trigger versioning var connect = function(dbName, dbVersion, dbOnUpgrade) { //Only create a new promise if connecting to a different db name or version; otherwise, the last issued promise is still good. reInit = (!connectPromise || dbName !== name || dbVersion !== version); if(reInit) { //Create a new promise from scratch var deferred = Q.defer(); //Cache our state data in the outer closure connectPromise = deferred.promise; version = dbVersion || 1; name = dbName; dbOnUpgrade = dbOnUpgrade || function() {}; //Create the connection request. This is an async operation, which the promise will resolve. var request = window.indexedDB.open(name, version); //Optionally do something when the request is completed (with or without error) request.oncomplete = function () { } //Someone or something has explicitly aborted the request request.onabort = function () { window.console.error(&#39;Connection attempt to &#39; + name + &#39; was aborted. Closing db connection now.&#39;); db.close(); } //Connection has timed out request.ontimeout = function () { window.console.error(&#39;Connection attempt to &#39; + name + &#39; timed out. Closing db connection now.&#39;); db.close(); } //Another process has a lock on the database request.onblocked = function(event) { //Resolve the promise with rejection deferred.reject(new Error(&quot;Database error: &quot; + event.target.errorCode)); window.console.error(&#39;Connection attempt to &#39; + name + &#39; was blocked by another process. Is the db open in another window/tab? Did you forget to close your connection to the db before attempting to version it? Closing db connection now.&#39;); db.close(); }; //An error occurred at any time during the lifecycle of the request. request.onerror = function(event) { //Resolve the promise with rejection deferred.reject(new Error(&quot;Database error: &quot; + event.target.errorCode)); window.console.error(&#39;Connection to &#39; + name + &#39; failed with error: &#39; + event.target.errorCode + &#39;. Closing db connection now.&#39;); if(db) { db.close(); } }; //Versioning happens before success (promise is not yet resolved, but we have a handle on the db instance) request.onupgradeneeded = function(event) { db = event.target.result; dbOnUpgrade(db); }; //Request has succeeded; versioning may or may not have happened; connection to the database is established request.onsuccess = function(event) { db = request.result; //Resolve the promise with success and the db instance deferred.resolve(db); }; } //Return either the new promise or the existing return connectPromise; }; //More code to follow .... }()); . Hopefully the commentary in the code is sufficient to communicate its meaning. In essence, I’m leveraging Q’s deferred promise wrapper against the resolution of the iDb request’s async callbacks. Of course, if indexedDb simply implemented its many cascading callbacks as promises, this post might not exist. . Once the connection wrapper is defined, I can encapsulate some of the DDL operations into this new API. . //private implementation method var createTableImpl = function (dbWrapper, db, tableName, tablePkColumnName, autoIncrement) { //The call to createObjectStore is synchronous--the table is immediately returned var table = db.createObjectStore(tableName, { keyPath: tablePkColumnName, autoIncrement: false !== autoIncrement, }); //Cache the table instance for future reference dbWrapper.schema.add(tableName, table); return table; }; //public method. DDL operations can only happen as part of the versioning event. //Add the call to create the table to a schema scripts collection which the IndexedDb versioner will iterate. var createTable = function (dbWrapper, tableName, tablePkColumnName, autoIncrement) { //Create a new promise var deferred = Q.defer(); //Push this method into the scripts collection schemaScripts.push(function (db) { try { //Create the table var objectStore = createTableImpl(dbWrapper, db, tableName, tablePkColumnName, autoIncrement); //Resolve the promise successful with the table deferred.resolve(objectStore); } catch (e) { console.log(e, e.stack); //Resolve the promise failed deferred.reject(new Error(&#39;Could not create a new table&#39;, e)); } return dbWrapper.schemaschemaschemaschema [tableNametableNametableNametableName ]; }); return deferred.promise; }; . If you return to my dream API above, you’ll notice that I placed the DDL operations first. Because this implementation uses promises, the order of operations is extraordinarily flexible. I could just as easily position the calls to DDL operations after a long list of calls to DML operations, and the Q promise layer would just make it work. This is in stark contrast to the iDb event model which is highly dependent upon the execution of functions being in the right place at the right time. Promises allow me, as a developer, to think less about the coordination of sequencing to/from other APIs and more about the order I want my own code to execute. . At any rate, the above is just enough to create some indexedDb tables. Next, the core of indexedDb: indexes. . //Private implementation method var createIndexImpl = function (dbWrapper, tableName, columnName, indexName, isUnique) { //No need to wait on transaction, we have (or should have) the table in memory var table = dbWrapper.schemaschemaschemaschema [tableNametableNametableNametableName ]; //Create the new index and return it immediately (happens synchronously) //It would be nice to cache the index on the cached table instance, but that table instance is actually an indexedDb object and I don&#39;t want to mutate--nor do I want to refactor anything at the moment. So eat the cost of fetching a handle on indexes later. Told-you-so&#39;s expected. return table.createIndex(columnName, indexName || columnName + &#39;Idx&#39;, { unique: true !== isUnique, }); }; //public method. DDL operations can only happen as part of the versioning event. //Add the call to create the index to a schema scripts collection which the IndexedDb versioner will iterate. var createIndex = function (dbWrapper, tableName, columnName, indexName, isUnique) { //Create a new promise var deferred = Q.defer(); //Push this method into the scripts collection schemaScripts.push(function () { try { var index = createIndexImpl(dbWrapper, tableName, columnName, indexName, isUnique); //Resolve the promise successful with the new index deferred.resolve(index); } catch (e) { console.log(e, e.stack); //Fail the promise deferred.reject(new Error(&#39;Could not create a new index&#39;, e)); } return dbWrapper.schemaschemaschemaschema [tableNametableNametableNametableName ]; }); return deferred.promise; }; . Very much like the createTable method before it, the createIndex method hooks into the schema scripts collection and executes on the db versioning event. Unlike WebSQL or SQLite, IndexedDb is designed to be a non-necessarily-relational object store. So it stores objects. Objects can be primitive values, arrays or complex Object instances with deeply nested, non-relational tree structures. Indexes are levied against the property names of the values you want to be indexed. . var obj = { str: &#39;&#39;, num: 0, arr: [ ], obj1: { str1: &#39;&#39;, obj2: { str2: &#39;&#39;, }, }, }; . So an index on “str2” is as simple as defining an index on “obj1.obj2.str2”. This took me quite a bit of trial and error, so I think it’s worth highlighting how the pathing to an index works. . Finally (for the purpose of this post), you need a way to insert data into the store. . //Private implementation method, doesn&#39;t yet conform to standard *Impl paradigm. It&#39;s ok; I&#39;m ok; you&#39;re ok. var insertImpl = function (tableName, records) { //Promise to insert the data var deferred = Q.defer(); try { //Get a new transaction on the table. This is an insert, so &#39;readwrite&#39; is implicitly understood by the caller. var transaction = db.transaction( [tableNametableNametableNametableName ], &#39;readwrite&#39;); //Get the object store from the transaction (gods forbid we fetched it from our own handle on the object store...and how the hell does this thing manage concurrency?!) var objectStore = transaction.objectStore(tableName); //Insert the new records n$.each(records, function (rec) { objectStore.add(rec); }); //Resolve the promise deferred.resolve(true); } catch (e) { console.log(e, e.stack); //Fail the promise deferred.reject(new Error(&#39;Could not insert records&#39;, e)); } //Return the promise return deferred.promise; }; //Public insert method var insert = function (tableName, records) { var ret = function () { return insertImpl(tableName, records); }; //If we have a db instance or if the initial connection promise is resolved (succeeded), then it is safe to insert immediately if (db || connectPromise.isResolved()) { ret(); } else { //else wait for the connection promise to resolve and then do the insert (this seems to be the normal use case) connectPromise.then(ret); } //Nothing worth returning at this time //return ret.promise; }; . I still have to put the finishing touches on some more of this API. Transactions become a bigger deal as you begin to write more complicated queries, and indexes (and their cursors) play a much, much larger role than I have touched upon here; but I think that this provides one alternative to the problem of working with indexedDb that is simple. . This whole abstraction needs to be lazy, and there is another round of refactoring I need to do to move it into a pure functional style; but I think it is more readable and approachable this way. . I hope to have JsPerf tests and an expanded API for my next post. Until then, I’ll leave you with the full example code: . var initDb = (function () { var name, version, db, connectPromise, upgradeIsRequired = false; var schemaScripts = [ ]; var connect = function (dbName, dbVersion, dbOnUpgrade) { upgradeIsRequired = !connectPromise || dbName !== name || dbVersion !== version; if (upgradeIsRequired) { var deferred = Q.defer(); connectPromise = deferred.promise; version = dbVersion || 1; name = dbName; dbOnUpgrade = dbOnUpgrade || function () {}; var request = window.indexedDB.open(name, version); request.onblocked = function (event) { db.close(); alert(&#39;A new version of this page is ready. Please reload!&#39;); }; request.onerror = function (event) { deferred.reject(new Error(&#39;Database error: &#39; + event.target.errorCode)); if (db) { db.close(); } }; request.onsuccess = function (event) { db = request.result; deferred.resolve(db); }; request.onupgradeneeded = function (event) { db = event.target.result; if (schemaScripts.length &gt; 0) { n$.each(schemaScripts, function (script) { //debugger; script(db); }); } dbOnUpgrade(db); }; } return connectPromise; }; var disconnect = function () { if (connectPromise.isFulfilled()) { db.close(); } else if (db) { connectPromise.done(db.close); } }; var createTableImpl = function (dbWrapper, db, tableName, tablePkColumnName, autoIncrement) { var table = db.createObjectStore(tableName, { keyPath: tablePkColumnName, autoIncrement: false !== autoIncrement, }); dbWrapper.schema.add(tableName, table); return table; }; var createTable = function (dbWrapper, tableName, tablePkColumnName, autoIncrement) { var deferred = Q.defer(); schemaScripts.push(function (db) { try { var objectStore = createTableImpl( dbWrapper, db, tableName, tablePkColumnName, autoIncrement, ); deferred.resolve(objectStore); } catch (e) { console.log(e, e.stack); deferred.reject(new Error(&#39;Could not create a new table&#39;, e)); } return dbWrapper.schemaschemaschemaschema [tableNametableNametableNametableName ]; }); return deferred.promise; }; var createIndexImpl = function (dbWrapper, tableName, columnName, indexName, isUnique) { var table = dbWrapper.schemaschemaschemaschema [tableNametableNametableNametableName ]; return table.createIndex(columnName, indexName || columnName + &#39;Idx&#39;, { unique: true !== isUnique, }); }; var createIndex = function (dbWrapper, tableName, columnName, indexName, isUnique) { var deferred = Q.defer(); schemaScripts.push(function () { try { var index = createIndexImpl(dbWrapper, tableName, columnName, indexName, isUnique); deferred.resolve(index); } catch (e) { console.log(e, e.stack); deferred.reject(new Error(&#39;Could not create a new index&#39;, e)); } return dbWrapper.schemaschemaschemaschema [tableNametableNametableNametableName ]; }); return deferred.promise; }; var insertImpl = function (tableName, records) { var deferred = Q.defer(); try { var transaction = db.transaction( [tableNametableNametableNametableName ], &#39;readwrite&#39;); var objectStore = transaction.objectStore(tableName); n$.each(records, function (rec) { objectStore.add(rec); }); deferred.resolve(true); } catch (e) { console.log(e, e.stack); deferred.reject(new Error(&#39;Could not insert records&#39;, e)); } return deferred.promise; }; var insert = function (tableName, records) { var ret = function () { return insertImpl(tableName, records); }; if (db || connectPromise.isResolved()) { ret(); } else { connectPromise.then(ret); } //return ret.promise; }; return function () { var ret = n$.object(); ret.add(&#39;connect&#39;, connect); ret.add(&#39;disconnect&#39;, disconnect); ret.add(&#39;schema&#39;, n$.object()); ret.add(&#39;ddl&#39;, { createTable: function (tableName, tablePkColumnName, autoIncrement) { var args = Array.prototype.slice.call(arguments, 0); args.unshift(ret); return createTable.apply(this, args); }, dropTable: function (tableName) { var args = Array.prototype.slice.call(arguments, 0); args.unshift(ret); return createTable.apply(this, args); }, createIndex: function (tableName, columnName, indexName, isUnique) { var args = Array.prototype.slice.call(arguments, 0); args.unshift(ret); return createIndex.apply(this, args); }, }); ret.add(&#39;insert&#39;, insert); return ret; }; })(); .",
            "url": "https://luddites.me/promises/code/persistence/2013/06/26/a-promise-to-indexed-db.html",
            "relUrl": "/promises/code/persistence/2013/06/26/a-promise-to-indexed-db.html",
            "date": " • Jun 26, 2013"
        }
        
    
  
    
        ,"post18": {
            "title": "Crunchy Frog",
            "content": "I was musing over the usual eloquence of Mr. Hague’s recent post Stumbling Into the Cold Expanse of Real Programming, when the following logical progression occurred to me. Very few of us intend to ship Spring Surprise out into the real world, rather we more often find ourselves in the quagmire that is the collision between what we knew 10 minutes ago and what we now know. . It is one thing to awake into reality from writing ASP.NET web applications, realizing that the client is far better suited to managing the life cycle of the page and, by George!, JavaScript is the language to do it–a class of the series of infinite dawnings upon which await us as developers (to which Mr. Hague aludes). . It is quite another to realize that there are giant, man-eating spiders inside the languages and frameworks you have adopted and embraced for the last few months or years. From that, it is another thing entirely to know whether these venom dripping, tentacled creatures of nightmare pose any real risk to your application or users. . Our future selves, 10 minutes from now, will know whether to fog the house, burn it all to the ground, or simply ignore them and move on. For now, it is probably best to walk slowly and carry sharp pointy things (but not too sharp, the walls could be made of people). .",
            "url": "https://luddites.me/code/2013/05/21/crunchy-frog.html",
            "relUrl": "/code/2013/05/21/crunchy-frog.html",
            "date": " • May 21, 2013"
        }
        
    
  
    
        ,"post19": {
            "title": "The Quick, Molting Sweat Lodge of the Soul",
            "content": "It was the spring of our discontent. . One of our customers, call them Massive Dynamics, needed a dedicated resource to provide application/server/database support/administration as well as an interface into development. I had joined the team as that very chimera to fill the need in early 2008. . Eight months in, and I knew enough about the application, the data, the business requirements and the infrastructure to do something that resembled contribution. I began to get sporadic and vague reports that “performance is slow” and “application is down” and “doesn’t work”. Naturally, I couldn’t reproduce any of these async requests by the time I received the callback; nonetheless, I water-boarded the log files and generally came up empty. Enhanced interrogation doesn’t work in application support either, it seems. . The complaints quickly grew by enough pay grades, that it became clear “something”, “needed”, “to be done.” It was early January, if I recall; when we hatched the perfect plan. Perfect, because we still didn’t understand the problem, because we had no control of MD’s internal infrastructure or latency between end users to web servers to databases, because we had no mechanism to try to internally reproduce MD’s production load on the scale of MD’s data. Perfect for all of these reasons. . So our perfect plan was simply this: if the only thing we can control is the software we deploy to the web servers, let’s make the web server response indestructible. Let’s build a proxy service to intermediate the request/response cycle: guarantee the user’s GETs always return a response; guarantee the user’s POSTs all, eventually commit to the database. By spring of 2009, we were ready to deploy the proxy to MD production. . At least Napoleon got to see Moscow. . +David and +Phil and Cliff and I began sweat lodging to the oldies multiple times per week.  The application was Schrödinger’s epileptic cat: simultaneous alive and dead and seizing regardless. Proxy’s only saving grace is that it persisted user’s sessions, and if we responded fast enough to each failure, we could restart the failed service and the end user would be spared. I scripted a rolling blackout across the services to preempt failure, and +David and I alternated responding to untrapped, early AM failures. . The yin yanged, and we finally pushed back: from an engineering perspective, it’s inconceivable that this suspension bridge should fail to accommodate 200 cars/minute. MD finally conceded, “Did we mention we have monsoon season and the cars are Yugos?” As it turns out, it doesn’t actually matter what you do to stabilize an application that shares a database instance and some tablespace with 400 other applications, if and when 1 or more of those other applications decides to go rogue. . So the soul molts. . Only hindsight lends real transparency into this comedy of errors. If any lessons are to be learned, I’ll defer to your good judgment to elaborate upon them. What interests me more is the process by which we can become dislodged, for better or worse. Over the months that spanned this drama, I thought of little else. Even as we bought our first house and moved. Even as Eli took to speech. The crisis was all consuming. All the walls were painted panic. . And suddenly, as if by magic, you tilt your head one tiny fraction of a degree to the north, and the whole of the world shifts, dropping the very part of you that succommed to panic with it. The road leads ever onward. . By itself, this tale is little more than a passable bar story between engineers; but the cycle of it never abates. I’ve spent the last eight months at nearly 7 on the 10 scale. “10,” I tell my doctors, “would roughly feel like having your legs sawn off with a steak knife.” Between the pain and me has floated a raft of heavy narcotics and medications. The tumor was finally extracted from my spinal column last month, and I can get out of bed without first snorting a line of percocet. . As the puppeteers of my dopamine reactors begin to resign, it starts to become clear that yet another phase of life has become dominated by a single arity: pain. While Antasi has begun to speak, and all manner of other important things and decisions and events have fallen in and out of scope, they’ve all been obfuscated behind the constant threat of something apprehending agony. . Then it ends. You tilt your head. .",
            "url": "https://luddites.me/work/sweat/lodge/2013/04/07/the-quick-molting-sweat-lodge-of-the-soul.html",
            "relUrl": "/work/sweat/lodge/2013/04/07/the-quick-molting-sweat-lodge-of-the-soul.html",
            "date": " • Apr 7, 2013"
        }
        
    
  
    
        ,"post20": {
            "title": "The Single Arity",
            "content": "Aside: In all, I’d much rather elaborate on wheres, joins, and orders by, but I have a few unfinished pieces. So on with it. . Laying here as I fade in and out of scope over the waves of recovery from back surgery, and in the quiet of these moments, I can enjoy the blissful roar of silence as it screams past my bedroom windows: the silence only an empty inbox can deliver. I started contemplating an email-abandon-ship (Part 1) a little short of a year ago. I let it simmer, and shortly after last September, I pulled the plug completely (Part 2). . Ultimately, I think I’ve proved my hypothesis: as a medium of communication, email is exactly as useful as flinging a fortune cookie into the ocean and hoping for a response. Email guarantees only two things: your fortune will go somewhere; and wherever it does go, it will probably arrive soggy. . With your head tilted at just the right angle, it’s an interesting phenomenon. From an implementation perspective, it’s very nearly like Microsoft’s decision to reverse engineer JavaScript into JScript for Internet Explorer while faithfully and painfully preserving all of its bugs (I believe +Douglas Crockford’s actual quote is in episode 2). It’s as if the e-postal express pioneers in the early email client space deliberately preserved all of the faults of asynchronous analog communication for the digital revolution. Not satisfied with that, they added spam. . The web blossomed (eventually) atop the HTTP and peer protocols by standardizing the rules for client interfaces, by imposing constraints, by limiting behavior, and by frequently just refusing to do much of anything at all. The HTML spec is a wretched mess not worthy to spread across a puddle for the crossing of a peasant farmer, but it has not yet proved a total failure. Certainly, it’s far from heaven for developers; but it has an API that is sometimes/sort of/maybe consistent across clients. An API just good enough to make beautiful things. Yet most end users are only ever vaguely aware of the browsers or the APIs or the compatibility matrices that stand as a middleman to the Internet–many don’t know which browser they use or how or why in gods’s names would you want to switch? . Compare that to email. Developers don’t care: there is no standard, no API, nothing to build upon. Client “plugins” are mere novelty items. Developers are either wasting away, throwing great creativity after mediocre, building their own new email client which will solve the problems of the world; or developers are doing something useful with their skills (if only!). Users, on the other hand, can immediately tell you which of the thousand available email clients they have used, hated, and finally endured. . And that fundamental difference speaks to the abyss between email and productivity. No one asks, “How do I use the web?” Billions continue to ask, “How do I setup email?” . We need something better, and I don’t think we can monkey patch it onto the bubonic plague infected collection of mail clients propagating throughout the world today. . If you peruse +Kwindla Kramer’s post The Cloud I’d Like to See, I think his arguments for the future of distributed file systems paint a nice parallel to the problem of email. In fact, if we think of emails as just files in folders which are distributed, shared, portable, synchronized, secured, encrypted, searchable, editable, deletable, revocable, streamable, revisionable and tightly managed in the same way we already manage file systems (as well as including some of Mr. Kramer’s insights), the solution seems a bit cleaner. . Of course, there are many more dimensions to communication beyond asynchronous, unidirectional transmission of content–our communication threads start from notes on napkins at the local cafe, transmogrify into mobile calls, mutate into group emails, condense over the course of physical meetings until something resembling a decent cup of tea pops out the end. To this end, its worth remembering that the web itself is a communication platform, not a content delivery platform; and maybe the evolution in multithreaded, asynchronous, highly concurrent, multi-directional, peer-to-peer communication will simply emerge as a natural extension of the web platform itself. . Regardless, I don’t know what the solutions will be, but I can say this: . If the urge strikes you to start a message in a bottle, instead consider talking sternly at the nearest wall. It’s guaranteed to be more productive. . As always, everything I write belongs to the Public Domain. Please take generously. .",
            "url": "https://luddites.me/email/communication/l%C3%AFf/2013/03/28/the-single-arity.html",
            "relUrl": "/email/communication/l%C3%AFf/2013/03/28/the-single-arity.html",
            "date": " • Mar 28, 2013"
        }
        
    
  
    
        ,"post21": {
            "title": "Revisiting: How to Subclass an Array (Really)",
            "content": "Update: +Axel Rauschmayer has an even more succinct post on the subject, which I highly recommend. . In the course of building out my SQL prototype, it’s immediately obvious that I have to touch the Array prototype. You could write layers of abstraction to get around this, but in my opinion it is not worth the engineering effort when extending the prototype is cleaner and low risk. Still, we are talking about Array–an object which already has inconsistencies on older browsers and which is ever expanding at the ES spec level, so the idea of subclassing an Array is nice. . Despite my own argument to the contrary over a year ago, I don’t think it possible or wise to try Array subclassing. First, let’s look at the code I wrote back then: . var array = function () { var retArray = Array.prototype.slice.apply(arguments, 0); retArray.contains = retArray.contains || function (value) { return retArray.indexOf(value) != -1; }; return retArray; }; . This has two problems. First, it doesn’t execute. We’ll get a type exception on the first line. The code needs to be: . var array = function () { var slice = Array.prototype.slice; var retArray = slice.call(arguments, 0); retArray.contains = retArray.contains || function (value) { return retArray.indexOf(value) != -1; }; return retArray; }; . It’s important to understand the difference between call and apply. While this code does return a new instance of an array with the new contains method–it hasn’t actually subclassed. I’ve polluted the Array.prototype with my new method. In order to actually create a new subclass, you first need an abstraction to help think about prototypical inheritance.  Let’s define it as: . Object.defineProperty(Function.prototype, &#39;inheritsFrom&#39;, { value: function (parentClassOrObject) { if (parentClassOrObject.constructor === Function) { //Normal Inheritance this.prototype = new parentClassOrObject(); this.prototype.constructor = this; this.prototype.parent = parentClassOrObject.prototype; } else { //Pure Virtual Inheritance this.prototype = parentClassOrObject; this.prototype.constructor = this; this.prototype.parent = parentClassOrObject; } return this; }, }); . Function inheritsFrom takes in an object and returns a ‘this’ which has been scoped as a derived class of the parentClassOrObject. This kind of prototype management is one of the reasons that it is harder (at least for me) to reason with this model. But now we have an abstraction to take care of this portion of the headache for us. Let’s write the method to actually instance a new subclass: . function makeSubClass(inheritsFrom, constructorCallBack) { //Define the method var ret = function () { //The body of the constructor var slice = Array.prototype.slice; var args = slice.call(arguments, 0); try { if (inheritsFrom) { inheritsFrom.apply(this, args); } //Optional callBack if we want to inject our own logic on construction if (constructorCallBack) { constructorCallBack.apply(this, args); } } catch (e) { console.error(e); } }; //Do the subclassing if (inheritsFrom) { ret.inheritsFrom(inheritsFrom); } return ret; } . In a lot of use cases, this pattern will work just fine. And if you were to begin playing a new array subclass instanced in this way, it would largely behave normally. . var nuArray = makeSubClass(Array); var nuInst = new nuArray(); nuInst.push(1); nuInst [0 ] === 1; //true nuInst.length === 1; //true . But you may begin to notice the drawbacks. nuArray must be instanced with the new keyword, and it can’t be instanced with data. . var nuArray = makeSubClass(Array); var nuInst2 = new nuArray(1,2,3); nuInst2.length === 0; //true?!? nuInst2 [0 ] === undefined; //true?!? //Try adding data by index nuInst2 [0 ] = 1; nuInst2 [0 ] === 1; //true nuInst2.length === 0; //true?1? . And from here, the experience continues to degrade. Using most of the Array mutator methods and all of the Array iterator methods will operate on and return Array instances–not instances of your subclass. You’ll quickly find instance mutation to be rampant and unpredictable. . You can continue down this path and try implementing your own overrides as callbacks. You can get really, really clever with this stuff; but ultimately, in my opinion–as written, Array was never intended to be the parent of a derived class. Just don’t go in that pool. . Embrace the extension of native objects, because that use case was clearly planned from the start. . --As always, everything I write, in whatever language I write it, is fully released to the public domain. .",
            "url": "https://luddites.me/code/2013/03/17/revisiting-how-to-subclass-an-array-really.html",
            "relUrl": "/code/2013/03/17/revisiting-how-to-subclass-an-array-really.html",
            "date": " • Mar 17, 2013"
        }
        
    
  
    
        ,"post22": {
            "title": "Currying Favor with Partial Application to get JavaScript SQL",
            "content": "There is a domain that attends to curry as one of the quintessential elements of regional cuisine. This is not that domain; though in this domain I would argue we need a paprika. . If the terms curry or partial application are at all unfamiliar to you, I highly recommend Reg Braithwaite’s latest opus on the subject. Lending support are +Ben Alman with his own eviscerating tour de force as well as +Axel Rauschmayer with his very, extremely, routinely reputable entry. If you’ve ever followed me here before, you may remember a fog surrounding an idea that touched on partial application from Good Reads, where I linked to (again to Mr. Braithwaite) the skinny. . Do not be confused, dismayed, disheartened or discouraged. Currying and partial application are not easy-to-grok. The literature on the subject, while vast, is dense. Even in the most skilled hands, attempts to bring these tomes down from Mt. Sinai, have not routinely resulted in greater clarity. . But this is not yet-another-indoctrination on the subject. Defer to the authorities above for that. Here, I’m attempting  to exploit the potential for good. Using both ingredients, it is possible to create a semantic for querying JavaScript objects in a syntax that resembles SQL. Are there other solutions to do this? Yes. . Once you’ve apprehended grokation of the concepts, it should be straightforward to see the implementation of a few partial application standard methods: map, filter and fold. Lots of libraries have already done the diligence and written these for us but for the sake of having something to write, let’s implement them again (In the real world, you’re better off taking what functional js or wu.js have already built)! . function curryLeft(func) { var slice = Array.prototype.slice; var args = slice.call(arguments, 1); return function () { return func.apply(this, args.concat(slice.call(arguments, 0))); }; } function foldLeft(func, newArray, oldArray) { var accumulation = newArray; each(oldArray, function (val) { accumulation = func(accumulation, val); }); return accumulation; } function map(func, array) { var onIteration = function (accumulation, val) { return accumulation.concat(func(val)); }; return foldLeft(onIteration, [ ], array); } function filter(func, array) { var onIteration = function (accumulation, val) { if (func(val)) { return accumulation.concat(val); } else { return accumulation; } }; return foldLeft(onIteration, [ ], array); } . With just these, we can do something that’s almost cool. We can extend the native Array class to add some new methods: . Object.defineProperties(Array.prototype, { _where: { value: function (func) { return filter(func, this); }, }, _select: { value: function (func) { return map(func, this); }, }, }); . At this point, given an instance of an Array (thanks to Faker), like: . var somePeople = [ {&quot;FirstName&quot;:&quot;Cristina&quot;, &quot;LastName&quot;:&quot;Quigley&quot;, &quot;PhoneNumber&quot;:&quot;1-189-868-2830&quot;, &quot;Email&quot;:&quot;Imelda@lourdes.ca&quot;, &quot;Id&quot;:0}, {&quot;FirstName&quot;:&quot;Eriberto&quot;, &quot;LastName&quot;:&quot;Bailey&quot;, &quot;PhoneNumber&quot;:&quot;1-749-549-2050 x36612&quot;, &quot;Email&quot;:&quot;Pamela _Gaylord@ludie.net&quot;, &quot;Id&quot;:1}, {&quot;FirstName&quot;:&quot;Amina&quot;, &quot;LastName&quot;:&quot;Schaden&quot;, &quot;PhoneNumber&quot;:&quot;463-301-9579 x9511&quot;, &quot;Email&quot;:&quot;Conner _Gusikowski@jolie.tv&quot;, &quot;Id&quot;:2} ]; . If we wanted to select the FirstName of each record, we could do something crude like: . somePeople. _select(function (row) { return row.FirstName; }); . But this is still too obtuse. With a little curry, we can make it better. We used partial application to get to ‘_select’, but we can switch gears to curry to get a better query mechanism. First, let’s define a query method: Update: we technically don’t need curry here, as we’re not abstracting the ‘query’ object as a parameter. Thanks to Thomas Burette in the comments. . var query = function (array) { var tables = [ ]; tables.push(array); var _query = { tables: tables, from: from, select: select, run: run, }; return _query; }; . select and from methods are straightforward: . function select() { var query = this; var slice = Array.prototype.slice; var args = slice.call(arguments, 0); query.columns = query.columns || [ ]; each(args, function (argumentValue) { query.columns.push(argumentValue); }); return query; } function from(array) { var query = this; query.tables.push(array); return query; } . which then only leaves execution. I’ve deliberately not optimized this method for the purpose of illustration: in the absence of the tools, this is what such code looks like. Look at the redundancy and duplication. Marvel at the inelegance. Appreciate the fact that it works. . function run() { var query = this; var ret = [ ]; if (query.columns.length &gt; 0) { var results = [ ]; each(query.columns, function(columnName) { each(query.tables, function(tbl) { if (Array.isArray(tbl)) { var res = {}; var val = tbl. _select(function(val) { return val [columnName ]; }); if (val) { res [columnName ] = val; results.push(res); } } }, true); }); var returnRows = [ ]; if(results &amp;&amp; results.length &gt; 0) { var firstResult = results [0 ]; each(firstResult, function(val, key) { each(val, function(cell){ var row = {}; row [key ] = cell; each(results.slice(1), function(result) { each(result, function(v,k){ each(v, function(c) { row [k ] = c; }) },true) },true) returnRows.push(row); },true); },true) } } return returnRows; } . Now, this yields a syntax which looks a lot more like SQL: . var newQuery = query(people).select(&#39;FirstName&#39;, &#39;LastName&#39;); var results = newQuery.run(); . From here, ‘where’, ‘join’ (yes I said JOIN), ‘orderby’ and ‘groupby’ are all implementation details. This is just a proof-of-concept post, but given some large Faker data sets it already works quite well given its limitations. Refactoring ‘run’ into a method which utilizes partial application will yield mountains. . As always, everything I blog and code is public domain. You can view the source from the oj-sql project here, collab with me on c9 here, or do whatever strikes your whim. May the wind that strikes your whim be always at your back. .",
            "url": "https://luddites.me/code/curry/2013/03/16/currying-favor-with-partial-application-to-get-java-script-sql.html",
            "relUrl": "/code/curry/2013/03/16/currying-favor-with-partial-application-to-get-java-script-sql.html",
            "date": " • Mar 16, 2013"
        }
        
    
  
    
        ,"post23": {
            "title": "The Greatest Heist Ever Conceived",
            "content": "The Heist . Part 1: The Mark . By now, I think it fairly safe to say that no one seriously disputes the fact that Industrial Protectionism infringement is no different than all other forms of theft (either literally or figuratively). Copyright infringement, patent infringement, trademark violations? Theft. Pure and simple. Sharing knowledge and culture is fundamentally no different than breaking into someone’s home and stealing their chia pets. . Except that it’s even worse. When a person is robbed of a tangible asset, they (generally) lose only the asset; however, when Industrial Protectionism infringement occurs, the monopoly is damaged much more. In fact, the collateral damage to the whole industry can be quite profound: the Betamax nearly killed the corn industry. . Our forefathers wisely predicted the irreparable harm that would befall innovators if not afforded indefinite, government granted monopolies over their creations: just look at the pace at which public domain books are robbing the publishing industry of its value. . So it’s intuitively obvious why Industrial Protectionism rights must be defended at times even more vigilantly than our Amendment rights. Mechanics can’t be allowed to listen to the radio any more than Girl Scouts can be allowed to sing “Happy Birthday”; neither could we allow churches to gather on that Super Day to watch that largish sporting event any more than we could let YouTube show Dr. King’s “I have a Dream”. These inflict immediate, permanent, scarring injuries upon the monopolies who have poured their very essence into their creations, ex nihilo. . Part 2: The Payout . This is intuitively obvious. Why are we even talking about it? . Because this presents the potential for the biggest heist in the history of human heists: steal the GDP of the world (the net, the gross, the whole shebang) in less than a week. Let’s steal $1,000,000,000,000 an hour in pure JavaScript. . We know that sharing knowledge and culture is theft. It doesn’t matter what we do with the stolen property: we can store it, we can throw it away, we can give it back immediately–it matters not. Theft is theft, plus the cascading effect to the entire infrastructure of the owner can vary from $22,500 - $4,500,000/sharing of knowledge and culture. Based on current case law, few juries have awarded much higher than $80,000/sharing of knowledge and culture, but our intent to share knowledge and culture is willful to the extreme, with the intent to encourage second and third party sharing of knowledge and culture-without remorse. Surely we could steal closer to the $4 million dollar mark. . Stealing an MP3 is roughly equivalent to stealing a US Dollar in immediate, tangible losses to the copyright owner. To net our trillion by stealing The Beatles’ Love Me Do, we would need 250,000 downloads/hour (assuming we net $1/song + $4,000,000/damages). Even though our sharing of knowledge and culture is willful, explicit, broadcast and encouraged…MP3s are still large enough that, even at the higher damages, this probably won’t scale to the volume we need per hour. . The estate of Dr. King charged the US government $856,160 for the rights to Dr. King’s image and 409 of his words to inscribe on the memorial in D.C.. King’s I Have a Dream speech consists of 1660 words, the value of which is increased by the film, the delivery, the presence and the power of the man. Stealing this video is roughly equivalent to excavating Dr. King’s tomb, bringing his body into the house of his estate, stealing the good silver and then burning the estate to the ground; but based on the value of the word count alone, let’s assume this would yield a mere $3,424,640/sharing of knowledge and culture–pessimistically less than stealing from The Beatles (and the video file size is larger/sharing of knowledge and culture). . There is another avenue yet. The eBook. Let’s pick something that has been rescued from the public domain: Minority Report. eBooks average $10/book and they are tiny compared to videos and music. We can easily get our shared knowledge and culture compressed down to around 20 kilobytes–smaller than half of the JavaScript files required to render this page, most of which load in around 200 ms. . Anything we repeatedly download from any given server will be immediately fetched from the local cache (less the round-trip to verify no file changes have occurred), therefore repeated downloads will complete in 50 ms or less. Assuming the average attention span of the user of the page holds constant at around 4.5 seconds, that gives us the potential for 87 infringements/user/page load. At this rate, we could effectively bag our target with 2,874 visitors an hour. . Part 3: The Plan . If you’ve made it this far, it’s quite possible that the entire continent of Africa is in near financial ruin. Parts of Europe may also be crumbling before your very eyes. . Anonymous, peer-to-peer file sharing has landed in pure JavaScript in a browser near you. Effectively, any compliant browser can be instantly turned into The Greatest Heist Ever Conceived. .",
            "url": "https://luddites.me/code/copyleft/2013/01/31/the-greatest-heist-ever-conceived.html",
            "relUrl": "/code/copyleft/2013/01/31/the-greatest-heist-ever-conceived.html",
            "date": " • Jan 31, 2013"
        }
        
    
  
    
        ,"post24": {
            "title": "Stealing a Trillion Dollars an Hour in Pure JavaScript",
            "content": "The Heist . Part 1: The Mark . By now, I think it fairly safe to say that no one seriously disputes the fact that Industrial Protectionism infringement is no different than all other forms of theft (either literally or figuratively). Copyright infringement, patent infringement, trademark violations? Theft. Pure and simple. Sharing knowledge and culture is fundamentally no different than breaking into someone’s home and stealing their chia pets. . Except that it’s even worse. When a person is robbed of a tangible asset, they (generally) lose only the asset; however, when Industrial Protectionism infringement occurs, the monopoly is damaged much more. In fact, the collateral damage to the whole industry can be quite profound: the Betamax nearly killed the corn industry. . Our forefathers wisely predicted the irreparable harm that would befall innovators if not afforded indefinite, government granted monopolies over their creations: just look at the pace at which public domain books are robbing the publishing industry of its value. . So it’s intuitively obvious why Industrial Protectionism rights must be defended at times even more vigilantly than our Amendment rights. Mechanics can’t be allowed to listen to the radio any more than Girl Scouts can be allowed to sing “Happy Birthday”; neither could we allow churches to gather on that Super Day to watch that largish sporting event any more than we could let YouTube show Dr. King’s “I have a Dream”. These inflict immediate, permanent, scarring injuries upon the monopolies who have poured their very essence into their creations, ex nihilo. . Part 2: The Payout . This is intuitively obvious. Why are we even talking about it? . Because this presents the potential for the biggest heist in the history of human heists: steal the GDP of the world (the net, the gross, the whole shebang) in less than a week. Let’s steal $1,000,000,000,000 an hour in pure JavaScript. . We know that sharing knowledge and culture is theft. It doesn’t matter what we do with the stolen property: we can store it, we can throw it away, we can give it back immediately–it matters not. Theft is theft, plus the cascading effect to the entire infrastructure of the owner can vary from $22,500 - $4,500,000/sharing of knowledge and culture. Based on current case law, few juries have awarded much higher than $80,000/sharing of knowledge and culture, but our intent to share knowledge and culture is willful to the extreme, with the intent to encourage second and third party sharing of knowledge and culture-without remorse. Surely we could steal closer to the $4 million dollar mark. . Stealing an MP3 is roughly equivalent to stealing a US Dollar in immediate, tangible losses to the copyright owner. To net our trillion by stealing The Beatles’ Love Me Do, we would need 250,000 downloads/hour (assuming we net $1/song + $4,000,000/damages). Even though our sharing of knowledge and culture is willful, explicit, broadcast and encouraged…MP3s are still large enough that, even at the higher damages, this probably won’t scale to the volume we need per hour. . The estate of Dr. King charged the US government $856,160 for the rights to Dr. King’s image and 409 of his words to inscribe on the memorial in D.C.. King’s I Have a Dream speech consists of 1660 words, the value of which is increased by the film, the delivery, the presence and the power of the man. Stealing this video is roughly equivalent to excavating Dr. King’s tomb, bringing his body into the house of his estate, stealing the good silver and then burning the estate to the ground; but based on the value of the word count alone, let’s assume this would yield a mere $3,424,640/sharing of knowledge and culture–pessimistically less than stealing from The Beatles (and the video file size is larger/sharing of knowledge and culture). . There is another avenue yet. The eBook. Let’s pick something that has been rescued from the public domain: Minority Report. eBooks average $10/book and they are tiny compared to videos and music. We can easily get our shared knowledge and culture compressed down to around 20 kilobytes–smaller than half of the JavaScript files required to render this page, most of which load in around 200 ms. . Anything we repeatedly download from any given server will be immediately fetched from the local cache (less the round-trip to verify no file changes have occurred), therefore repeated downloads will complete in 50 ms or less. Assuming the average attention span of the user of the page holds constant at around 4.5 seconds, that gives us the potential for 87 infringements/user/page load. At this rate, we could effectively bag our target with 2,874 visitors an hour. . Part 3: The Plan . If you’ve made it this far, it’s quite possible that the entire continent of Africa is in near financial ruin. Parts of Europe may also be crumbling before your very eyes. . Anonymous, peer-to-peer file sharing has landed in pure JavaScript in a browser near you. Effectively, any compliant browser can be instantly turned into The Greatest Heist Ever Conceived. .",
            "url": "https://luddites.me/code/copyleft/2013/01/31/stealing-a-trillion-dollars-an-hour-in-pure-java-script.html",
            "relUrl": "/code/copyleft/2013/01/31/stealing-a-trillion-dollars-an-hour-in-pure-java-script.html",
            "date": " • Jan 31, 2013"
        }
        
    
  
    
        ,"post25": {
            "title": "Good Reads",
            "content": "Of the part of the day I don’t spend eating, sleeping or enjoying/surviving my family, I spend it in roughly equal parts reading and writing. While my reading habits have evolved, the relative quality of what I end up reading has varied very little over the years. Most of what I read is just… ok. I think it’s nearly always possible to profit from everything read (assuming some discretion is applied upfront)–even if the effect is merely the intellectual equivalent to eating celery. . Some of it though–some of it, is just spectacular. So good, I think it worth isolating and sharing. Before I do, allow my wind to extend just another paragraph or so to explain “why” I think these links are worth sharing. From my perspective, the links that will follow represent illuminating content by competent authors–authors whom you should follow, who consistently (because they are competent) continue to generate content of the same excellence and whose advice and opinions can be trusted to be worth thinking about. . As a last aside, what do I mean by “competent”? . I don’t intend for the following two observations to be terribly polarizing: competency is both a diffuse term and a complex unit of measure; but I won’t worry too much about the impact of the next. To my mind, in any given specialty (software engineering, baseball, philosophy, marine biology, etc), only a relatively few individuals will emerge and be recognized as competent. I doubt it possible to draft a definition for competence which could accurately apply to all distinct domains (much less the combinations we practice in reality); yet, for the purpose of this recommendation, let’s call it so: . competence . com·pe·tence [kom-pi-tuh ns] noun . possessionof excellence in requiredskill,knowledge,qualification [domain]; comprehensive understanding of the components and sub-components of the domain; ability to communicate both specific and abstract components of domain to non-competent peers; ability to train others in the domain and bring them to competency:Nikola Tesla was one of the few competent inventors of his generation. | So without further ado, a few things worth reading: . From Reg Braithwaite’s excellent experiment, Homoiconic, his recent essay Practical Applications of Partial Application. It’s. Just. Fantastic. He takes functional programming down the bones and reconstructs a the organism. This is not only just a great article on software engineering, it’s the template for great articles on software engineering. His standard blog, raganwald’s posterous, is also excellent. | | From +Douglas Crockford, his recent talk, Monads and Gonads, is wonderful. I wish I could have been there. Afterwards, when you think you’ve understood what he demonstrated, grab the code from the lecture and try to implement it. If that proves challenging in the least, revisit #1. Nearly all of Crockford’s videos are worth watching, but he can also write. From crockford.com, see his Satan Comes to Dinner. | | From James Hague’s, programming in the 21st century, his Hopefully More Controversial Programming Opinions, which includes this gem: “You shouldn’t be allowed to write a library for use by other people until you have ten years of programming under your belt.” While I can’t know his competency as a developer, because he rarely if ever show actual code, as a writer about software engineering, he’s a wellspring. | That’s all. A small fraction of what I read, which you can see most of it on my Netvibes profile, somecallmechief. .",
            "url": "https://luddites.me/work/competence/code/2013/01/13/good-reads.html",
            "relUrl": "/work/competence/code/2013/01/13/good-reads.html",
            "date": " • Jan 13, 2013"
        }
        
    
  
    
        ,"post26": {
            "title": "JavaScript (aka Marlboro Country)",
            "content": "Sometimes JavaScript land just feels like Marlboro Country. The sales pitch certainly feels similar: . . Come to the hottest part of the United States. It’s popular. It’s everywhere. It’s the future. Now: cover yourself in leather. Don’t ask why. It’s part of the feature set. Next: the temperature is 120 degrees, and you need to start a fire. It’s not supposed to make sense, that’s the point. You’ll need to do this at noon every day. After about 10 days, you’ll find yourself assaulting anyone _not_ starting noonday fires. C’mon?! What’s the worst that could happen? Imagine: right now, you could be riding across a brush fire.. or maybe it’s a dust storm.. or maybe.. who knows? Everything’s mutable! Ride across anything you want. Of course, you are limited to desert colors (obviously). . Lest you be confused, I love JavaScript. While the language as specified is littered with nightmarish design flaws and obstacles reminiscent of trench warfare and carpet bombing (let’s call them WATs), JavaScript’s Good Parts are so good you might be forgiven for forgetting about that elephant in the bathroom (aka IE). Yet. . Yet and yet, the WATs do also rise. And they rise. . A few weeks ago, I began to set ink to digital paper to record the recipe for my new found WAT. There is a delightful tool for recording code demonstrations, The Code Player. While the demos presented are quite nice, I lost all 5 of my first drafts to bugs in the system. Still, you should keep an eye on it. I considered reverting to my old faithful, JSFiddle, which is fantastic for mocking up and testing code but less suited for driving a walk through. In the end, syntax highlighting in the blog will have to must suffice. . The municipal “we” begin with a simple function: . function doVerbOnNoun(aThing) { console.group(aThing); //In theory, if(aThing) should be equivalent to if(true == aThing) if (aThing) { console.log(&#39;Verbing on &#39; + aThing); } else { console.log(&#39;Not verbing on &#39; + aThing); } console.groupEnd(aThing); } . A naïve developer, like myself, would assume that our guarding if(truthy) would apply the loose, truthy type coercions we have been trained to avoid; and an undisciplined tester, like myself from a few moments ago, might almost be forgiven for missing the lawn for the dandelion. The following assertions execute as expected naïvely: . //Strings: doVerbOnNoun(&#39;aThing&#39;); //We verbed doVerbOnNoun(&#39;&#39;); //Verb, we did not //Numbers: doVerbOnNoun(5); //We verbed doVerbOnNoun(NaN); //Verb, we did not //Booleans: doVerbOnNoun(true); //We verbed doVerbOnNoun(false); //Verb, we did not //Null and undefined: doVerbOnNoun(null); //Verb, we did not doVerbOnNoun(undefined); //Verb, we did not . But if the republic of we would but pause and stare but briefly into the abyss, it becomes immediately apparent that loose, truthy typely coerced evaluation is not happening here. . doVerbOnNoun(&#39;a string of some sort&#39;); //We verbed console.assert(true == &#39;a string of some sort&#39;, &quot;&#39;true&#39; != &#39;a string of some sort&#39;&quot;); //Assertion fails doVerbOnNoun(5); //We verbed console.assert(true == 5, &quot;&#39;true&#39; != 5&quot;); //Assertion fails doVerbOnNoun(&#39;0&#39;); //We verbed console.assert(true == &#39;0&#39;, &quot;&#39;true&#39; != &#39;0&#39;&quot;); //Assertion fails . To my mind, this is irrational, unsettling and in possible violation of the laws of gravity; yet, it had never occurred to me that an if(‘gimme shelter’) statement would ever not be met as truthy. In fact, my mind was so far out of touch with the rules of the matrix, that I spent a few fevered seconds struggling with this paradox: . doVerbOnNoun({}); //We verbed console.assert({} == true, &#39;{} != true&#39;); //Assertion fails console.assert({} == false, &#39;{} != false&#39;); //Assertion fails . Clearly, loose truthy evaluation is not part of the algorithm of the single parameter if() statement. The multinational we can exercise some futility by instrumenting doVerbOnNoun with some diagnostics: . function doVerbOnNoun(aThing) { console.group(aThing); if (aThing) { console.log(&#39;Verbing on &#39; + aThing); } else { console.log(&#39;Not verbing on &#39; + aThing); } console.log(!aThing, &#39;evaluating (!&#39; + aThing + &#39;)&#39;); console.log(false != aThing, &#39;evaluating (&#39; + aThing + &#39; != false)&#39;); console.log(false != (false == aThing), &#39;evaluating (false != (false == &#39; + aThing + &#39;)&#39;); console.log(true == aThing, &#39;evaluating (&#39; + aThing + &#39; == true)&#39;); console.groupEnd(aThing); } . But none of the assertions align with the evaluation of the if() statement 100% of the time. So what is actually happening? Pure, unbiased, unmitigated, unabashed madness–that’s what. Section 12.5 of the ECMAScript specification defines the if() statement as: . “The production IfStatement : if ( Expression ) Statement is evaluated as follows: Let exprRef be the result of evaluating Expression. If ToBoolean(GetValue(exprRef)) is false, return (normal, empty, empty). Return the result of evaluating Statement.” . What of ToBoolean, you ask (jaws clenched in fear, rage and agony)? It is sufficiently (albeit imperfectly) expressed as: . var ToBoolean = function (val) { return ( val !== false &amp;&amp; val !== 0 &amp;&amp; val !== &#39;&#39; &amp;&amp; val !== null &amp;&amp; val !== undefined &amp;&amp; (typeof val !== &#39;number&#39; || !isNaN(val)) ); }; . At least to the existential “us”, this revelation is almost laughably ironic. The if() statement isn’t loose or truthy and doesn’t coerce type whatsoever, rather it simply casts whatever it is offered ToBoolean(). . So ends this rather unsatisfying diversion into JavaScript. Please don’t let this sully your feelings on the language. Restore your faith and go watch +Douglas Crockford’s latest, most excellent talk on Monads and Gonads. It’s worth every minute of your time. .",
            "url": "https://luddites.me/code/2013/01/03/java-script-aka-marlboro-country.html",
            "relUrl": "/code/2013/01/03/java-script-aka-marlboro-country.html",
            "date": " • Jan 3, 2013"
        }
        
    
  
    
        ,"post27": {
            "title": "Complex Units of Measure",
            "content": "I embrace the Stevie’s Home approach to life, and my return home from work usually looks more like a cathartic reconciliation between Carnivorous Vulgaris and Accelleratii Incredibus than a rational re entry to domestic life. On Monday, immobilized by my three pronged, patent-pending, tickle attack, Eli cried out, “Dad!! I exercise EVERY DAY. Why can’t I escape?” . It’s a wonderful question and a brilliant insight into the meta data of life. Why can’t a 4 year old beat his father at the ol bear-hug/tickle-match? If the Olympics were an actual competition of sport, it’s the sort of question you might hear in comparing the competence of two athletes. In fitness, we are near rivals except for the subfields affected by mass: Eli would need at least 3x his current mass to even pose a credible challenge. Yet in agility, core muscle strength, speed and dexterity, we are relatively equal when evaluated proportional to our weight. He is impacted by experience: he lacks muscle memory, endurance and accuracy, but these can be mitigated in young athletes by a greater supply of energy, irrational optimism and emotional charge. . If we were of comparable mass, it’d be a tough call to guess the tickler vs the tickled. . Competence, like most complex units of measure (risk, efficiency, aptitude), is domain specific. The most important attribute of a competent marksman is safety. Speed and accuracy are secondary in importance if a marksman isn’t safe). Neither speed nor accuracy become positive attributes of the unit until safety is realized. Likewise, speed is irrelevant until accuracy is high. . You could simply call this efficiency: how fast we can do things well. The fast attribute is irrelevant until the well attribute is measured above favorably. Thus we could attempt to measure the relative competence of anyone at anything by evaluating for efficiency. I suspect that the domain specific nature of most of what we do in our lives makes this kind of abstraction difficult, at best. . That is all. I’ve been stewing over this particular introspection for some time. It hasn’t altered my view of the world, though it has changed the way I view it–and with any luck, I hope to better quantify that view in the future. .",
            "url": "https://luddites.me/l%C3%AFf/home/2012/10/02/complex-units-of-measure.html",
            "relUrl": "/l%C3%AFf/home/2012/10/02/complex-units-of-measure.html",
            "date": " • Oct 2, 2012"
        }
        
    
  
    
        ,"post28": {
            "title": "Communicating and Why I Quit Email (Episode 1)",
            "content": "In the early 90s, the constraints imposed by dial-up speeds made email my primary interface for interacting with the Internet. Services like Juno made it even easier to connect, subscribe to listservs, and to surf the self-curated content that was the Web–in my inbox. Had I been born a little earlier than 1980 or had I a more computer-sciency bias imposed by my parents or peers, I might just as easily started with Usenet. But. I did not, and email was my entry point to online communications. . In the early days of AOL, they implemented this fantastic feature on their proprietary email client: if sending emails to/from AOL account holders, you could see the read status of the message and, if the message was unread, you could remote delete it. These two features have been rebel rousing in my head as I approach the first month of my hiatus from personal email. . That is correct. I quit email. . For me, the problem with IMAP/POP3/SMTP (Exchange/ActiveSync, BlackBerry, iCloud, etc)… the problem with email is that it doesn’t solve any real (actual or imagined) problem well. Email provides this thin service: . The Sender is allowed to send any arbitrary text message (permitted length not always known/guaranteed, UI rendering of content not known/guaranteed) with a (sometimes permitted) optional binary attachment(s) (availability of which to 1.ipient depending upon client is unknowable) to a valid Recipient (string’@’string’.’string). | If an Author sends a valid message to an invalid Recipient or if a trapped error occurs during delivery, the mail exchanger will return an error. | The Recipient is guaranteed to receive all valid messages sent to the Recipient’s address, if the delivery attempt succeeded. | That’s it. While various clients (GMail, Thunderbird, etc) have (sometimes greatly) improved upon components of email’s core weaknesses, none has succeeded in being more than a really good band-aid on untenable platform. I have used email to try to solve notifications, scheduling, reminders, planning, archiving, bartering, trading and so, so on. Email has failed to solve no other problem quite so spectacularly as it fails to solve the problem of communication. . Ground -1. One-on-one physical, verbal, direct, close-proximity communication with my wife. I get: . To Start a dialog | Immediate, visual cues that what has been said has been heard, acknowledged and understood | Immediate opportunity to correct failures in hearing, acknowledgement or understanding of a given item | To End a dialog | . Simply by speaking one-on-one, we can quickly define the problem (“What to order for dinner?”), explore the problem (“What did we eat last night? What are we in the mood for? What will the kids eat?”), and solve the problem (“Pizza.”). At every exchange in the cycle, we know whether we’ve been heard, whether we resolved the problem, and when we’re done. . Anyone who manages or co-manages an organization larger than 1 person implicitly knows the right tools to communicate with their team on daily chores: dinner, shopping, house/car/lawn maintenance, changing diapers vs feeding the baby. No sane person ever selects email as the tool for this conversation. Yet the same people, with the same implicit understanding about the nature of communicating, will (without thinking) choose email to communicate the organization of office lunches or product failures. . As inferior a tool email is at communication simple tasks, its failure rate begins parabolizing as the complexity of the subject matter increases. Would you pick email out of the toolbox to approach the “I forgot our anniversary” subject? Natural language communication makes it possible to seamless transition from apology, to night on the couch, to reckless (and expensive) expression of love, to night on the couch, to sincere and heartfelt apology, to forgiveness. . Communication itself is inherently volatile. Under the most optimum conditions, I routinely fail. Spectacularly. Our individual capacity to communicate and maturation of the components of the skill: reading subtlety and subtext, expressing nuance, employing empathy, listening, speaking, not-speaking–vary wildly by age, time of day, coffee levels and mood. Choosing the right communication tool doesn’t give your skillset a shot of human growth hormone, but choosing the wrong tool can be the equivalent of voluntary amputating your pitching arm, and choosing email as the tool is akin to amputating both arms and batting with your mouth. . To my mind, Google Wave’s ultimate failure rested not on the poor execution of the platform itself but on the non-existent explanation of the problem Wave was intended to solve. Natural communication incorporates all of our senses with real-time, tactile feedback. Any attempt to bring communication online must preserve most of what we get out of the box from Nature and it must incorporate many of the new tools we have implemented in the digitical space. . Email does not do this, nor can email do this. I do not believe that standards can solve the issue for email either. In fact, I cannot envision a solution at all. . However. I can stop participating in the problem. By selecting email out of my digital gene pool, I am forced to find tools that actually solve my comminications issues. . Yes, it does mean the proliferation of narrowly focussed tools. | Yes, it’s inconvenient for 100% of the people with whom I communicate regularly. | Yes, noone but me likes this idea. | Yes, next to noone will stop trying to use email to communicate as a result of this extroversion. | Yes, my spam folder is overflowing with “assisted suicide” offers as a direct result of this decision. | Yes, I admit that even though I have stopped sending email–I have still checked it once or twice to be sure I am not really insane. | . Still, I have not missed an important event or failed to follow through on a task as the result of not using email; and I have 10% more of my day to work on things I care about. . We will see what month #2 has to offer. .",
            "url": "https://luddites.me/l%C3%AFf/communication/email/2012/07/08/communicating-and-why-i-quit-email-episode-1.html",
            "relUrl": "/l%C3%AFf/communication/email/2012/07/08/communicating-and-why-i-quit-email-episode-1.html",
            "date": " • Jul 8, 2012"
        }
        
    
  
    
        ,"post29": {
            "title": "Your Hyperbole is Too Large",
            "content": "A confluence of events have me pondering a kernel of an idea. Prometheus decapitated anticipation, and even the experience of watching the film rivaled the Astor Theater’s recent fail.Then I read Jame’s post, Your Coding Philosophies are Irrelevant, which triggered a thought. . Last night, I let Netflix streaming do the driving and watched two (“Top 10 for Christopher”) films: Rammbock and Pontypool. Both are minimalistic horror films which slowly build tension and suspense and develop real characters (of the two, I thought Pontypool pushed more boundaries and delivered more reward). Both do this with a fraction of the budget of Prometheus, few special effects, and bias toward keeping the creatures out-of-view. Just as with the original Alien, what you can’t see is almost always scarrier than what you can. . It’s impossible to know what disciplines of theater, photography, writing, production, cinematography, composition and filmmaking (if any) the three teams employed; but just as Jame’s accurately notes–it doesn’t matter. Prometheus stole 3 hours of my life, while Rammbock and Pontypool returned value. We can’t peer inside the black box of the films’ construction to divine what philosophies drove the choices the directors made, but if I had to hazard a guess, I’d say Mr. Scott is more religious about adhering to various filmmaking idioms and paradigms, while the others are not. . It’s pure speculation, of course, and perhaps not worth significant reflection; however, consider these films as software. As horror films, they have a primary function: to scare us. As science fiction films, they also have a nice-to-have function: to probe intellectual, moral and ethical boundaries. Prometheus is to iTunes what Pontypool is to Spotify. . There’s something that resonates in me with Jame’s conclusion: “It’s not the behind-the-scenes, pseudo-engineering theories that matter. An app needs to work and be relatively stable and bug free, but there are many ways to reach that point… And it might just be that too much of this kind of thinking is turning you into an obsessive architect of abstract code, not the builder of things people want.” . Clearly, the best prime directive is to build things people want to use. When I ask for a horror film, no matter what you do under the hood, if you give me a Prometheus–you’re wrong. .",
            "url": "https://luddites.me/film/reviews/hyper/bole/2012/06/16/your-hyperbole-is-too-large.html",
            "relUrl": "/film/reviews/hyper/bole/2012/06/16/your-hyperbole-is-too-large.html",
            "date": " • Jun 16, 2012"
        }
        
    
  
    
        ,"post30": {
            "title": "Physical Books (and Such)",
            "content": "I don’t read as many books as I used to, and I wonder why. . Before: . Growing up in Mississippi, the son of a minister, books were the swiss army knife of childhood survival. I had to read as much as possible to understand the overwhelming guilt that is the reformed Presbyterian’s constant companion and to wield the irrationally large words required to defend that guilt as good, godly, honorable, desirable and prosecute it as an equally detestable, abhorrent thing. . Books were also one of the best respites from the theological gauntlet which never seemed to end. I used to be just as comfortable in 10 lbs tomes like the New York Public Library Desk Reference or dictionaries of cultural literacy or an early 1970s edition of Encyclopedia Britannica as I was in Tolkien, Hemingway, Dahl, Herbert, Clawell or Bradbury. If it was in the home or school library, I probably read it at least twice. . This continued until I returned from Iraq, when I was 24. Up to this point, I also spent nearly as much of my time consuming every other form of media. I had collected upwards of 1,000 CDs, more than 30,000 tracks in my whatever-was-before-iTunes collection. I had 700 DVDs of movies and shows I bought and watched, at least twice–and I had watched at least 3 times that amount between renting and going to the theater. . Then: . Abruptly, the whole pattern of my consumption shifted. Starting at age 25 and with increasing severity, I had developed an impatience. If consumption did not begin yielding quick returns on investment–be it pleasure, edification or even frustration and irritation, I terminated it. I found myself no longer willing to risk my time (now a scarcer resource) on anything which wasn’t easily converted into value. Fewer books, fewer albums, fewer films. . Now: . I read one physical book last year, Game of Thrones. Similarly, my consumption of other media is way down. While this might seem like a loss, I’m not yet sure. I still read as much as or more than I ever have. I’ve format shifted, in a way. Now, I follow 150 or more content feeds from blogs across the spectrum, various syndicated streams from news sites and whatever falls into the else bucket. . Of course, one of the very best value-added features of reading a novel or watching a great film is the transformative nature of the experience. You read King Rat, and (if you’re like me) you begin to root for the protagonist as Clawell carefully scopes the action and the drama to lure you into liking this particular abomination. You are pulled all the way through the rabbit hole and then he shreds the veil. You learn something you didn’t know about yourself, something uncomfortable, something challenging. And that’s good. A book can expose you for who you really are but weren’t able to grok by yourself. . This cathartic scab-ripping is important, at least to me; but it’s much harder consuming short articles, essays and blurbs. It requires internal combustion to drive it. Vigilance. Doubt. . I still haven’t read Crime and Punishment, and I know in my gut that I’m a weaker person without it; yet it continues to collect dust as it eyes me, passive-aggressively from my bookshelf. . Maybe it’s impulsiveness that keeps me jumping from feed to feed, and maybe it’s unhandled optimism that allows me to persist the notion that this behavior is OK. Still, I’m not certain. . It is different. .",
            "url": "https://luddites.me/inventory/meandering/2012/05/24/physical-books-and-such.html",
            "relUrl": "/inventory/meandering/2012/05/24/physical-books-and-such.html",
            "date": " • May 24, 2012"
        }
        
    
  
    
        ,"post31": {
            "title": "The Cost of Urgency",
            "content": "Sandstorms are spectacular creatures. From less-than-ether, they arise, demolish and vanish. . If you’ve ever been in a sandstorm, you’ll remember the natural instincts to _save_ everything you can. Collect valuables and retreat into enclosed areas. Preserve as much as possible. . If you’ve ever been in more than one sandstorm, you’ll remember the quick duck-and-cover response. Followed by the long wait. . In a sandstorm, the only .",
            "url": "https://luddites.me/work/sandstorm/action/reaction/2012/04/25/the-cost-of-urgency.html",
            "relUrl": "/work/sandstorm/action/reaction/2012/04/25/the-cost-of-urgency.html",
            "date": " • Apr 25, 2012"
        }
        
    
  
    
        ,"post32": {
            "title": "How to Subclass an Array (Not Really)",
            "content": "Update: I don’t recommend following the advice in this post. The 5-minute-ago version of my self was hatsy, arrogant, foolish and a bad dinner guest. I recommend the recently updated version of this post from the 1-minute-ago version of my self. He seems to be more well mannered and even keeled–I like him. However, if you’re interested in what advice I used to be capable of delivering, please go on. . If you’ve ever written more than a few lines of JavaScript, you’ve probably instanced and iterated an Array or two. As you’ve done this, you may have even thought to yourself, “Gee willikers, wouldn’t it be keen to hook a contains() method on the Array prototype to simplify that awful indexOf(val) !== -1 shenanigans?” . You may have even tried to simply extend the native Array prototype. Life would have been grand until you needed your JavaScript to work in IE. . From there, if you’re at all like me, you might have thought: “This is friggin’ JavaScript! Everything is mutable; everything is extensible! I’ll just subclass the native Array type.” The subsequent journey through Google would then lead you to believe that the problem of subclassing Array is so hard, so frought with peril, so dangerous that no one could ever do it and do it right. . And if you followed any of the advice that Herr Google had to offer, you would be right. And then you watched Douglas Crockford’s On JavaScript series and hit Part III: Function the Ultimate. Suddenly, it becomes much, much simpler. . We now have an array() function which operates just like a plain vanilla, JavaScript Array (push, pop, splice and all intact), addressable by index with a properly functioning length property…and which contains a contains() method. . To do this, we didn’t need ‘this’ or ‘new’, and we don’t have to touch ‘prototype’ at all if we wanted to interpret ‘arguments’ differently (though Array.prototype.slice.apply is probably the most efficient way to do it). . This prototypical class model is, in my opinion, much easier to implement, read and debug than any of the blood, sweat and tear infused models suggested around the ‘tubes. . As always, your mileage may vary. .",
            "url": "https://luddites.me/class/code/array/subclass/mistake/2012/01/27/how-to-subclass-an-array-not-really.html",
            "relUrl": "/class/code/array/subclass/mistake/2012/01/27/how-to-subclass-an-array-not-really.html",
            "date": " • Jan 27, 2012"
        }
        
    
  
    
        ,"post33": {
            "title": "Performance! Determinism. Vs?",
            "content": "David Ungar (co-creator of Self, the forefather to my favorite language, JavaScript) had an interesting talk at SPLASH 2011, which is nicely summarized here (post-talk interview here). . There are two predicate assumptions in this line of thinking. First, that in the end, we will always value performance over everything else (data integrity, reliability, determinism). Second, that we must sacrifice some level of determinism if we want to increase performance. . The JavaScript example is a good one. . “Why would you write critical business logic in an untyped language?” . “Because, by sacrificing static typing, you can achieve performance that is otherwise impossible to attain.” . Of course, JavaScript itself isn’t even the Wild West. It’s serial; it’s single-threaded. It poses few of the suggested risks of operating in thousand core environment, where (if we are to believe Mr. Ungar) we must stare into the abyss. . The line of thinking is provocative, and it’s led me to wonder if it doesn’t speak to something more basic: we must constantly challenge our assumptions about what is the most performant way to program. . Recently, Node.js entered the tweet-o-sphere and has garnered enough attention that even Microsoft has built support for Node into IIS and their Azure platform. Are they mad? . In explaining the relevance of Node to broader technology groups, Brett McLaughlin notes: . “There’s another web pattern at work here, and it’s probably far more important than whether you use Node or not, and how evented your web applications are. It’s simply this: use different solutions for different problems. Even better, use the right solution for a particular problem, regardless of whether that’s the solution you’ve been using for all your other problems.” . That, to me, is the most elegant subversion of Mr. Ungar’s thesis. We may have to abandon determinism to solve certain problems, but we can also abandon it in a deterministic way. .",
            "url": "https://luddites.me/code/measurements/speed/2012/01/24/performance-determinism-vs.html",
            "relUrl": "/code/measurements/speed/2012/01/24/performance-determinism-vs.html",
            "date": " • Jan 24, 2012"
        }
        
    
  
    
        ,"post34": {
            "title": "Out With the Old, In With the New (Profile)",
            "content": "At the launch meeting for our new team blog, Object Reference Not Set, we pledged to enforce only one rule: . “Complete editorial freedom…” . This rule didn’t even make it past the first post. On the chopping block? My old, Google+ profile. . May it, like the phoenix, rise from the ashes into something…different. . Rest in peace, old faithful. . My father killed himself with a potato gun (in front of my mother but outside the pantry) when I was six years old. The potato gun didn’t scare us; he often cut himself with bad poetry or fresh salmon. You don’t think about potatoes in their most mortal sense when you’re a disaffected, drug-addicted youth. We buried him in the backyard pool, which we filled with plankton. Sometimes, when the moon’s just right, you can still see the flies swarming over his grave. The cannibalism of the years that followed seems only natural when compared with the vegan gluttony of our youths. My sisters and I began working as shoe salesmen for local choir boys, but only the family dog really had a talent for it. We hired and fired Egyptian slaves, but Scandal had other games for us to play. The first sister died from salmonella poisoning at Disney Land. It was Vogue and en vogue that caught the nation’s attention. School was compulsory, of course; and those of us that remained largely ignored it. We studied particle physics in the garage and practiced fencing on the roof. The second sister died of dark matter exposure, and we burned her on a funeral pyre of our own making. The seventh sister was immaculately conceived that year. In these early years, we invested heavily in Swedish bubble gum and nineteenth century guns. It was a time of self reflection and turbulent bathing. .",
            "url": "https://luddites.me/logging/social/media/2012/01/24/out-with-the-old-in-with-the-new-profile.html",
            "relUrl": "/logging/social/media/2012/01/24/out-with-the-old-in-with-the-new-profile.html",
            "date": " • Jan 24, 2012"
        }
        
    
  
    
        ,"post35": {
            "title": "On Competence",
            "content": "Years ago, one of my dearest friends, Jennifer Elms, and I were discussing a short bit of prose that I had written. She had just finished reading it, and I had asked for her opinion. . “I think I’m a competent enough writer,” I said. “Oh, I wouldn’t call you competent,” she said, “but this is better than some of what people call ‘good’.” . I was stunned. . “If I’m not competent, who is?” . She paused and reflected for a moment. “Joseph Conrad was competent. Try Lord Jim.” . ‘Stunned’ quickly ceased to scope to my reaction. I read Lord Jim, and I met the unknown. It took some time to find my hubris, identify it and begin extracting it, but the journey was one of the better investments of my life. . In the last few years as a software developer, I have reflected more than a little on this exploration. I know better than to call myself a competent developer–I know better than to attempt objective qualifications on my abilities. . Crockford muses that software development is the constant struggle for perfection. He’s right, but it’s also much more than that. Software is poetry. Development is a discipline. Despite their flaws, languages are tools which we both leverage against the world and whose understanding changes us. Code is a means of communicating designs and intentions between humans that must also be translatable by the compiler into something flawless and (as a consequence of this requirement) something altogether unintelligible. . Like every other developer I know, the code that I write today is the product of the Muse. Unequivocating genius. Quite unlike the code I wrote yesterday, which was unmitigated toxic waste. . As a writer, after talking to Jennifer, I used to set the bar at ‘competence’. As a developer, that’s simply not good enough. The bar has to be set at perfection. For someone who’s still not competent, the disparity between here and there is significant. . Fortunately, we get a lifetime to make the journey. .",
            "url": "https://luddites.me/programming/competence/wat/l%C3%AFf/writing/2012/01/20/on-competence.html",
            "relUrl": "/programming/competence/wat/l%C3%AFf/writing/2012/01/20/on-competence.html",
            "date": " • Jan 20, 2012"
        }
        
    
  
    
        ,"post36": {
            "title": "38,000 Steps Under the Digital Wallpaper of the Sun",
            "content": "The Trailhead . I’ve been hiking my desk for nearly a year now, and the road gets ever longer. I’ve had a book published. I’ve been promoted. We’ve had a daughter, survived a flood, lost and learned, and survived baby kidney surgery. Eli more fully experienced his latest Chanukah, Winter Solstice and Christmas. He survived both Saint Nick and the Solstice Squid. I’ve slept less this year than any year prior–including years in Iraq. In short, I’ve continued my hike up the Mountain of Lif. . This year, I also learned JavaScript. Thanks [in no small part to the team at ChemSW, Alex Russel, Douglas Crockford* (and far too many more to name by name) and otherswho dedicated their time to write, blog, speak, evangelize, scrutinize and mock the little language that could] to the tubes which connect us all, I’ve come to know and love the beauty and elegance that JavaScript has to offer. . Even if you’re not a programmer or even if you are and you’re a JavaScript expert: give yourself a belated Holiday gift. Watch episode 1 of Crockford’s “On JavaScript” series. It’s simply profound. . The brief primer (forgive the hubris) which follows is redundant with much of the work that the aforementioned have already produced. I have extended surprisingly (to me) little creative energy in adding my own material–much of this is taken verbatim from its respective sources; however, it does consolidate in one page what it has taken me a year to begin learning. I’ve tried to give attribution whenever I have borrowed from someone else–if I missed you, please let me know. If for no other reason that to learn by writing (it produced two books already), here is: . Hiking JavaScript, A Primer . Overview . History . JavaScript(TM) Oracle is a language developed under Netscape in 1995 by Brendan Eich in about 8 days. Originally named LiveScript, JavaScript fuses the syntax of Java with the richness of Self and Scheme (a successor of LISP). It is a functional language which is easily adapted to a variety of programming styles. LiveScript was originally intended to be a proprietary language for Netscape. This design choice was one of the motivating factors for the Browser Wars in the late 90s, early 00s. Microsoft reverse engineered LiveScript into JScript, and in their dedication, they preserved nearly every bug in the original version of the language. In response, Netscape took JavaScript to the W3C standards committee for ratification as a standard.  Trademark threats from then Java trademark owner Sun Micro forced the standard name to ECMAScript. ECMAScript 5 was ratified in 2009 and is often associated with HTML5 and CSS3 under the blanket “HTML5” alias. ES5 is fully supported by the latest versions of Chrome, Safari, Opera and Firefox. Internet Explorer 9 implements most of the standard, though strict mode is still not fully implemented in the pre-release versions of IE 10. . Features . JavaScript is a loosely typed language. Nearly everything in JavaScript inherits from the Object type. The notable exceptions are null, undefined and a limited number of reserved keyword operators like typeof and instanceof (which should be used with caution). JavaScript implements native types for String, Number, Date, Boolean, Array and Function. Functions in JavaScript are Objects. They are first-class, an feature derived from LISP/Scheme. This is the feature that makes JavaScript one of the best modern programming languages. . Compilation . In the Neolithic era, JavaScript was interpreted at run-time, line-by-line, by the browser. All modern browsers now compile at least some portion of loaded JavaScript into byte-code. . Compiled, Interpreted, Whatever | The JavaScript Engine | . The Language . Operators . JavaScript supports a standard set of operators: . Arithmetic .           . + | - | * | / | % | . Comparison .                 . == | === | != | !== | &lt; | &lt;= | &gt; | &gt;= | . Logical .       . &amp;&amp; | || | ! | . Bitwise .             . &amp; | | | ^ | &gt;&gt; | &gt;&gt;&gt; | &lt;&lt; | . Ternary .     . ? | : | . Equality . Never use single or double operator syntax!…!! Equality should always be evaluated using triple operator syntax. For example: . const x = &#39;false&#39;; !x; // true x == false; // true x === false; // false . Single operator equality evaluation is only possible in the negative (!). Double operator evaluation can be either negative or positive (!= or ==). Each perform type coercion PRIOR to equality evaluation. . Unfortunately, greater than/less than operators perform type coercion as well. . ‘1’ &gt; 0; // true . &#39;1&#39; &gt; &#39;0&#39;; // true &#39;a&#39; &gt; 1; // false &#39;a&#39; &lt; 1; // false &#39;a&#39; &gt; &#39;1&#39;; // true &#39;a&#39; &gt; &#39;b&#39;; // false . Beware! . Truthy/Falsey . The following values are falsey in JavaScript, that is, type coercion will evaluate these to false: . false | null | undefined | &quot;&quot; (empty string) | 0 | NaN | . All other values (including objects [that means functions]) are truthy: 0 and false. Type coercion will evaluate these to true. . Never use the auto-increment or auto-decrement syntax (++/–)!! The plus and minus operators both add and subtract as well as concatenate. This has the potential to inject unanticipated bugs, as + will inconsistently induce type coercion. The + rule: if (both operands are numbers) { then add them } else { convert them both to strings and concatenate them }. . const x = `${1}1`; // 11 const y = 1 + +&#39;1&#39;; // 2 const z = ++[[]][+[]] + [+[]]; // &quot;10&quot; . A plus/minus prefixed to a string is the right way to cast a string as a number. This type coercion is desired and expected. To avoid confusion, use parens to clearly communicate the intention of your code (when adding a coerced string to a number). For elaboration on z, see. . When your intention is to increment use the += 1/-=1 metaphor. . typeof . typeof returns unexpected results if handed null or an array. As such, it should be used with extreme caution. This is the return table for typeof: . Type typeof returns . Object | ‘object’ | . Function | ‘function’ | . Array | ‘object’ | . Number | ‘number’ | . String | ‘string’ | . Boolean | ‘boolean’ | . Null | ‘object’ | . undefined | ‘undefined’ | . instanceof . The instanceof operator compares the constructors of its two operands. It is only useful when comparing custom objects. Used on native types, it is nearly as useless as the typeof operator. . Custom Objects: . function Foo() {} function Bar() {} Bar.prototype = new Foo(); new Bar() instanceof Bar; // true new Bar() instanceof Foo; // true Bar.prototype = Foo; // This just sets Bar.prototype to the function object Foo // But not to an actual instance of Foo new Bar() instanceof Foo; // false . Native Types: . new String(&#39;foo&#39;) instanceof String; // true new String(&#39;foo&#39;) instanceof Object; // true &#39;foo&#39; instanceof String; // false &#39;foo&#39; instanceof Object; // false . Types . All objects are declared either as variables or functions. . const number = 1; const string = &#39;string&#39;; const boolean = false; const date = new Date(&#39;10/13/2011&#39;); const array = [1, 2, 3]; const object = { prop: &#39;prop&#39; }; function objFunction() { alert(&#39;hello&#39;); } // equivalent to var objFunction = function() { alert(&#39;hello&#39;); }; . Type is not declared in variable declaration, which has lead some to call JavaScript an “untyped” language. This is not true. JavaScript is only loosely-typed. Type is inferred on assignment and a variable’s type can be changed at any time by reassignment or modification of the object prototype. . All types derived from Object have a few critical methods: constructor, prototype, hasOwnProperty and toString. In order to later determine a variable’s type, use the prototype.toString() method. . Object . An object is a dynamic collection of properties. Every property has a key string that is unique within that object. . Unfortunately, property keys must resolve to strings–a key cannot be an more complex object. To address the issue of string resolution for property names, Object properties can be accessed literally or by string: . prop.key = &#39;1&#39;; prop.key; // &quot;1&quot; prop.key = &#39;1&#39;; prop.key; // &quot;1&quot; prop.key === prop.key; // true . Object properties can be get, set and deleted: . const newObject = { prop1: &#39;new prop&#39; }; // get const x = newObject.prop1; const y = newObject.prop1; // set newObject.prop1 = &#39;changed prop&#39;; newObject.prop1 = &#39;changed prop&#39;; // delete delete newObject.prop1; delete newObject.prop1; . Object literal notation: . // literal var myObject = { foo: bar }; // explicit var myObject = Object.defineProperties(Object.create(Object.prototype), { foo: { value: bar, writeable: true, enumerable: true, configurable: true, }, }); . Object.toString() . Object exposes a toString() method. Do not use it. . const obj = { a: 1, b: 2 }; // toString === bad obj.toString(); // &quot;[object Object]&quot; obj.toString(); // &quot;[object Object]&quot; // JSON === good JSON.stringify(obj); // &quot;{&quot;a&quot;:1,&quot;b&quot;:2}&quot; JSON.stringify(obj); // &quot;{&quot;a&quot;:1,&quot;b&quot;:2}&quot; . String . The most idiotically named type in any language, JavaScript implements a native type of String. String support is fully implemented in all current browsers (including IE 8). String’s indexOf() method should not be confused with Array’s. String also implements a length property, which is also not to be confused with Array. In the context of the type of String, length denotes the number of characters (including spaces) in a String object. String’s implementation is designed to remove most of the feature of the Object type to simplify and reduce string operation complexity. . String.length . The string.length property determines the number of 16-bit characters in a string. Extended characters are counted as 2. . The two most common errors with String manipulation occur out of its implementation of length. . First, when passing strings into (particularly 3rd party) modules which makes logical assumptions based on the existence of length, strings will produce unexpected behavior. . Second, if accidentally passed to a for() loop. . for (const i in &#39;string&#39;) { alert(i); } . ES5 does not implement forEach() on the String type, but it is still possible to iterate a string in a for loop due to the indexOf() method. Because each character in a string has a unique, linear index number–String must also have a hasOwnProperty() implementation to find the character at a particular index. . const str = &#39;string&#39;; str[0]; // &#39;s&#39; str.hasOwnProperty(&#39;s&#39;); // false str.hasOwnProperty(0); // true . Methods . String implements a variety of useful methods which operate much as their names suggest: . charAt | charCodeAt | compareLocale | concat | indexOf | lastIndexOf | localeCompare | match | replace | search | slice | split | substring | toLocaleLowerCase | toLocaleUpperCase | toLowerCase | toString | toUpperCase | trim | valueOf | . String.toString() . Calling toString() on a string returns itself–which is exactly what you would expect. . Boolean . The Boolean type has no widespread, documented issues. Boolean variables can only be a strict true or false. Boolean implements hasOwnProperty() but is not subject to any of the potential problems with string as it does not have indexOf() or length. . const t = true; t.toString(); // &quot;true&quot; t.toString(); // &quot;true&quot; . Boolean.toString() . Boolean toString() works as expected. . Number . Number is 64-bit floating point, similar to Double. There is no integer type. Division between two integers may produce a fractional result. Number also includes the special values NaN (not a number) and Infinity. The Number type in JavaScript is the most imperfectly implemented type. . NaN . Like most other languages: . (NaN === NaN)( // false NaN !== NaN, ); // true . When evaluating for NaN, always use an isNaN() method, such as the one in jQuery. . Floating Point . The first problem with floating point based number systems is that they cannot accurately represent decimal fractions. This means that: . 0.2+0.7===0.9 //false . The Associative Law does not hold in JavaScript. This was not remedied in ES5 and will not likely be fixed anytime soon. As such: . (((a + b)+ c)+ d)!==((a + b)+(c + d)) . Decimal computation in JavaScript is just bad. There is no way around it except to eliminate the decimal from math operations and return it later. This means that currency operations should begin with multiplying by 100 and end by dividing by the same. Decimal math should either be resolved server-side, or the server should eliminate decimals in communication with the client. . Math . Math is not implemented on the Number type. It is its own object, which is good and bad. Bad that basic math methods are not available as immediate extensions of the number type and the subsequent code construction becomes heavy. Good, because almost all of the Math object’s methods are implemented correctly. Math implements constants for Pi and other common constant numbers as well as various methods for random(), log(), etc. Math is good–use it. . Number.toString() . Number correctly implements toString(). . const num = 1; num.toString(); // &quot;1&quot; num.toString(); // &quot;1&quot; . Number Methods . toExponential | toLocaleString | toString | toFixed | toPrecision | valueOf | . Date . Date is the only type which really requires construction and assignment using the ‘new’ keyword. Dates cannot be easily inferred or coerced from String, Number or Object types–except in the case where the value of an Object property is a non-string literal date as sent from the server (in this case JSON.parse() can frequently cast the property value correctly as a date). So, date assignment is best done in the syntax: . var time =newDate(&#39;12:00&#39;); . Date.toString() . Do not use the toString() method on Date types. Instead, use the date/time locale methods to generate an appropriate date string: toLocaleString(), toLocaleDateString(), etc. . Date Math . Date methods such as getTime() return as Integers, which means that Date math works without the problems inherent to the Number type. . Array . JavaScript does not implement a true array. Instead, it augments the Object type into an array-like object which has a length property (count of indexes) and can access members by index number. . Arrays in JavaScript are also hashtable objects. This makes them very well suited to sparse array applications. When you construct an array, you do not need to declare a size. Arrays grow automatically, much like Java vectors. The values are located by a key, not by an offset. Indexes are converted to strings and used as names for retrieving values. . This makes JavaScript arrays very convenient to use, but not well suited for applications in numerical analysis. Each look-up by index requires a complete hash conversion, which makes arrays the least efficient type in the language. . Always prefer the literal form of array declaration (var x = [];) and remember that all your commas are belong to array. . // assignment by literal is preferred var arr = [1, &#39;bob&#39;, { x: 2 }, true, null]; // assignment by constructor is valid but not preferred var arr = [1, &#39;bob&#39;, { x: 2 }, true, null]; // valid, but d . Arrays are not typed, which means the value at each index can be of any type. . Array.toString() . Unless you are certain that the value of every index in an Array is a string, boolean or number: do not use the toString() method–use JSON.stringify() instead.  NOTE: You can almost never be certain, so just use JSON.stringify(). . const arr = [1, &#39;bob&#39;, { x: 2 }, true, null]; arr.toString(); // &quot;1,bob,[object Object],true,&quot; arr.toString(); // &quot;1,bob,[object Object],true,&quot; JSON.stringify(arr); // &quot;[1,&quot;bob&quot;,{&quot;x&quot;:2},true,null]&quot; JSON.stringify(arr); // &quot;[1,&quot;bob&quot;,{&quot;x&quot;:2},true,null]&quot; . Array.length . Arrays, unlike objects, have a special length property. It is always 1 larger than the highest integer subscript. . const bobs = [&#39;bob&#39;, &#39;robert&#39;]; // indexes 0, 1 bobs[bobs.length] = &#39;rob&#39;; // index 2 bobs[bob.length] = &#39;bobby&#39;; // index 3 . Array.length makes it possible to iterate an array in a for(var prop in arr) loop. Do not do this. Always prefer the for(var i =0; i &lt; arr.length; i += 1) syntax, if you are not able to use Csw methods. . Gotchyas . Do not delete array elements using delete. | . const x = [0, 1, 2, 3]; x.length; // 4 delete x[1]; // true x.length; // 4x //[0, undefined, 2, 3] x.splice(1, 1); // undefined x.length; // 3x // [0,2,3] . This sets the value of the element at the specified index === undefined. In almost all cases, this is not desired. . Internet Explorer &lt; 9 does not fully implement Array. Most notably, in IE, Array’s do not have an indexOf() method. | In the context of an array, hasOwnProperty() should be used to verify the presence of an index position–not the value at an index. | indexOf() as with String is used to find the position of a value. | IE doesn’t always get length right. Beware. | DO NOT use the dot notation with Arrays. Always use brackets for fetch/assignment: | . bobs[0] // good bobs.0 //bad . Array is slower in almost all use cases than Object. Use it only when the features of the type merit the performance hit. | . Array Methods . concat | every | filter | forEach | indexOf | join | lastIndexOf | map | pop | push | reduce | reduceRight | reverse | shift | slice | some | splice | toLocaleString | toString | unshift | . Function . Everything in JavaScript is an Object. Repeat this in a mirror three times.  Everything in JavaScript is an Object. Repeat this in a mirror three times. . In JavaScript, functions are objects. Functions are first class. . Objects can be passed as arguments to functions, and objects can be returned by functions. . Objects are passed by reference. | Objects are not passed by value. | . This means that functions can be passed as arguments to functions, and that functions can be returned by functions. . Declaration . The var statement declares and initializes a variable within a function. There is no other variable statement beyond var–type is not specified, it is inferred. Variables are scoped to functions: a variable declared anywhere in a function is visible everywhere in a function. . All defined variables are instanced when their function scope is instanced–this is known as hoisting. Variable instancing and assignment are thus split into two steps: . // As written: (function () { const x = 1; const y = [0, 1, 2, 3]; for (let z = 0; z &lt; y.length; z += 1) { const a = `yuppie_${z}`; } })(); // As executed: (function () { let x; let y; let z; let a; x = 1; y = [0, 1, 2, 3]; for (z = 0; z &lt; y.length; z += 1) { a = `yuppie_${z}`; } // Observe that the value of &#39;a&#39; will always be the value of &#39;yuppie_&#39; + y.length-1. This is critical to understanding closure. })(); . Functions may be declared explicitly as variables or implicitly using shorthand, but they are compiled and interpreted identically. . // As written function MyFoo(id, value) { return id === value; } // As executed var MyFoo = undefined; MyFoo = function (id, value) { return id === value; }; . Return . By design, all functions return a value. If no return statement is specified, the return value is undefined. With the use of return,any type of Object may be returned from a function. . The only exception to this rule is within functions called as constructors, that is called with the new prefix. When calling a function with new, such as in new Date(), the return is a new instance of the prototype of the specified object. . With few exceptions, we never need to do this in JavaScript. . Exceptions: . var myDate = new Date(&#39;01/20/2011&#39;); ... throw new Error(&#39;unhandled exception&#39;); throw new TypeError(&#39;expected a type of function&#39;); . Inheritance . JavaScript does not implement a classical inheritance model, it uses a prototypical one. A prototype based model can be extended to support a classical model, but the inverse is not true. While you can bend JavaScript to look like a classic model, it is almost always more efficient, readable and maintainable to work with the functional model. . Pseudo-classical style . function Gizmo(id) { this.id = id; } Gizmo.prototype.toString = function () { return `gizmo ${this.id}`; }; function Hoozit(id) { this.id = id; } Hoozit.prototype = new Gizmo(); Hoozit.prototype.test = function (id) { return this.id === id; }; . Functional Style . function gizmo(id) { return { id, toString() { return `gizmo ${this.id}`; }, }; } function hoozit(id) { const that = gizmo(id); that.test = function (testid) { return testid === this.id; }; return that; } . The functional approach delivers the exact same result as the pseudo-classical approach, but it is cleaner and easier to understand. . Closure . Closure is one of the best parts of the language. When a function is instanced–assigned to a variable, it maintains the private variables which were declared within it. These variables are hidden from the global object and indeed from every other object in the same scope. Without closure, we write code like this: . // Globally scoped const names = [&#39;zero&#39;, &#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;]; const digit_name = function (n) { return names[n]; }; alert(digit_name(3)); // &#39;three&#39; . This is problematic, because names is exposed to the global object. It can be modified by any other object at any time. | . Slightly better, using function scope to protect names: . const digit_name = function (n) { const names = [&#39;zero&#39;, &#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;]; return names[n]; }; alert(digit_name(3)); // &#39;three&#39; . This is better. Names is protected and no one outside of digit_name can modify the names array; however, this is extremely slow. Names is redefined on every invocation of the function. In almost all practical use cases, the result will be slow execution. | . Much better, using Closure: . const digit_name = (function () { const names = [&#39;zero&#39;, &#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;]; return function (n) { return names[n]; }; })(); alert(digit_name(3)); // &#39;three&#39; . This is much better. Names is still protected. This is also much faster. We are assigning the instance of an anonymous function which returns the function we need to perform the lookup. As long as digit_names remains in scope, it will persist a private closure with local, in-memory access to the names collection. Names is instanced only once and persists for the life of digit_names. Our behavior is fast and our variable is protected. | . Security . One of the nice features of closure is the ability to securely create, seal and open objects. In JavaScript, this kind of functionality is trivial to create: . function makeBoxes() { const boxes = []; const values = []; return { sealer(value) { let box; const i = boxes.length; box = {}; boxes[i] = box; values[i] = value; return box; }, unsealer(box) { return values[boxes.indexOf(box)]; }, }; } . Recursion . Bells and Kazoos . Y Combinator . function y(le) { return (function (f) { return f(f); })(function (f) { return le(function (x) { return f(f)(x); }); }); } const factorial = y(function (fac) { return function (n) { return n &lt;= 2 ? n : n * fac(n - 1); }; }); const number120 = factorial(5); . Function.toString() . Function implements toString(). Don’t use it. . Debugging . Console . ECMAScript does not specify a standard console object, but all modern browsers implement console. IE 8 included the last updates to the console object, carrying bugs in its support into IE 9. Firefox, Chrome, Opera and Safari keep feature parity on console through iteration: almost all changes to console by one vendor are adopted by the others in the next iteration. . Console is accessible in the DOM, which means that console calls can be placed inside JavaScript and then viewed in the actual browser console (ABC) at a later time. Console is also accessible outside the DOM, which means that console methods can be called in the ABC at any time. . Logging . log(context, arg1, arg2, n): Write an object to the console. log can take an arbitrary number of parameters (which it will concatenate together), and it supports inline parameter definition in the style of printf: console.log(&quot;This function is %s %s.&quot;,&quot;foo&quot;,&quot;bar&quot;);//This function is foo bar. | Pattern Type . %s | String | . %d %i | Number | . %o | Object | . | . | debug(context, arg1, arg2, n): console.log an object to the console with a link to the line number of execution. In Chrome, log === debug === info | . | info(context, arg1, arg2, n): console.log an object to the console with a styling of info. (Blue circle with ‘i’). In Chrome, log === debug === info | . | warn(context, arg1, arg2, n): console.log an object to the console with a styling of warning. (Yellow triangle with ‘!’). | error(context, arg1, arg2, n): console.log an object to the console with a styling of error. (Red circle with ‘x’). | assert(true === false): Output a truthy evaluation to the console if the assertion is false with a styling of error. | . Profiling . time: used to capture the start and end time for a particular identifier | . console.time(&quot;Beginning Async Call #1&quot;); //undefined ... console.timeEnd(&quot;Beginning Async Call #1&quot;); //Beginning Async Call #1: 6319ms . time(identifier) defines a string name to mark for a later timeEnd(identifier) to match against. Multiple instances of console.time()..timeEnd() may be defined within the same function scope as long as each identifier is unique. | . | profile: used to capture verbose performance information for a particular identifier | . console.profile(&quot;Begin Async Call #2&quot;); ... console.profileEnd(&quot;Begin Async Call #2&quot;); . profile(identifier) defines a string name to mark for a later profileEnd(identifier) to match against. profile behaves in the same manner as time, except the output will be more verbose. | profile verbose output appears in the “Profiles” tab of the console window. | . | timeStamp(indentifier): Used to output a timestamp with a string identifier. markTimeline(): Parallel implementation | . | profiles: An array containing all currently defined profiles on the console object | memory: An object defining current memory consumption in the DOM | count(identifier): Outputs a count of the number of times identifier was called to the log. Useful for evaluating redundant method calls. | . Grouping . Console operations can be grouped into a single, collapsible console output: useful for outputting data across methods, modules and files and grouping the output together. . group: defines a logical grouping for a particular identifier | . console.group(&quot;Async Calls #1&quot;); ... console.groupEnd(&quot;Async Calls #1&quot;); . group(identifier) defines the beginning of a logical collection which groupEnd(identifier) terminates. | groupCollapsed(identifier): outputs a group by identifier to the log. | . Output . trace(): Outputs the call stack (at the moment trace is called) to the console | dir(element): Outputs an interactive representation of a DOM object with all of its properties to the console. | dirxml(element): Outputs an XHTML representation of a DOM object to the console. | . Resources . Chrome Dev Tools: Console | . **Your attempts to verify this claim may vary. Please update when an authoritative answer is found. .",
            "url": "https://luddites.me/hiking/code/l%C3%AFf/2011/12/28/38-000-steps-under-the-digital-wallpaper-of-the-sun.html",
            "relUrl": "/hiking/code/l%C3%AFf/2011/12/28/38-000-steps-under-the-digital-wallpaper-of-the-sun.html",
            "date": " • Dec 28, 2011"
        }
        
    
  
    
        ,"post37": {
            "title": "Affectation Without Action",
            "content": "The ill-fated knol project has ended, but I wanted to preserve my lone contribution to the project. This was that. . Bu`bon´ics    (bũ`bǒn´ĭks) . v. . 1. The act of prompting a cathartic release normally the result of taking a proactive action achieved as a simple result of thinking about taking that action. . The human condition persists, at least in part, on the strength of our evolved capacity to ignore the very worst of our shared failures, atrocities and oversights.  This subconscious aversion to confrontation manifests in remarkable ways, not the least of which is our ability to abstract emotional engagement with horror from both factual analysis and intervention, action, reaction or prevention.  This is bubonics. . Bubonics often a utility of pure necessity in mitigating the vast amount of emotional events emerging in the world around our species.  It is neither practical nor possible to directly engage on an individual or communal level to more than a tiny fraction of the events in our environment.  As such, a bubonic detachment allows the modern person to emotionally engage with events, perhaps such as the ongoing tragedies in Darfur, South Africa or the Congo–to empathize and sympathize with the story as a whole, while abstracting away any personal connection to the people or places. . As a instrument of abstraction, bubonic emotion affords the 22nd century self the ability to assert caring at the molecular level while maintaining knowledge, insight and relevance at merely the blurb level. .",
            "url": "https://luddites.me/titanic/death/knol/bubonics/2011/11/22/affectation-without-action.html",
            "relUrl": "/titanic/death/knol/bubonics/2011/11/22/affectation-without-action.html",
            "date": " • Nov 22, 2011"
        }
        
    
  
    
        ,"post38": {
            "title": "One Man Hiking His Desk Makes a Journey. Two Men Hiking Makes a Race.",
            "content": "No one is first, and you’re last. .",
            "url": "https://luddites.me/void/2011/10/11/one-man-hiking-his-desk-makes-a-journey-two-men-hiking-makes-a-race.html",
            "relUrl": "/void/2011/10/11/one-man-hiking-his-desk-makes-a-journey-two-men-hiking-makes-a-race.html",
            "date": " • Oct 11, 2011"
        }
        
    
  
    
        ,"post39": {
            "title": "The Audacity of Despair",
            "content": "I began this over one year ago (July 28, 2010), but never finished. I’ve lost the creative tingle, here–but rather than trash the bit, I’ll post it. It’s raw, but there’s a rough in its diamond. . : . It ought, but is rarely the case, that when a man gazes toward heaven and pulls the lever on the slot machine praying, “Let this vote solve my worries” we give pause to consider the sanity of the individual. For as the same motion born of the same sentiment occurs in this country and others with more or less the same frequency over the years for elections with no more chance of positive progress than the vote cast a few years prior, few if any have paused to question the rationality of the fundamental assumption underpinning the system itself. . If we presume that once a body grows to such a size that all voices cannot be heard equally thus necessitating a surrogate body of size small enough to occupy a room who will speak for the body large on all matters, and if we presume the election of this body to be so fraught with peril that it need occur with frequency on the assumption that those elected would inevitably deviate from the intentions of the electorate, then if these assumptions be sound and well reasoned, why would the body large delegate both the accountability for the role occupied and the election of person to role at the same moment in the same ballot? In consumer terms, this is obviously and immediately irrational. When a woman buys a car and that car fails to perform against the standards advertised by the manufacturer, the salesperson and the dealership, she returns the car and demands a refund of her money or a replacement of equal or greater value. She does not wait for the next year’s model to arrive, only to purchase the same model with the same expectations for success again. . Yet in the case of governments, the body large has self-relegated themselves into this very position. . What might steer a body politic into the back alleys of chance and gambling? It is, of itself, an inherently rational evolutionary progression. Perhaps those less disciplined, organized, and collected tend to fall more rapidly to those more governed: the individual falls prey to the group. Or, perhaps the very nature of growth demands that those collected and organized seek out additional resources to sustain the growth of the body: the group begins to prey upon the weak. In and of itself, the choice is simple, short and plain: join the group, suffer rule and live or reject rule and possibly die. The empirical results suggest that most of the human species have chosen the former; but it is this notion of choice I wish to challenge. . The centuries predicting and then lamenting the so-called “American Revolution” are littered with pamphlets of philosophical propaganda espousing a kind of Social Contract, the notion being that individual society is so inherently destined to fail that no other choice but collective and deferred, surrogate rule exists. Given this assumption, society must then choose between a mixture of good and evils for the rule of law which greatest protects their critical values and preserves their critical rights. Of the relevant works available, few attempt to accomodate more than one viewpoint. The collective may have safety but not freedom; the group may .",
            "url": "https://luddites.me/l%C3%AFf/logging/2011/09/06/the-audacity-of-despair.html",
            "relUrl": "/l%C3%AFf/logging/2011/09/06/the-audacity-of-despair.html",
            "date": " • Sep 6, 2011"
        }
        
    
  
    
        ,"post40": {
            "title": "Remember to Look Up and Write Down",
            "content": "To hike the mountain of lïf is to know peace. You, the hiker, cease to move. You are motionless, but the world begins to move around you. To hike lïf is to become truly still. . Of course, in this stillness, the details begin to elude your grasp. When the hike is most feverish and the body most still, the world swoops, careens and combusts around you. It’s difficult to see the fish through the school. . In many cases, this is the part of the virtue of the hike. In others, some of this passing data we would like to preserve for later reference; but to take out pen and paper is to move. Movement is friction, and the hike slows. Is the risk justified by the cost? . Perhaps. And perhaps not. . I recently heard an episode of Wait, Wait, Don’t Tell Me, which posed a question: “Over in Iceland, if you stop in for dinner with some friends, they might give you some Hakarl, which is a delicacy made of shark. If you’re eating Hakarl for the first time, you might get what advice on how to eat it? A, hold your nose as you eat it. B, make sure you have a bucket near by or C, get very drunk first.” . While I passively retained the humorous impression this trivia question imparted, my memory stored only a few keywords: the show title, “pickled shark fin” (“pickled” and “fin” not even in the question proper, inferred through external knowledge), and “drunk”. From this terribly fragmented data set, I have been utterly incapable of reconstructing even a cheap knock-off of the original quote. . Regardless of whether the finally reconstructed piece is as funny now to me as my memory of it had led me to believe, I did under two quite distinct occasions wish to approximate it. Utter failure. . In the absence of a reliable memory, how else then might we find the missing puzzle pieces? . Google seems an obvious first line of offense. But this is not even close. . Perhaps we should limit the query to site: (pickled shark fin www.npr.org/programs/wait-wait-dont-tell-me)? Again, nada. . Perhaps “pickled” and “fin” are the problem. They don’t appear closely enough in the article to generate a match: (shark www.npr.org/programs/wait-wait-dont-tell-me)? Nothing even close. . Now, it has become overtly obvious that my site query text is not limiting to the site in question. Rookie “site:” exclusion mistake: (shark site:www.npr.org/programs/wait-wait-dont-tell-me)? No results. Now this is just infuriating. . I happen to know that NPR posts full transcripts of many of their shows online (in part because I spent several hours trying to find an interview on Fresh Air with the author of a new vegetarean cookbook which mostly centered on the recipes from his previous cookbook, including but not limited to dry-aging a ribeye in the refrigerator. I never did find it.), but this query should be possible. . Let’s try again by keyword only. Shark fin sounds region/culture specific. Perhaps “shark” is too specific. What about “cuisine”: (wait wait dont tell me local cuisine)? Ah hah!. While it would be convenient for the food expert, Michael Pollan, to be quizzed on food–this is unlikely. But we can now see where the transcripts are being stored: npr.org/YYYY/MM/DD/UniqueID. . With this bit of tid, we can circle the wagons and release the hounds: (wait wait don’t tell me transcript cuisine site:npr.org)? Bingo. Result number 8. . Ideally, we could get this information into the top 5: (wait wait don’t tell me transcript cuisine shark site:npr.org) does it just barely. Unfortunately, due to a.) design decisions made by NPR (namely, the menu system injects nearly every program name into every page, meaning you get a match for “wait wait” on nearly every page and b.) because Google has elected to search the entire page for content matches (though I think this is much more NPR’s problem than Google’s), tightening the shot group is quite difficult. . Even with imperfect, fragmented and incorrect memory data, we can still reconstruct the original whole. . So let the hike flow up, over, under and around you. The world can wait. The hike cannot. .",
            "url": "https://luddites.me/l%C3%AFf/writing/2011/07/25/remember-to-look-up-and-write-down.html",
            "relUrl": "/l%C3%AFf/writing/2011/07/25/remember-to-look-up-and-write-down.html",
            "date": " • Jul 25, 2011"
        }
        
    
  
    
        ,"post41": {
            "title": "How to Build a Mountain",
            "content": "The decision to climb Mount Vesuvius probably does not come lightly to most. Our inner Ahab thirsts for our outer toska, but what to do? . Fortunately, Olympus is easier to build than to find. . First, you need a free stretch of wall approximately 5’ wide by 7’ tall. This of course will vary according to your stature and appetite for adventure, so you should measure accordingly. . Standing with your legs apart, even with your shoulders. Hold an imaginary notepad in your hands, with your elbows in as if to write. | Measure (probably with the assistance of another person) the distance between your elbows. This (plus 6-12”) is the width of your space. | Measure the distance between the floor and your wrists. This (plus or minus 2”) is the height of your keyboard platform. | You can approximate the additional distance between the keyboard platform and your monitor platform, but the rails are fully adjustable and your first measurements are likely to be wrong anyway. | Second, assembly the artillery. . Something to hike. Treadmills are popular, but they have a few problems: Size. Difficult to move. | Design. Must conform the desk to the treadmill. Redesign tricky. | . | The elliptical unit has neither of these problems, so I chose the Stamina InMotion Elliptical Trainer ($100). It’s quiet, light and easy to move. | Adjusting the desk to accommodate it took less than 5 minutes. | . | . | Something to desk. A dozen companies make these DIY shelving units, but I chose the ClosetMaid brand components available at Lowes: Mounting brackets ($12/each) x2 | Heavy load shelves ($20/long, $14/short) x2 | Shelving brackets ($7/each) x4 | . | . | Backing up The heavy load shelves only extend about 1’ from the wall. You’ll likely want to be able to stand further back, so you’ll need a piece of plywood, particleboard or low grade lumber to serve as a keyboard platform. | You’ll need to secure this to the heavy load shelf, so you will need an extra piece to attach underneath. | . | Bits and pieces. Wall anchors with screws. I already had some, but they’re cheap. | Bolts, washers and nuts to affix the keyboard platform. | . | . Third, call to arms. . The entire process should take no longer than 30-45 minutes. . Survey your site using the mounting brackets as guides. | Starting with the left, position the bracket so that it overlaps the upper and lower bounds of your previously noted height estimates. | Using a pencil, mark 2 vertical anchor points corresponding to holes in the bracket (uppermost and lowermost). | Using a level, square these points using your previously noted width. Note: you’ll want the brackets to be inside, by at least 6” of this width. Just as your own arms’ core strength lies in a tight triangle close to your chest, the brackets should loosely align with the position of your elbows for maximum stability. | Sanity check your final marked anchor points using a stud-finder (or just tap the wall with a hammer). If you’re aligned with a stud, use a long wood screw; otherwise, anchors away. | Once your mounting brackets are firmly attached to the wall, you need only add your shelving brackets and load shelves. | The lower shelf hosts your keyboard and mouse. You should be able to type without any strain or discomfort along your arms. Adjust until it matches you. | The upper shelf hosts your monitor(s). The vertical center of the monitor should be at your eye level. You should be able to scan the entire screen without physically moving your head. Adjust until it is so. | Adjust until you find the right comfort level while standing. Once you have done so, mark these positions (so that you can quickly return to them later). | Add the elliptical machine into the mix. You will likely need to adjust both shelves upward 6”. Repeat step 7. | Fourth, regroup and flank. . You are now probably standing too close or uncomfortably too far away from your monitor. You need to extend the plank and free your visual cortex. This is likely a one-size-fits-none operation. I originally estimated that 36” was the ideal distance from standing position to monitor, but this was far too great on first pass. I had to slim down my keyboard platform to just under 24”. To minimize your effort, use your adjustable height chair by placing it on a stool or raised platform. Place your keyboard on the seat of the chair, adjust to the right height, and move back and forth from your mountain until you determine the optimum distance. . Cut your plank accordingly. Leave a secondary piece at least 6”x3” to secure it against your keyboard platform. Align the two and drill aligned holes. Place the keyboard platform atop the heavy load shelf for the keyboard and hold the secondary piece below while you secure with bolts, washers and nuts. The best part of this design is that you can still adjust the entire platform without any dissembling. . Fifth. Grab your harpoon gun, your climbing gear, and a towel. . Life has arrived you have arrived at destination life has arrived. .",
            "url": "https://luddites.me/mountain/diy/standing/desk/2011/05/26/how-to-build-a-mountain.html",
            "relUrl": "/mountain/diy/standing/desk/2011/05/26/how-to-build-a-mountain.html",
            "date": " • May 26, 2011"
        }
        
    
  
    
        ,"post42": {
            "title": "Seeing the Tree for the Forest",
            "content": "My hike today spanned the 3500 km of the Appalachian Trail. The journey I embarked when I began hiking my desk has already connected me with remote corners of the world, and as I reflect on the truths these excursions have imparted, I am wont to ponder the details that I have missed. . Like much of the rest of life, the value of the hike is in the journey and not the destination; we hike our desks both as an alternative to a quest for self or meaning–as these goal-oriented journeys fail the tests of scalability and time, and as a quiet affirmation: escaping the vast, unknown possibilities of the human experience, I know with certainty only that I can hike my desk. . Such is the satisfaction of the hike. . Thanks to Kevin Gallagher for providing today’s hike. .",
            "url": "https://luddites.me/meaning/journey/details/2011/05/25/seeing-the-tree-for-the-forest.html",
            "relUrl": "/meaning/journey/details/2011/05/25/seeing-the-tree-for-the-forest.html",
            "date": " • May 25, 2011"
        }
        
    
  
    
        ,"post43": {
            "title": "Equipment Failure",
            "content": "When you’ve been hiking as long as I have, you know instinctively that equipment failure is a guarantee. Since the early days of my hiking career, I have kept a vigilant log of my successes based on the readings of my trusty pedometer. Yesterday, after a catastrophic mid-afternoon pedometer failure, I lost all of the data for the day’s progress. . Not one to meet failure with anything other than rose-colored hunger, I turned to the numbers, to attempt to estimate my day’s journey.  As my daily distance increases between 50-100% each day, I’m inclined to pencil in a 23 mile slam dunk against the undefended basket of Life. . Further, I see no reason to doubt the sustainability of these numbers, which is encouraging. One year from now, I’ll be easily covering up to 876,000 miles per day. This is the same kind of math which the Fed generously and routinely produces for the public, which is all the foundation my optimism needs. . So, bravo fair pedometer. Your failure will be my sweet, sweet success. All the better if I’m not laden with the weight of empirical data. Monday could show some big, big numbers. .",
            "url": "https://luddites.me/hiking/failure/equipment/2011/05/21/equipment-failure.html",
            "relUrl": "/hiking/failure/equipment/2011/05/21/equipment-failure.html",
            "date": " • May 21, 2011"
        }
        
    
  
    
        ,"post44": {
            "title": "Trail Mix",
            "content": "What hiker does not need nourishment on the journey toward nirvana? Google has some advice in the form of advertisements, should one be so bold as to enter their spam folder. . “Savory Spam Crescents - Bake 12-15 minutes or until golden brown”. . I can see others have found recommendations for the same (we can only assume) delicious tidbit. . When I make camp tonight, I will have to venture into the nearest town and gird myself with the necessary supplies. 7 miles across the plain has stirred the ancient hunger. .",
            "url": "https://luddites.me/spam/trail/mix/2011/05/20/trail-mix.html",
            "relUrl": "/spam/trail/mix/2011/05/20/trail-mix.html",
            "date": " • May 20, 2011"
        }
        
    
  
    
        ,"post45": {
            "title": "Sir George Mountain",
            "content": "Reflection The sites of the open road The perilous terrain below .",
            "url": "https://luddites.me/mountain/2011/05/20/sir-george-mountain.html",
            "relUrl": "/mountain/2011/05/20/sir-george-mountain.html",
            "date": " • May 20, 2011"
        }
        
    
  
    
        ,"post46": {
            "title": "Some People Climb Everest; I Hike My Desk",
            "content": "It’s been said that behind every great man is a Tenzing Norgay. Behind me are ten. . Many try to scratch the itch of ambition with the satisfaction of goals which can actually be achieved. . Walking on the moon. Discovering non-carbon-based life. Falling in love and drowning there. President of the World? . Contrary to the social norms and conventions which traditionally define success, I look to Sisyphus. That guy (albeit involuntarily) attempted to do the impossible. That smarts of the kind of irrational optimism this world desperately craves. . So, too, will I. I will hike my desk. A infinite number of miles over a finite (working) lifetime. Each mile down a mile no closer to the goal. . But I’ll do it. . Because it’s there. .",
            "url": "https://luddites.me/hiking/tenzing%20norgay/optimism/desk/2011/05/19/some-people-climb-everest-i-hike-my-desk.html",
            "relUrl": "/hiking/tenzing%20norgay/optimism/desk/2011/05/19/some-people-climb-everest-i-hike-my-desk.html",
            "date": " • May 19, 2011"
        }
        
    
  
    
        ,"post47": {
            "title": "washed up on the shore of this morning",
            "content": "Uncle Petrov once swore that snow in April forebode a good summer catch. Summers and minnows followed, and he would only smile and shrug, “Imagine if it hadn’t snowed.” .",
            "url": "https://luddites.me/poetry/2011/04/06/washed-up-on-the-shore-of-this-morning.html",
            "relUrl": "/poetry/2011/04/06/washed-up-on-the-shore-of-this-morning.html",
            "date": " • Apr 6, 2011"
        }
        
    
  
    
        ,"post48": {
            "title": "this is the end of the world",
            "content": "The world is a small, flat rock which rests evenly in the palm of your hand. As you toss it lightly into the air, the accompanying thump against your palm inspires confidence. . This world could be skipped across a lake. It could just as easily break a window into a thousand neat shards of unordered glass. The world could fell a giant. . It is with some regret, then, that you dropped it on the side of the road. .",
            "url": "https://luddites.me/poetry/2011/03/16/this-is-the-end-of-the-world.html",
            "relUrl": "/poetry/2011/03/16/this-is-the-end-of-the-world.html",
            "date": " • Mar 16, 2011"
        }
        
    
  
    
        ,"post49": {
            "title": "alas",
            "content": "“The sheer number of times by volume by which I find myself cursing, ‘Alas, I should have written that down!’” .",
            "url": "https://luddites.me/regret/2010/03/09/alas.html",
            "relUrl": "/regret/2010/03/09/alas.html",
            "date": " • Mar 9, 2010"
        }
        
    
  
    
        ,"post50": {
            "title": "if it looks like a duck and walks like a duck, let''s call it a moose",
            "content": "I grew up writing laundry lists and never developed an adequate talent for other forms of literature.  The lists I gathered into bundles, which I stacked neatly in the corners of the attic of my parents’ home.  What happened to them afterward, I couldn’t begin to speculate. . Born in the South, I graduated from Clinton High School.  Clinton, MS.  After a failed semester at the University of Mississippi, left Oxford to return to Clinton, where I worked as a Network Administrator for an Internet Service Provider, SaferNet, Inc.  We provided filtered dial-up Internet to families in the local area.  After a time, I took a second job as a Travel Reimbursement Accountant at the new international headquarters of MCI Worldcom, located coincidentally enough in Clinton, MS.  I’m fairly certain I had nothing to do with the accounting disasters that followed later that year, but I sometimes worry. . Following the collapse of two jobs, the loss of home and vehicle, I joined the U.S. Army as a cryptologic linguist, at the time believing myself headed toward a career in Japanese language translation.  After basic training, I found myself in the Russian language course at the Defense Language Institute in Monterey, CA.  At 21 years old (and in the middle of the program), I landed the contract for the Complete Idiot’s Guide to Learning Russian, which I began writing a month and a half before the unfortunate events in NY in the fall of that year.  Split between studying the language of the book that I was writing, writing the book, and working overtime with weekend guard duty and patrols (a consequence of the attack), I finished all three and moved to San Angelo, TX to continue training. . There, further splitting my efforts, I finished the Signals Intelligence course (and trained for and won the Bataan Death March with a coed team of fellow classmates).  From TX, I transfered to Mainz, Germany where I worked in various capacities, training with “field” equipment and working the military life.  We deployed to Baghdad, Iraq in May 2003.  As a Russian linguist, I found alternate employment in database application development, writing software to streamline the Intelligence workflow and improve analysis.  After supporting front-line units throughout the city, our year-long tour was extended in May 2004 and we moved to An Najaf, where we operated until the end of July. . Back to Germany and off to the States, I arrived back in Texas, in San Antonio, working for the NSA.  This time around it was Signals Intelligence on the bit: network communications, which meant more, bigger databases and estranged applications.  I medically retired in January 2006 for injuries sustained while abroad.  A civilian again, after 6 years, I moved to Ithaca, NY (where my family had relocated) and found employment with Gene Network Sciences, Inc. as an IT Manager.  Administering the hardware and software for this small biotech company with a heart took me right into 2008.  I transitioned to ChemSW, Inc. as a Systems Engineer, Account Manager and Database Administrator.  Oh, the titles we can enjoy when we make them up for ourselves. . It’s been a series of circles swimming in tandem, languages to programming to databases, back and forth and around.  Up and down, it’s a carousel–to quote the master. . More, as it develops. .",
            "url": "https://luddites.me/l%C3%AFf/logging/2010/02/10/if-it-looks-like-a-duck-and-walks-like-a-duck-lets-call-it-a-moose.html",
            "relUrl": "/l%C3%AFf/logging/2010/02/10/if-it-looks-like-a-duck-and-walks-like-a-duck-lets-call-it-a-moose.html",
            "date": " • Feb 10, 2010"
        }
        
    
  
    
        ,"post51": {
            "title": "Vancouver! Winter! Olympics! 2010!",
            "content": "It was hard to bring myself up to the attic through the winter. The cold discouraged warmth. I watched. I waited. Time passed and few seemed to notice. .",
            "url": "https://luddites.me/l%C3%AFf/attic/2010/01/26/vancouver-winter-olympics-2010.html",
            "relUrl": "/l%C3%AFf/attic/2010/01/26/vancouver-winter-olympics-2010.html",
            "date": " • Jan 26, 2010"
        }
        
    
  
    
        ,"post52": {
            "title": "Meeting Melchizedek",
            "content": "My father lives in an old army footlocker that lies in the attic of our home. Faded, rusted and rotting. The box only remains standing by the support of the boxes at its sides. I’ve never moved him from his resting place, though I (did/will) at times want to attack him, shake him or simply feel his embrace. . The attic smells of mothballs and death, so I did not often venture there except to hide from my fate in the world beneath. . I suppose I was fourteen when I first met him. We spoke little then, but I imagined that I had much to forgive. . Some of the details of that day I remember very clearly. Outside, it rained. Inside, it screamed. I said some things that I don’t remember but still regret, and my mother told me that I was just like my father. I took it as an insult, and she meant it as one. I stormed because it seemed the thing to do. I had tiny hairs growing out of my upper lip and a trembling in my voice that I wanted very much to hide. Everything looked ugly, and I wanted everything to be beautiful. The sun was still in the sky when I found my way into the attic. I sat on an old box marked ‘Fragile,’ and felt myself the same. We kept pictures and photo albums in the attic. Important things were kept downstairs on mantles or shelves or in neatly organized drawers. Things not worth throwing away were resigned to the attic. . I opened a box of childhood photos and sat marveling at myself through time. I saw myself doing all of the things that children seem to do in photographs, but I was always alone. Maybe that was the first that I’d thought about it, but there were neither authors nor actors in the pictures of my life. I sat alone eating an apple. Alone, in a tire swing. Alone, buried in the sand at the beach. Some pictures seemed merely gratuitous, as if too much film remained on the roll and had to be exposed. Curious and gaining curiosity, I searched for photos of my mother. I found only one, and she only revealed her feet as I was introduced to the world. . A pair of hands held me. Perhaps I had seen this photo before. Regardless, I truly saw it first (truly) in that moment. Hands lead to elbows leading toward shoulders and shoulders bear the weight of being. Were these my father’s hands? Was this my only fragmented image of a man that otherwise wholly refused to exist? I opened more boxes and searched through more empty frames. Trees, rivers, backyards, porches, swimming pools and toys were my scenery and my company. Inevitably, I opened one of the many boxes that I’d never fancied much for. It was, after all, almost a lime green. The color of mold inside refrigerator walls. The brass endings had all but rusted away. A few specks of gold sparkled in the gloom. I struggled less than a second with the lock, pulling away rotted wood as I tried the key left in the latch. . I’ve always suspected that introductions are the worst possible things to face in the universe. Worse than free falling through the atmosphere while your body burns around you. Worse than first kisses. Worse than self-consciousness in puberty. Introductions are intractably, irreversibly bad. Bad in the sense that the things that you say about people you respect behind their backs are bad. Bad the way that eating pickles when you’re expecting donuts is bad. Bad. I met my father, and it was bad. Bad in the way that introductions are bad. . The letters and stories that comprised his body were yellow like old teeth and smelled of foul brandy or leftovers. His bones had left to dust, but his leathery skin remained well preserved. I nosed about, performing my initial autopsy with little zeal. My patient, real or imagined, was dead. At that moment, I knew nothing more about my father than the fact that the only thing I knew about my father was in this box. I had (very nearly) always known that I had a father; but that’s only knowledge of myself. My mother concealed nothing; but perhaps I asked many of the wrong questions. I knew about sex, of course. Sex made things logical in a way: father + mother = me. Of course, it confuses things as well. Most of what I wanted to do in my life was have sex, and I couldn’t very well imagine having sex and then not wanting a bit more of it and in the end staying around for a while or a lifetime to continue that pursuit. Other children had fathers that seemed content with at least one aspect of that arrangement, or maybe they found other reasons to stay. Once, I asked my mother, . “Haven’t I got a father somewhere, too?” . “No,” she said. . “Not anywhere? Not at a factory? Not in London? Not at the office?” . “You have no father,” she said. . I suppose it’s worth noting that she said, “You have no father” in exactly the same way she might say, “You’ll have no dinner;” or “There’s nothing interesting down that way;” or “I’ll be right back.” Of course, there was dinner — only I couldn’t have any of it, because I’d done too little homework or wreaked too much havoc. Interesting things are always ‘that way’, because it is the nature of interesting things to lurk about in places just beyond our reach. And, well, sometimes it’s too much an effort to explain everything or our reasons for doing anything. I knew I had a father in the same way that I knew food was cooling outside the reach of my belly. . As I wasn’t terribly interested in biology beyond sex and as I could easily look around and see no father of any sort, perhaps I simply took her at her word. Other children had fathers, true; but other children had spankings and minivans and soccer practice, and I didn’t have any of that. There seemed no reason to mull over what I didn’t have, when I seemed that I already had quite a lot. I had a note from a girl at school that said a friend of her friend thought I was cute and what did I think of that? I had a brand new pair of jeans that fit just right and were just baggy enough and seemed to look similar to the jeans one sees on TV. I had good grades and thick hair, and people seemed to like my smile. . In one sense, it was quite a shock to meet a man who had up to this moment not existed. I hadn’t ever had an analogous experience. New students arrive at school from somewhere else, not out of the ocean’s foam. New next door neighbors come out of moving vans, presumably from other places. Fathers ex-nihilo are not of that sort; and the worst part of this sort of introduction is that you can’t easily introduce this person to anyone else. Introductions are bad, especially among the people whom you look forward to meeting. Anticipation is the corruption of a great many good and valuable things on this earth. When you so desire to meet a man that you begin to imagine a little bit of what that meeting might look like, you have already begun your descent upon the stair into disappointment. . I once talked with a girl for almost five minutes. I asked her what movies she liked, and she asked me what music I liked; and then we sat there for a moment rather awkwardly as I tried not to look at her breasts. Then she broke the silence with a slight breath and asked, “Do you want to take a test?” Tests are intangible things. They can be complicated, folded triangles that involve pointing and counting and a kind of math I’ve never been good at. They can be absolute statements: Good student; Bad student. They can be rather like quizzes, which you might think are tests but are really some sort of homework in disguise. Tests are like a lot of things in that they can be many things all at once; but you never know what to expect when you get them. That’s the rule. I don’t know whether I passed or failed, but her test involved a house with many rooms and a basement with many stairs and a cellar with many possibilities. She said it was a psychological test. Doctors made it. We got to the stairs, and she asked me, “How many stairs are there from the first floor to the basement?” That seemed an odd question, and I said, “Seventy-six and a half-step at the bottom.” She furled her brow and seemed troubled by that. . “What’s wrong,” I asked. “What does that mean?” . “Nothing, just that the number of steps you say is supposed to mean how deep your problems are buried. Most people say two or three.” . “Oh,” I said. . Of course, she didn’t know that my problems weren’t buried at all — they had never seen the inside of a coffin or fresh earth. But then, my father wasn’t necessarily my problem, if I had problems. And he had never even been born, much less died or buried. Every man has to have a father, even if he’s a block of wood or the postman or that fellow at your mom’s office who always has a stick of gum and a nice smile. I suppose I’d had a few fathers up to this point in my life. Of course, to my mind the word father implies a certain sense of permanence. In that way, I’ve had only glimpses of fathers; and not only the fathers of other sons but glimpses of the sort of father I imagine that I might have. Men that fit my mold. . But my problems had never seemed that up until now. I had no dark questions about my past, no scars on my back or on the inside of my thighs, no long nights crying into nothing. In fact, nothing was just it. I had nothing; but suddenly I felt that that nothing ought to occupy a space where something should be. I had no buried treasure, only a hidden wardrobe in the loft. As I first sifted through the wasteland of my father’s body, I had a number of thoughts. First, the man wrote voluminously. He seemed to have recorded everything on tiny scraps of paper, cocktail napkins, the backside of leaflets, journals, legal pads and on every other sort of paper under the roof. I caught little quips like, . “QUOTE: Pym: Love is anything you can still betray.” . I wonder if that’s true, I thought. I wonder what love is really like. Maybe it’s something from one of those ghastly Scandinavian stories where handsome men aspire to beautiful maidens and are caught by the devil’s wares. Maybe it’s something else. . Or, . “I didn’t touch the coffee. Rather, I watched it steam and felt the heat of it through my gloves. When I was certain that it was cold and useless to anyone of good taste, I paid my bill and left.” . What did that mean? . I spent a half hour simply accepting the wealth that lay before me, casually turning over envelopes and flipping through diaries. The second thought, I thought, was that he seemed to have no sense of order or direction in collecting these things. Did he even collect them, or was it someone else? Perhaps he believed everything written ought be preserved but that he felt no desire to organize it in any way; perhaps in the haste of removing things not worth throwing away someone simply dumped his corpse into the chest before me. Letters and their replies were scattered throughout towers of other papers. He seemed to have written journal entries on the first piece of paper that he found. To his credit, he did scrupulously date every document that he touched with the time and location and full date. I pictured a man driven to write. A man weathered and aged, bent over a typewriter, furiously pounding away at the keys until the ribbon snapped and ink flew across his face; but this was odd — I’ve never seen a real typewriter. . I suppose I should have had a thousand questions running through my head, some of them the ordinary type. What was my father’s name? Where was he born? Where did he grow up? How did he meet my mother? When did he leave? Why did he leave? How old is he now? Is he alive? But none of these questions interested me as much as: who is this man? Does he matter? Curiosity prodded me more than anything else. Like my father before me, these questions emerged out of the primordial sludge; and because they had begun to exist, I must begin to answer them. I needed the answers simply because I had asked the questions. As I sat at his feet, I began to see his life as a story; and that meant my life was part of his story — and even more possibly, my life might have a story of its own. Maybe stumbling here upon the building blocks of my origin, I had the first real taste of my individuality. . Introductions are always bad. They can’t be taken back. They begin things like stories and relationships and other introductions. Once something like that has been created, it can’t be undone. You can lose these sorts of things, forget them, even damage them; but you can’t will them back into nonexistence. . I picked up one last paper before I retreated downstairs. . “August 7th. Bern. Coffee. Paris. 9:30 am. . “We left the restaurant last night, walking in silence through the puddles of/and shadows beneath the street lamps. I reached out and held her hand. We looked at each other for a moment. Darkness lay like makeup on her face. I kissed her, and she ran her fingers through the back of my hair. She smelled like fresh soap and hyacinths. She whispered into my ear, ‘Call me soon.’ Her breath was hot against my neck and sent bolts of lightning down my spine. I wanted her badly and asked her to meet me the next day. I should have asked her to come home with me. She lowered her eyes and nodded in the way she does when she lies. I knew she wouldn’t be here, in the way that I know she won’t answer her phone when I called. I’ll call just the same. I can still smell her. There’s a terrible sadness when you find a difference between the way things ought to be and the way things are.” . I wondered briefly if this woman were my mother. My mother didn’t seem like the sort of person that had traveled Europe. I don’t know what features the European traveled man exhibits, but Europe has always seemed like one of those things that changes you, like broken bones or graduations. Europe makes you a little more impulsive, more romantic, more passionate, more wise, if only in the way that I imagine it. My mother certainly didn’t seem like any of these things; that is, she could have used a good deal more of all them. . I closed the box and sent dust spinning through the air. I realized that I must have been sitting at my father’s feet for some hours as I tried to stand on legs fast asleep. I moved them step by step as the blood gradually began to flow. The attic had become cold, and that meant the sun had set long ago. I quickly darted down the collapsible ladder, closed it behind me, and snuck into my room, hoping to avoid my mother. I felt like a thief in the night. I had stolen fragments of my father’s memory, parts of his being. I was no longer who I was before entering the attic. I had changed, and I couldn’t give back what I had stolen. I could feel that change burning hot against my forehead. I felt sure that it could be seen glowing inside of me. I would be caught. I would be found out — exposed. My mother would inevitably see that I had trespassed on sacred ground and bury my only chance of discovering the answers to the questions I had only just discovered. . It’s not that I forgot my father the next day, as I stirred late in the afternoon before finally climbing out of bed; only, introductions can be lost in all kinds of ways — sometimes, maybe, you need to lose them, if only because it’s worth something to find them again in a new light. Summer extended to the horizon ahead of me. .",
            "url": "https://luddites.me/fiction/short%20story/2009/10/13/meeting-melchizedek.html",
            "relUrl": "/fiction/short%20story/2009/10/13/meeting-melchizedek.html",
            "date": " • Oct 13, 2009"
        }
        
    
  
    
        ,"post53": {
            "title": "something worth sharing",
            "content": "At times, it becomes difficult to create for one’s self.  It then helps to find others with your own vision. .",
            "url": "https://luddites.me/sharing/2009/07/16/something-worth-sharing.html",
            "relUrl": "/sharing/2009/07/16/something-worth-sharing.html",
            "date": " • Jul 16, 2009"
        }
        
    
  
    
        ,"post54": {
            "title": "Eli Walks",
            "content": "It moves! It walks! .",
            "url": "https://luddites.me/eli/l%C3%AFf/2009/03/02/eli-walks.html",
            "relUrl": "/eli/l%C3%AFf/2009/03/02/eli-walks.html",
            "date": " • Mar 2, 2009"
        }
        
    
  
    
        ,"post55": {
            "title": "palin should have won",
            "content": "at the end of the day, obama cannot be all of the things he promised to be, be the person we imagined him to be, or create a world that mirrors our dreams for an obama-lead nation.  he has already failed to deliver on much of his platform, from his promises of openness and transparency to his pledge to drive reform like a wedge into the body of this government. . at the end of the day, he may very well stand a good president; but i think we needed a palin to take us into ruin before a true obama could be realized. . a palin would have let the house burn to the ground while selling furnaces and flood insurance. obama will keep us floating for another four to eight years, at the end of which we’ll question why we weren’t sailing instead.  i fear that the best he can offer us is a quiet place to weather a storm.  the storm must come; but as humans, we’ll mistake the brief respite over the next four years as the best effort of a failed president. . ironically, he has little choice.  our monetary policy has decided a philosophy of consumption, and we look toward a vision to fix the symptoms without altering the patient.  obama cannot do this.  palin could have pushed the patient to the brink of death, and the patient could have seen the other side.  instead, we missed our chance at bright lights and second chances. . we must wade through purgatory a little longer. .",
            "url": "https://luddites.me/regret/2009/02/28/palin-should-have-won.html",
            "relUrl": "/regret/2009/02/28/palin-should-have-won.html",
            "date": " • Feb 28, 2009"
        }
        
    
  
    
        ,"post56": {
            "title": "wishing and unwishing",
            "content": "my uncle once said something true. . the air was crisp about us. i felt good breathing it. it was clean and ripe and ready to become dioxide carbon. the air had settled with its fate and embraced the inevitable chemical transformation in my lungs. i knew this. the air knew this. the cold ushered it down the aisle. . i have always loved him. i could not have said why, with precision, before this moment; but, in the moments prior, i suspect it had something to do with a perceived (on my part) confidence. not a confidence in himself, which might become arrogance; but a confidence in the framework that permeates our being. like an einstein that saw the bridge beneath him not as concrete but as algorithm, Jim walks upon the formula of existence. . so on this day, almost two years past, we sat outside a coffee shop in ithaca. he, having never met heather, knew nothing of my own personal life; and i knew nothing of him, save that he still believes in that which i do not. . Jim: So how is life? Me: Well… (I paused and considered all of the possible responses to this question. Then I fancied trying Truth, and I toyed in alternating moments between supplication and exacerbation before settling on ambivalence) Me: …Heather’s pregnant. . Enter thoughts and words and dialog, stage right. . Jim: When I was young, I had a wide variety of absolutes I clung to as absolute truth. As I have grown older, I have sacrificed more and more of them. Now, I cling to almost no absolute “truths”, but for the few that remain, I clutch them tighter than ever. . i wish not to be young and optimistic; i would rather be Jim and young. . i yearn to know what are those absolutes and what makes them indisposable; but i also thirst for the journey, whether i find them or not. . at the end of the day, i must entertain the suspicion that all of my beliefs are privy to folly. to survive, i must try myself as an enemy in my own house, and i must judge me right. . every day is such a trial. .",
            "url": "https://luddites.me/belief/family/l%C3%AFf/2009/02/03/wishing-and-unwishing.html",
            "relUrl": "/belief/family/l%C3%AFf/2009/02/03/wishing-and-unwishing.html",
            "date": " • Feb 3, 2009"
        }
        
    
  
    
        ,"post57": {
            "title": "year, new",
            "content": "I still remember the faces of the men we killed.  Men, women, children.  Chicken farmers, most of them. Locked in tents beneath the unabating sun.  Blown to pieces by missiles poorly aimed. . Men I helped die. . I try to stay awake as long as possible.  The dreams surround the dead.  I yearn for life, but death prevails. I almost yearn for the day an account is held.  None of us will be forgiven. . Please, judge us. . Years pass, but not the guilt.  The horrible guilt. .",
            "url": "https://luddites.me/war/l%C3%AFf/2009/01/02/year-new.html",
            "relUrl": "/war/l%C3%AFf/2009/01/02/year-new.html",
            "date": " • Jan 2, 2009"
        }
        
    
  
    
        ,"post58": {
            "title": "a moral",
            "content": "in elementary school, the ‘they’ that we remember vaguely as anything other than ‘me’ called me Son of Thunder.  i remember the chanting, like a mob of monks echoing a boomful curse, ‘Son of Thunder! Son of Thunder!’ i needed anger then, as a shield from all the pain.  no matter that we were poorish or dressed badly, always behind or obtuse to the current fads–i had no self awareness of this condition. . a bystander, i watched myself pushed and kicked and hurled, thrown and dragged and tossed.  later, i would learn that my kin were robots; that of robot descent i too had buttons which could be manipulated.  i must learn to safeguard these buttons, keep them secret, safe. . anger and oughtness.  these are the emotions.  in the beginning, i was angered by that which i felt i ought but did not receive.  later, i learned that i ought receive nothing but that i was due opportunity.  i ought not be carried to the finish line, but i am due the opportunity to run there–so i believed.  this reformed my notion of oughtness.  i ought be given nothing, but no barriers ought obstruct my ambitions. . still, i troubled over this.  for some, no caravans to safe harbor traveled and obstructions to free range obfuscated escape.  what of those with no means faced against a conscious will?  surely oughtness should dictate that obstacles be overturned and paths be paved for the safe pursuit of dreams and goals. . then, of course, the conflict begins.  man ought make himself; but man ought not unmake other men. . i am then angry.  angry that life does not unfold as it ought, and angry that i do not as i ought in life. .",
            "url": "https://luddites.me/ought/l%C3%AFf/morality/2008/12/18/a-moral.html",
            "relUrl": "/ought/l%C3%AFf/morality/2008/12/18/a-moral.html",
            "date": " • Dec 18, 2008"
        }
        
    
  
    
        ,"post59": {
            "title": "like father like father",
            "content": "heather and i ran into a woman who attends my father’s church at the mall today.  “you don’t look anything like your father,” she said, “but you have your mother’s smile.” . i don’t know how to respond to that. . to some, this might only be the most fleeting of thoughts; but my identity, from my own perspective, is so tightly woven round the husk of my youth that a threat upon any part of it is a threat upon all of it. . i see it, when i look at pictures.  there is a face that transmutes between frames.  the father becomes the son and the son becomes the father.  it is there. . yet with increasing frequency, i hear surprise at the comparison.  several times in the last month: “why, you don’t look anything alike.” . what does that mean?  anything?  nothing? . we want roots.  i want roots.  i suspect the roots want roots but can’t, and therein lies the rub. .",
            "url": "https://luddites.me/family/fatherhood/l%C3%AFf/father/2008/12/15/like-father-like-father.html",
            "relUrl": "/family/fatherhood/l%C3%AFf/father/2008/12/15/like-father-like-father.html",
            "date": " • Dec 15, 2008"
        }
        
    
  
    
        ,"post60": {
            "title": "the blackess of winter",
            "content": "snow with no sun; night skies with no stars. .",
            "url": "https://luddites.me/poetry/2008/12/08/the-blackess-of-winter.html",
            "relUrl": "/poetry/2008/12/08/the-blackess-of-winter.html",
            "date": " • Dec 8, 2008"
        }
        
    
  
    
        ,"post61": {
            "title": "Thanksgiving",
            "content": "I read a bit recently that described thanks as gratitude for that which one did not earn (to which I would also attach, ‘deserve’). In my mind, this perfectly fits the Pilgrim’s myth which we iterate each year at this time: the benevolent stranger gives the weary passenger a bed, a roof, and a loaf of bread. The myth survives (I hope), because it still occurs. Those without obvious merit and means are given means without regard for merit. . For my own part, I know that I owe much to the charity of friends and strangers. Strangers have saved my life on many occasions. One man out of thousands rescued me from the side of a highway and brought me home. One man pulled me out of the road before a truck passed. One asked me to wait; and another to hurry. I have countless times been guided by the vision of others who had the opportunity to see the world in ways which I could not and the wisdom and goodwill to advise me a better course. . It’s easiest to imagine the most dramatic of these little salvations, because they etch themselves so easily into memory; but I fear that I forget the more important thanks which ought be offered to those who toil beneath the obvious. . We are spiders upon a great web, spun and spinning by all those we know; traversing it as though we were the maker. .",
            "url": "https://luddites.me/thanksgiving/l%C3%AFf/holiday/2008/11/26/thanksgiving.html",
            "relUrl": "/thanksgiving/l%C3%AFf/holiday/2008/11/26/thanksgiving.html",
            "date": " • Nov 26, 2008"
        }
        
    
  
    
        ,"post62": {
            "title": "out of mind of sight",
            "content": "Self-consciousness is generally loathsome, though it doesn’t stop me from trepidating on its doorstep, flirting with it constantly behind my eyelids.  In one sense, the whole of my existence is a barbaric wrestle with regret.  Skipping from one medication to the next in the endless psychopharmicological pursuit of a cure to this rotating polarity in my brain, I feel at all times nervous about the state of my emotions.  I am, after all, a creature more emotional than rational; though I do with my best intentions try to reason my way through the emotional cloud. . Quick to anger and sadness and despair and slow to peace and quiet.  The world within my head only distantly mirrors the world through which I walk, yet the two are so separate, so real, and so indistinguishable to me that I find myself in constant worried tension over the viability of my beliefs.  In the end, I must always believe something; and it seems necessary to believe that which feels most true.  After the excesses of over rationalization have begun to spoil by the curb, there remains only one faint handle by which to pull myself up: a gut instinct, a hunch, an irrational feeling. . Just as the warmth of a cup of coffee will influence my emotional state, my emotional state is always in bitter siege of my reason.  That I say, with frequency too embarrassing to confess, things which are wrong (logically, ethically or practically) is true; but that I always very nearly believe myself in these moments to be the most reasoned, the most disciplined, the most sane is the great sadness.  To exist in a constant state of waking from a falsehood, a falsehood which seemed too compelling to be anything but absolute and true. . In the absence of  strong emotions, my mind is clear; and I, at least, feel that I appear to be normal.  The overpowering fear persistent within these moments is that my illusions persist. . Feelings are like tides, and the tides have me lost at sea. .",
            "url": "https://luddites.me/mind/l%C3%AFf/sailing/2008/11/24/out-of-mind-of-sight.html",
            "relUrl": "/mind/l%C3%AFf/sailing/2008/11/24/out-of-mind-of-sight.html",
            "date": " • Nov 24, 2008"
        }
        
    
  
    
        ,"post63": {
            "title": "i pity them",
            "content": "family is a strange thing. this is overly generic. family is an evolved concept, evolved out of necessity for the preservation of species. it is both a biological connection between generations and a social grouping, collecting different biological chains together into one label. this can be extraordinarily useful as members of the group assist the survival of each other. . it becomes problematic when members of the same species begin to evolve family as a means of competition for survival among members of the same species. we begin to see communication barriers between groups when the group differs according to loose labels like ‘race’ or ‘orientation’ or ‘gender’. . the more evolved realize that survival requires codependence. no one creature can endure without the mutual support of others. the less evolved recoil at the thought of intra-group communication. to them, the infidels must die and the righteous must rise. . to the other side, dialog is an abomination. the only course is the fire. .",
            "url": "https://luddites.me/politics/family/l%C3%AFf/2008/11/22/i-pity-them.html",
            "relUrl": "/politics/family/l%C3%AFf/2008/11/22/i-pity-them.html",
            "date": " • Nov 22, 2008"
        }
        
    
  
    
        ,"post64": {
            "title": "License to *hit",
            "content": "The subject of the latest email from Dean. Indulging him: . Blogging with mythological imagination impregnated by poorly informed historical imagination. . Rhetoric in cloaks of ignorance bleeds out of hovels of supposed intelligentsia. . Does anyone hear the tree (in this case bramble) falling in the woods? . The death of reason personified. Hope left as a vagrant in the streets. Transcendence lost in triviality. . The invisible mute Grandpa has spoken. . The sick irony of the phrase ‘death of reason’ is my profound desire to apprehend what is True in this world. In arguing for rational debate, I am somehow offensive to his sensibilities. I am willing to dialog with anyone on any subject in the hopes of better understanding their point of view, but I guess Jesus was a conservative Republican. After all, Jesus hated blacks and homosexuals, so we should too. . If I recall, the 11th Commandment was Thou shalt not be a liberal, for it is an abomination to God. . I am not a Christian, and that gives me the freedom to try to seek out Truth instead of blindly believing scriptures that are profoundly dangerous and false. If the only framework in which Dean is comfortable arguing a point is behind the ignorance of his own beliefs, he has my blessing to remain blissfully mute. . I am always open to the possibility that I am wrong and will gladly accept correction when available; however, it must be informed and reasoned discipline that guides our search. .",
            "url": "https://luddites.me/hatred/family/l%C3%AFf/2008/11/21/license-to-hit.html",
            "relUrl": "/hatred/family/l%C3%AFf/2008/11/21/license-to-hit.html",
            "date": " • Nov 21, 2008"
        }
        
    
  
    
        ,"post65": {
            "title": "hogwash",
            "content": "It’s strange that in the largest (and first) economic crisis of our century, the streets are calm and the crowds quiet.  Entire countries’ economies have collapsed in the past few months.  Within the U.S., every investment bank has collapsed.  We no longer have a single investment bank in our borders.  Almost all of the central banks are both hoarding money and hemoraging assets.  Global companies are shutting down.  DHL, GM, Ford.  Retailers are rotting from the inside.  Commercial paper is scarce, inter bank lending is still largely frozon, and everyone with assets is terrified. . This terror somehow escapes the average American.  Unemployment rises each day, yet panic is the furthest thing from our minds.  Some of us are conscious of the looming giant but are incapable of doing anything about it.  Others blissfully walk the streets, unaware that the sky is prepared to swallow them whole. . The illusion of security is still relatively strong. .",
            "url": "https://luddites.me/economy/l%C3%AFf/crisis/2008/11/10/hogwash.html",
            "relUrl": "/economy/l%C3%AFf/crisis/2008/11/10/hogwash.html",
            "date": " • Nov 10, 2008"
        }
        
    
  
    
        ,"post66": {
            "title": "full disclosure",
            "content": "never before and never since have I awoken with the force of another man’s fist in my face.  there is a time, in my past, when I woke to the blurred forms of socks filled with soap and padlocks flying toward my restrained form.  there is no one to hear that scream. . when one can bleed in the view of the public, and when the public chooses to ignore the bloody masses… . all fuck has gone to fuck, excuse my german. .",
            "url": "https://luddites.me/l%C3%AFf/2008/11/08/full-disclosure.html",
            "relUrl": "/l%C3%AFf/2008/11/08/full-disclosure.html",
            "date": " • Nov 8, 2008"
        }
        
    
  
    
        ,"post67": {
            "title": "the folly of age",
            "content": "My brother, Timothy, wise beyond his years, hipped me to an email conversation with our grandparents.  I consider it worth reading. . I can’t speak for him, but I’ve never been particularly close to them.  Dean is impossible to talk to, through no inherent fault of his own; he simply chooses not to engage in lengthy conversations.  I’ve only rarely spoken to Naomi.  As my relationship with them has been so limited, it would be prudent to disclose that I do not truly know them; I know of them, and I’ve heard some of their life stories as told by other family members; but I have no direct relationship with these stories. . That said, when you get an email with Obama Photoshopped onto the body of a man shining Sarah Palin’s shoes, with a personal note, “Best picture of Palin yet!”, it’s difficult not to think, “Racism?”.  Perhaps they didn’t intend the picture as a racist attack on an African American, but to submit an objectively racist picture of anyone to a group via email in ignorance of the context of the photo is as damning in my mind as having done it deliberately. . I’m emotionally agnostic towards them.  I’m not angry with their potential hatred of blacks or homosexuals or anyone else not like them; but I am angry with the population this belief pattern represents.  It’s a group dedicated to the proliferation of injustice, and I wish it weren’t a part of America–or perhaps, I wish this group weren’t so loudly perched on America’s shoulder. .",
            "url": "https://luddites.me/politics/family/country/2008/11/07/the-folly-of-age.html",
            "relUrl": "/politics/family/country/2008/11/07/the-folly-of-age.html",
            "date": " • Nov 7, 2008"
        }
        
    
  
    
        ,"post68": {
            "title": "burning bush",
            "content": "the agony of waiting for it all to end .",
            "url": "https://luddites.me/politics/2008/11/06/burning-bush.html",
            "relUrl": "/politics/2008/11/06/burning-bush.html",
            "date": " • Nov 6, 2008"
        }
        
    
  
    
        ,"post69": {
            "title": "a comment on comments",
            "content": "It’s too early (by the pundint’s reconing) to call, but I’ve had my first comment. . This is monumental.  This is big. . As always, though I have no readers; my call remains the same: . Read something.  Anything.  Possibly twice. .",
            "url": "https://luddites.me/advice/l%C3%AFf/2008/11/06/a-comment-on-comments.html",
            "relUrl": "/advice/l%C3%AFf/2008/11/06/a-comment-on-comments.html",
            "date": " • Nov 6, 2008"
        }
        
    
  
    
        ,"post70": {
            "title": "over the hill and through the woods",
            "content": "there is always a time when we must choose how much evil we are willing to support to affect good. .",
            "url": "https://luddites.me/logging/2008/11/01/over-the-hill-and-through-the-woods.html",
            "relUrl": "/logging/2008/11/01/over-the-hill-and-through-the-woods.html",
            "date": " • Nov 1, 2008"
        }
        
    
  
    
        ,"post71": {
            "title": "for your bucket of thoughts",
            "content": "If you ask the Jew, the average practicing Jew or even a cross section of Rabis on the question of the afterlife, you’ll find that they generally don’t believe in one. The question doesn’t interest them very much. If you drill down, they’ll admit they believe in Sheol, this place where everyone (Jews and non-Jews) go when they die; and it’s a bit like Pergatory–nothing particularly good or bad happens there, it’s just a holding cell for a time. . The promised reward to Jews for their faith is entirely temporal–the promise is that God will bless their families, their sons and daughters, their grandchildren, the generations of their families through time. That’s it. They don’t look forward to a Heaven or fear a Hell; they are very rooted in the here and now. It is true that they believe in Heaven as a place where God and the angels dwell, a vantage point from which God observes mankind–but they don’t see this place as a final destination for souls. Man never dwelled in Heaven and Man never will. . If you look at the Jewish tradition in another way, they’re also not evangelical, which is to say they aren’t interested in converting anyone else to Judaism. They do accept converts, but they don’t spend any energy advertising. This is because their relationship with God is both inclusive and exclusive–the punishments and rewards of Levitical law apply *only* to the Jew, both ethnically and religiously. It is a relationship which affects only the believer and excludes everyone else; which in effect means that right and wrong are a bit subjective. It is fundamentally wrong to eat lobster as a Jew–a sin. As a non-Jew, lobster is morally agnostic; it is neither good nor evil for a Gentile to eat lobster. . It is true that the Jew looks at the Gentile through the lense of their own moral compass; but there is no judgment in that analysis, only the acknowledgement that the Gentile is not the Chosen and a feeling of assurance that by following Levitical law, the Jew is awarded blessings from Heaven. . So, if you follow these two suppositions: that neither Heaven nor Hell existed in Jewish theology at the moment of Christ’s arrival and that God had two relationships at that time, one with the Jews and one with the rest of mankind (one was very specific and detailed, and the other was not defined at all, from the perspective of the Jew), then consider this experiment. . If we agree that the preceeding statements are sound and accurate reflections of what the Jew believed between 700 BCE and 32-34 CE, then consider the impact of Christ’s death. Effectively, he introduced or created the concept of Hell. It didn’t exist before in any religion; but suddenly there is a place where we will weep and gnash teeth and the key to this place is belief in Christ. Now consider that the estimated population of the entire world at that time was about 200 million people, from Rome to America to China. Now, think about the number of evangelizing converts of Christianity, suddenly rushing out into the world to convert the Gentile to the new faith. Think about the time it would take to travel to all of these places given the state of technology at this time. Also, consider that no written document existed, nor would one exist until ~350 - 400 CE. . Now, consider the life expectancy of the average Roman (population ~50 million or 1/4 of the world at this time) was between 20 - 30 years, and let’s give the very optimistic assumption that folks were dying at the current rate of 0.09% of the total population per day. To put this in context, 155.000 people will die today, died yesterday, will die tomorrow. So, by today’s very high standards of living, life expectancy and mortality rates, almost 0.1% of the world was dying each day in 34 CE. . Suddenly, this new Heaven and Hell exist for non believers; the previously undefined relationship between God and the Gentile has now been defined and the consequences for non-compliance are very sharp indeed. . *If* this God puts his money where his mouth is, how do we account for the millions that died in China before the first missionary ever arrived? Forget the billions living now and in the last centuries who never heard this Gospel and are now damned for all eternity to the lake of fire. Christians will make arguments about General Revelation and suggest that missionaries *have* reached every corner of the globe. Let’s look at the very real, indisputible position of the millions who died before the very first missionaries every arrived. . What was God’s plan for them? Even if they were searching for this God in deep and constant meditation, centuries would pass before they ever had access. Thousands of people, dying each week that the Gospel didn’t arrive. . Just a thought for your bucket of thoughts. .",
            "url": "https://luddites.me/ugliness/damnation/evil/g%C3%B6d/2008/10/30/for-your-bucket-of-thoughts.html",
            "relUrl": "/ugliness/damnation/evil/g%C3%B6d/2008/10/30/for-your-bucket-of-thoughts.html",
            "date": " • Oct 30, 2008"
        }
        
    
  
    
        ,"post72": {
            "title": "shine and rise",
            "content": "mornings are like little deaths; the gaping jawl of the reaper, his teeth both rotting and sharpened, looming above the head of the wakened, threating to consume it . then, of course, there is the wee one, fast becoming not-so-wee; and his immutable morning soundtrack . the sound, of course, audible to no one but himself, he wages this silent but bloody war against the agony of morning, forcing his reality upon us loathe to stir from our dreams . would that mornings never were .",
            "url": "https://luddites.me/mournings/l%C3%AFf/eli/2008/10/29/shine-and-rise.html",
            "relUrl": "/mournings/l%C3%AFf/eli/2008/10/29/shine-and-rise.html",
            "date": " • Oct 29, 2008"
        }
        
    
  
    
        ,"post73": {
            "title": "this present opaqueness",
            "content": "There was within me a quiet comfort in the belief that some all knowing force guided the hands of man in the daily doings of human kind, a relief and respite in the faith that it was not truly up to *us* to guide the resolutions of issues of strife and hunger and cruelty. . That comfort has long since been replaced with an awkward kind of horror, a livid rage, an abject revulsion of the species to which we claim heritage. That there is no god, gods or God should surprise no one; but that we should, as a species, continue to perpetuate a pattern of self destruction is immensely saddening. . In the former context, I had no reason to fear, for I was in no way responsible. This invisible and unapproachable god controlled all the myriad forces in the world, and I had no power to prevail over his will. Of course, this god doesn’t exist in the latter; and all of my own decisions and the decisions of the public contribute to our own damnation–strictly speaking of this finite existence. . It is (perhaps) all moot. I hope that we will as a species progress and save ourselves. It is my great fear that we will not. .",
            "url": "https://luddites.me/cancer/l%C3%AFf/g%C3%B6d/2008/10/28/this-present-opaqueness.html",
            "relUrl": "/cancer/l%C3%AFf/g%C3%B6d/2008/10/28/this-present-opaqueness.html",
            "date": " • Oct 28, 2008"
        }
        
    
  
    
        ,"post74": {
            "title": "unleash the space",
            "content": ".",
            "url": "https://luddites.me/free/2008/10/23/unleash-the-space.html",
            "relUrl": "/free/2008/10/23/unleash-the-space.html",
            "date": " • Oct 23, 2008"
        }
        
    
  
    
        ,"post75": {
            "title": "a man and his economy",
            "content": "It’s hard times for the discerning investor. .",
            "url": "https://luddites.me/eli/economics/2008/10/21/a-man-and-his-economy.html",
            "relUrl": "/eli/economics/2008/10/21/a-man-and-his-economy.html",
            "date": " • Oct 21, 2008"
        }
        
    
  
    
        ,"post76": {
            "title": "presidential politics aside",
            "content": "I wonder if teething is nature’s way of driving parents towards insanity.  I remember times looking at my own parents with the hypothesis that they were indeed crazier than a band of mango/chicken hybrids, but I’m now getting closer to the truth of it. . It may just be the only way to deal with the pain: desanitification. .",
            "url": "https://luddites.me/peas/carrots/2008/09/11/presidential-politics-aside.html",
            "relUrl": "/peas/carrots/2008/09/11/presidential-politics-aside.html",
            "date": " • Sep 11, 2008"
        }
        
    
  
    
        ,"post77": {
            "title": "Goodybye Randy Pausch ",
            "content": "I didn’t know him until the day he died. I wish I had met him earlier. .",
            "url": "https://luddites.me/code/2008/08/15/goodybye-randy-pausch.html",
            "relUrl": "/code/2008/08/15/goodybye-randy-pausch.html",
            "date": " • Aug 15, 2008"
        }
        
    
  
    
        ,"post78": {
            "title": "blief or belf",
            "content": "I encountered this on my YouTube browsing, a rendering of Penn Jillette’s contribution to the NPR show, This I Believe: . “I Believe There Is No God” . It seems interesting but not particularly compelling to redirect a rational ambivalence toward the existence of God to a concerned belief in his non-existence.  It’s a seemingly subtle twist to transition from “I do not believe in God” to “I believe there is no God”.  The former allows me to pursue other more interesting beliefs and frees me from a long and unnecessary argument which the latter seems destined to encourage.  That is not to suggest it’s an  uninteresting or valueless argument or that I begin avoiding beliefs which are too cumbersome or uncomfortable to carry; only that in this case, it’s unnecessary. . I care that good exists, and I believe that it does.  My “I do not believe in God” belief leads me to believe that good is evolved, that it’s changing and permeable and that it’s not absolute.  A subjective good makes sense to me, is supported by defensible arguments, and has the same doorway as Mr. Jillette’s belief into a world with less suffering.  Mr. Jillette’s belief strikes me not as inherently wrong or problematic, save that it seems one more step before the question of good, which is the only question that will get us closer to the problem of suffering. .",
            "url": "https://luddites.me/belief/l%C3%AFf/good/g%C3%B6d/2008/08/01/blief-or-belf.html",
            "relUrl": "/belief/l%C3%AFf/good/g%C3%B6d/2008/08/01/blief-or-belf.html",
            "date": " • Aug 1, 2008"
        }
        
    
  
    
        ,"post79": {
            "title": "awesome pitiable envy",
            "content": "ants tunnel into the crops, eroding the soil and spoiling the harvest . the farmers respond by killing the ants . we burrow into the crust, pulling out oil and coal .",
            "url": "https://luddites.me/poetry/2008/07/25/awesome-pitiable-envy.html",
            "relUrl": "/poetry/2008/07/25/awesome-pitiable-envy.html",
            "date": " • Jul 25, 2008"
        }
        
    
  
    
        ,"post80": {
            "title": "a grieved grievance",
            "content": "I’ve been very excited about upgrading my iPhone to the new iPhone 3G. This morning, I called the Apple Store at the Syracuse, NY mall to see if any were in stock. Lo, 16GB Whites were in stock. So, I packed up the family for a trip to the mall and drove the 2 hours to Syracuse. Eagerly, I went into the Apple store and boldly asked, “Please, sell me an iPhone.” . This is where it all goes wrong. I have $299 plus tax in hand. Apple has an iPhone in stock. Why didn’t I walk out of the store with $300 less in pocket and an iPhone richer? Utter disregard for customer satisfaction, customer loyalty and a Byzantine delusion that by rigidly controlling access to your product that somehow you will profit. . The problem, it seems, is that I have a family plan with AT&amp;T and that my mother, who works for a college with a contract with AT&amp;T and receives a discount adds a mysterious ‘IFU’ tag to my account. Now, I cannot buy the phone from Apple, I must buy it from AT&amp;T. . “AT&amp;T is sold out nationwide,” I say. . “We know,” says Apple. . I asked if I could buy the phone and take it to the AT&amp;T kiosk just down the hallway. . “No,” says Apple. . I asked if I could bring an AT&amp;T representative up to the Apple store to work out the kinks and let me somehow purchase the phone. . “No,” says Apple. . I asked if Apple could sell this iPhone to the AT&amp;T kiosk and let AT&amp;T sort out the details. . “No,” says Apple. . Why I can’t purchase the phone, I can’t imagine. This kind of corporate arrogance drives me nuts. My current iPhone is mine. I can do with it what I want. The new iPhone 3G should be mine as well, but apparently Apple doesn’t want my business. . This is all very frustrating, because unlike so many others, I’m playing by the rules. I’m not unlocking my iPhone and switching carriers. Apple’s rules are wrong, don’t get me wrong; but I’m willing to play by them in order to get access to the device. At the point when Apple has changed the rules so much that I can’t even enter the playing field? . I’m buying my iPhone 3G unlocked from China. .",
            "url": "https://luddites.me/tech/logging/fruit/2008/07/19/a-grieved-grievance.html",
            "relUrl": "/tech/logging/fruit/2008/07/19/a-grieved-grievance.html",
            "date": " • Jul 19, 2008"
        }
        
    
  
    
        ,"post81": {
            "title": "circles twice removed",
            "content": "Time bends in unpredictable ways with children.  Eli is almost 6 months old, and he’s the most amazing little person, which always strikes me as an odd thing to realize.  It seems like there’s this wealth of common knowledge, generally in these seemingly obvious observations, “Children change your life”, “My child is the best thing to ever happen” or any number of different (even radically different) observations, which are impossible to apprehend (or at least I chose not to try) in the absence of the actual experience. . In the same way, there are all these things which I feel like I’ve known for quite a while about life, but for one reason or another have chosen to ignore until now.  I can’t quite put my finger on it.  It’s a feeling of constant, “Oh, now I get it” that never seems to end; and I’ve abandoned all hope of ever approaching a final sense of awareness in which “I get it”, because I don’t think that place is realistically apprehensible given our life expectancies.  Sometimes, it’s a vague feeling, having remembered a moment observing my parents doing something that I find myself now doing, remembering a kind of absent, half-concerned confusion as to the what’s and why’s of what they were doing, as it didn’t appear to make any sense to me, and then suddenly awakening to those answers as I find myself doing those actions. . I guess in a sense, it’s as if I spent a good portion of my life watching some other people live their lives; and I spent a portion of that time in observation pontificating and sometimes even going so far as to judge them in accordance with my own standards for how a life ought be lived.  Then, suddenly, I’m out of the stadium seating and onto the field; and I’m acutely aware of this sensation of replaying a match that’s already been played. .",
            "url": "https://luddites.me/musing/l%C3%AFf/eli/2008/07/09/circles-twice-removed.html",
            "relUrl": "/musing/l%C3%AFf/eli/2008/07/09/circles-twice-removed.html",
            "date": " • Jul 9, 2008"
        }
        
    
  
    
        ,"post82": {
            "title": "in the waking hours",
            "content": "There is within me this horribly perverse desire to hoard away little minutes here and thither for my own squandering. Fatherhood robs you of your selfishness, and I want it back. I linger fondly over memories of gross self indulgence, filling my belly with late night television and sleeping until noon after noon. There were these rare but ghastly glimpses into a future filled with stale potato chips and beer cans stacked to the ceiling and dripping disorder across the room, and the vague notion of eternity in this foul stench of a vision; but these were easily squashed by the audacity of self import. . The child allows no other in his unruly room within your heart. No space exists for self, and though his departure was no doubt timely and a salvation of many colors, the idea of self sometimes pines for itself in the quiet moments between tasks. That the house is full of diapers stacked to ceilings and scattered books and toys cover the couch and floor matters little to the faint horrors of former visions. The child must be satisfied and his thirst is greater than any of my former selves. . The joy then emerges quite unexpectedly, as we feed his unquenchable desires with our little loves–their unquenchability fuels my purpose in ways no other self ever afforded; and to love him is to know love (a little). . How then to ferret away a moment for myself? .",
            "url": "https://luddites.me/home/l%C3%AFf/eli/2008/06/19/in-the-waking-hours.html",
            "relUrl": "/home/l%C3%AFf/eli/2008/06/19/in-the-waking-hours.html",
            "date": " • Jun 19, 2008"
        }
        
    
  
    
        ,"post83": {
            "title": "i love twine",
            "content": "from the knots it forms in my drawers… . to the kittens it delights in my imagination… . and to the semantic web i yearn to embrace… .",
            "url": "https://luddites.me/semantics/vapor/wear/2008/05/21/i-love-twine.html",
            "relUrl": "/semantics/vapor/wear/2008/05/21/i-love-twine.html",
            "date": " • May 21, 2008"
        }
        
    
  
    
        ,"post84": {
            "title": "a dark in the shot",
            "content": "You had your first shots today, my boy, just a few short days after your learned to laugh.  It was painful to hear you really cry. .",
            "url": "https://luddites.me/eli/2008/04/08/a-dark-in-the-shot.html",
            "relUrl": "/eli/2008/04/08/a-dark-in-the-shot.html",
            "date": " • Apr 8, 2008"
        }
        
    
  
    
        ,"post85": {
            "title": "Eli, my Eli",
            "content": "It is almost a month since you were born. We have taken many pictures of your progress, and it is a joy to watch you grow day by daily. . I imagine that you have what must be the opposite of Alzheimer’s: the gradual acquisition of memory and a constant state of impermeable confusion, rolling over your consciousness like waves, which leave just a little more sand on the beach than they take away with each thundering tow. Your eyes are developing, and your neck is nearly strong enough to turn your head at will; but you are utterly helpless. I marvel at your weakness, because it seems to speak to our species as a whole. . There are no lesser animals, but there are animals less complex (perhaps) than our species, animals whose young are nearly ready to defend themselves upon departure from the womb. You are not. Like the panda, we must raise our young with absolute dedication or they will die. That we have selected to so evolve as a species seems significant. Certainly, it is a testament to our social nature. We live or die upon our ability to interact socially. That we should have incorporated this social dependence into childbirth is interesting. Interesting, if only to me. I do not pretend to own some greater understanding of this little mystery; but the panda and the polar bear raise their children alone. Dolphins, it is true, socially converge as do a vast array of apes and monkeys. We are certainly not unique in this regard; but it might be described as a feature of the “more evolved”–whatever that might mean. . All that aside, it is a joy to watch you grow. .",
            "url": "https://luddites.me/hello/l%C3%AFf/eli/2008/02/23/eli-my-eli.html",
            "relUrl": "/hello/l%C3%AFf/eli/2008/02/23/eli-my-eli.html",
            "date": " • Feb 23, 2008"
        }
        
    
  
    
        ,"post86": {
            "title": "hello, son",
            "content": "It’s mere minutes before the day you are scheduled, albeit not destined, to be born; and though you may be familiar with my voice, we have not spoken–not I to you or otherwise. . Your mother and I have thought about calling you Eli. In the Hebrew, it means “God” or “my God” or “ascension”. The Jews, about whom you will come to learn a great deal in the many years I hope you live, did not believe in a heaven or hell as the Christians that followed them do. Rather, their great hope, through a life of sacrifice and righteousness, was not that God would ultimately bless them individually or immediately but that he would bless their children and their children’s children. . There is much about this world I wish were different for you. You may not see true Winter in your lifetime. You will certainly find life harder than it was introduced to me. My generation was softly born and cradled with beautiful lies, and our eyes opened too late. Your generation will be harsher, perhaps angry and even bitter against us for the poor condition of the world we have kept for you. Truly, we lived in ignorance. . I do not believe in god or Gods, Allahs or Krishnas, Calvins or Marxes. They are mostly made of phlogiston, burning brightly in artificial air. I do like the notion of the Judaic faith–that our blessings are our future; that our future is our family. I doubt they’ve that written anywhere or spoken it so vulgarly as I, but it’s my notion of their belief. One possible belief–narrowly focused. . That you are of me, and that I get to enjoy you and the fruits of your life is blessing. I anticipate meeting you. . I fancied in my youth that I would die alone and childless, though not perhaps for the reasons you might one day come to expect. Rather, I felt very keenly a connection to this God, about whom the theme of this first letter is becoming tightly woven. I believed then (and still do) in this notion of absolute truth–that right and wrong can be judged, only I then believed they needed a Judge to be so. It seemed to me then that a relationship with this God need be personal and intimate, but I felt nothing. Because I believed in but did not experience this God, for a great while I despaired and thought my own life hopeless; and later when I did come into an experience, my beliefs had gradually changed; and it seems that a great deal of my struggle has been in and around the attempt to meet my beliefs with my experiences. . It has not been to this day a struggle of great success; but, out of despair, I do still hope. Goodness must exist, and Justice must be sought. I don’t have perfect answers to the logical problems these two assertions stand upon, but I know it is worth a great deal to believe in these two things. . I look forward to the journey with you. .",
            "url": "https://luddites.me/eli/g%C3%B6d/2008/01/22/hello-son.html",
            "relUrl": "/eli/g%C3%B6d/2008/01/22/hello-son.html",
            "date": " • Jan 22, 2008"
        }
        
    
  
    
        ,"post87": {
            "title": "thought in progress",
            "content": "I opened his heart on the kitchen counter this morning with a pairing knife and a garlic press. His body lay still, still warm on the hearth as I worked; and the dawn still played table tennis with the snow–sheeting awkward beams of light back and forth from the heaven to the ground. The flesh was less malleable than I had anticipated. It lacked any of the phantom palpitations I half expected from late night and early morning movies, but it moved between my fingers in a way that almost felt conscious. That he didn’t give it to me doesn’t lead to the conclusion that I stole it. Quite the contrary. His daughter pleaded with me to take it; and now we stand together in the act of its dissection–morally, if not literally. . Of particular interest to me is the right ventricle. I long suspected it to be deficient in at least one capacity, and it is now my good fortune to arrive at first hand concrete resolution. .",
            "url": "https://luddites.me/surgery/meanderings/2007/12/15/thought-in-progress.html",
            "relUrl": "/surgery/meanderings/2007/12/15/thought-in-progress.html",
            "date": " • Dec 15, 2007"
        }
        
    
  
    
        ,"post88": {
            "title": "forgotten futures",
            "content": "“The end of the day comes closer to my ear and whispers casually that she’ll be leaving me alone.” -Me, 20 minutes ago. . It was a quiet morning when the past abandoned me for her other lovers. A story follows, but it’s too late to open her now. .",
            "url": "https://luddites.me/poetry/2007/10/18/forgotten-futures.html",
            "relUrl": "/poetry/2007/10/18/forgotten-futures.html",
            "date": " • Oct 18, 2007"
        }
        
    
  
    
        ,"post89": {
            "title": "Put These Into My Car",
            "content": "Every day that I drive, stuck in traffic, I find myself wishing for little things–often simple things to make my drive faster, safer, more enjoyable. I doubt anyone’s listening, but by golly gershwin I’m going to write them down. . 1. Front side brake lights. . Yes. When that lunatic without a turn signal is slowing down–I’d like to know. My eyes are pretty good, but sometimes it’s hard to tell when someone is actually slowing down. If I’m at a stop sign, waiting to turn, I could turn faster if I knew the car approaching were slowing down. If I’m driving towards a crosswalk, and I don’t see the pedestrian step out but the oncoming car from the other direction does–I’ll see his brake light and know something’s up. . A simple set of red lights below the headlights would do the trick. . 2. Yellow lights before green. . Oh yes. Europe has it, and it’s a joy. A short, 2 second yellow light (the same yellow light preceding red) appears before the green (or blue). It keeps traffic flowing smoothly. It’s so simple, yet so effective. . 3. WiFi Everything. . I want so much, it’s hard to contain myself. I want WiFi radio stations for my stereo. I want to communicate with other cars without honking. I want to know if there’s a car coming toward me in the evening fog that I can’t see yet. I’d like my car to calculate right-of-way at a 4-way stop and inform everyone else as well. Traffic info. . 4. USB plug for the onboard computer. . I would love to know what’s on that chip. Why is that dashboard light on? Just route a cable to the cigarette lighter space and let me plug it into my laptop. Let me download the mileage, calculate my fuel economy, alert me to problems, see my daily usage–starts, stops, trips, etc. All of that isn’t on the chip, but start with the chip and make everything accessible via USB, bluetooth or WiFi. . 5. No more cigarette lighters. . I don’t smoke. I don’t need to light things on fire while I drive. I hate the adapters to plug things in. Just give me a plug. No adapter. Just a plug. Now, please. . 6. WiFi alarm. . Back on the WiFi trail. I have a program for my Mac in case it’s stolen. If so, I report the theft to the company. They ping my laptop the next time it comes online, activating the theft software. It starts broadcasting its location, logging all keystrokes, and silently feeding video images of the thief back home. It can’t be erased or uninstalled (without the very secure admin password). Why not in my car? I hate the noisy alarm. Just start rolling film, broadcast location, and send the crook to jail. As soon as the car comes within range of a hotspot.. bam. Or give it a disposable phone number to SMS data. Anything. . 7. Cameras. . I’d like to end the insurance speculations now and forever. Just put 4 cameras (or more) on the 4 sides of the car. Build them into the frame. Record everything on a little hard drive in the trunk. Next time I get rear-ended, I’ll simply show the video to the police and walk away with my check. You can also fight those tickets. Prove you came to a complete stop. Prove that crazy man jumped out in front of you. . 8. Breath-a-lizer in dash. . I never want to drive under the influence, but sometimes I have a few drinks on an empty stomach that hit me a little harder than I’d like. I don’t notice it until AFTER I start driving. What an awkward feeling, I can tell you. I doubt I’ve ever been illegal behind the wheel, but I’d love to be able to make a snap decision before even turning the car on: drive or cab it. . Anyways, that’s my wish list for today. .",
            "url": "https://luddites.me/slashdot/wishes/tech/pie/sky/2007/10/05/put-these-into-my-car.html",
            "relUrl": "/slashdot/wishes/tech/pie/sky/2007/10/05/put-these-into-my-car.html",
            "date": " • Oct 5, 2007"
        }
        
    
  
    
        ,"post90": {
            "title": "Fallujah",
            "content": "Ithaca College today had the audacity to introduce and screen a film as a documentary, “Fallujah”. I am still processing my rage. .",
            "url": "https://luddites.me/baghdad/l%C3%AFf/2007/10/05/fallujah.html",
            "relUrl": "/baghdad/l%C3%AFf/2007/10/05/fallujah.html",
            "date": " • Oct 5, 2007"
        }
        
    
  
    
        ,"post91": {
            "title": "Open P2P (Peer to Peer) to Life",
            "content": "I’m just one fellow, and not terribly educated at that; so my opinions may not be grounded in actuality. Nonetheless, I’ve been thinking of a few ideas, wondering if anyone else has thought of them and if they’re any good. . 1. P2P networking. Why not host websites over P2P? Sure, you’d need a client to fetch them for you. But you already need a browser to see websites anyways. Sure, they’d be more vulnerable to change, perhaps. But you could design some checks and balances. Of course, maybe change is good. Maybe allowing websites to evolve over P2P could be radical and fun. On the upside, anyone could create a website. No one could take it down. Maybe there’s other benefits/dangers as well. . -Also, why not create a P2P file system, based on xfs or ext3 or jfs or something like that. One could install applications, do all sorts of craziness–databases, etc. . 2. Consolidate email, SMS, and IM into one solution with many options. In the first, what about *really* instant email? Wouldn’t that be neat? If email were as fast as IM–would you need anything else? What about P2P over email? Now it seems like I’m stuck in a P2P mode of thought. Maybe that’s a good thing. Maybe not. . 3. What about wiki everything? Wiki-phonebooks. Wiki-advertising. Wiki-directories. Wiki-life. What about my life on wiki? Family trees. You name it. Wiki-news. I’m tired of getting calls from numbers that I don’t know and can’t find. Sure, there’s 800info.com, but wouldn’t a wiki be better? Also, directories of websites are great. Why aren’t they wiki-possible? It could go on and on. . 4. What about news id tags? Like an RSS feed, I’d like to be able to subscribe to a news item. For example: “United 572 crashes into Pacific, cause unknown.” Why not let the first person to write the story assign a unique number that all other agencies use as well. Then, all updates to the story get branched off that number. 4 days later, when I want to know the status of that story–I’ve got the micro-rss of it, pulling articles from every major news source to fill me in. Like an IMDB or AllMusic or database for news. Specifically, I want updates of the Australian ghost ship that hit the news a few months back. Every time I think of it, it’s harder and harder to find. . 5. Login consolidation. I have keeping multiple logins, multiple profiles, multiple passwords. I hate recreating my profile on every site I frequent. I hate registering for sites. There’s a feature in Joomla 1.5 that promises Google authentication. That seems like a good start. I just wish I could create a Facebook style username/password/profile for my identity and use that same identity on every site I want to leave my mark on. P2P identity. Too much? Not sure. But dear god, I wish it were here now. . 6. What about a site devoted to ideas like this? I’m not sure a site is the answer–it seems like a needless waste. Maybe a better way to connect ideas. A Google extension for ideas. Not keywords but concepts. I’m searching for innovative ideas (not to suggest these ideas are innovative) or answers to my questions about potential ideas, and I can’t seem to find them. . Anyways, I’m just tossing the idea out there. Maybe it’s worth someone’s time. Maybe not. .",
            "url": "https://luddites.me/slashdot/wishes/tech/2007/10/04/open-p-2-p-peer-to-peer-to-life.html",
            "relUrl": "/slashdot/wishes/tech/2007/10/04/open-p-2-p-peer-to-peer-to-life.html",
            "date": " • Oct 4, 2007"
        }
        
    
  
    
        ,"post92": {
            "title": "Automakers Propose Cutting Emisions in Half by Releasing Only Pure, Clean Carbon-Monoxide",
            "content": "Relative Motors today announced plans to cut carbon emissions in half, by converting dangerous carbon dioxide emissions into harmless carbon monoxide emissions. RM spokesman, Donald Thisbit, told reporters: “Carbon dioxide as we all know is One molecule carbon, TWO molecules oxygen. Today, Relative Motors will cut half the oxygen out of our vehicle emissions. That’s half the waste. We feel at RM that carbon monoxide is the gateway to a greener planet and a sustainable future.” .",
            "url": "https://luddites.me/donald%20thisbit/news/2007/09/27/automakers-propose-cutting-emisions-in-half-by-releasing-only-pure-clean-carbon-monoxide.html",
            "relUrl": "/donald%20thisbit/news/2007/09/27/automakers-propose-cutting-emisions-in-half-by-releasing-only-pure-clean-carbon-monoxide.html",
            "date": " • Sep 27, 2007"
        }
        
    
  
    
        ,"post93": {
            "title": "Pope Announces Revolutionary 'Abstinence Only Education'",
            "content": "In a radical move from the Vatican, part-time Archbishop Donald Thisbit told Reuters reporters this morning, “It is time to take a program that has worked effectively for 6,000 years and adapt it to a changing world. ‘Abstinence Only’ has defeated AIDS; ‘Abstinence Only’ has cured deformed relationship patterns, and the Vatican today believes that education itself may only need abstinence.” . Beginning next week, Catholic schools across the world will begin burning all textbooks which are deemed to present a non-abstinent way of thinking. Speaking of their large biology labs, Sister Angela of the St. Phillipe’s Immaculate Wrath school offered, “This news comes as a relief. For too long we’ve had to teach all of the things that can happen in a biological system. Now, students only need to know what shouldn’t happen. High school graduations can start, Pope approving, in the 2nd grade.” . Unresolved in this mornings news, however, was the issue of animal abstinence. Confused area children pondered, “Mommy, why is there a chicken/egg debate?” .",
            "url": "https://luddites.me/news/pope/2007/09/24/pope-announces-revolutionary-abstinence-only-education.html",
            "relUrl": "/news/pope/2007/09/24/pope-announces-revolutionary-abstinence-only-education.html",
            "date": " • Sep 24, 2007"
        }
        
    
  
    
        ,"post94": {
            "title": "Bush Repunctuates Education Law: 'No! Child... Left Behind?' Act",
            "content": "A recent review of the “No Child Left Behind” law, enacted by Congress in 2004 and signed into law shortly thereafter by George W. Bush has revealed another startling example of Executive Privilege. A practice begun with Roosevelt, presidents have frequently amended bills upon signing them into law by annotating their own interpretations of the bill’s intent. Left undiscovered until now, in part because Mr. Bush did not attach anything to the law but instead punctuated the title: . “NO! Child… ‘Left Behind’?” . Scholars and judges have yet to decide what, if anything, should be done following this revelation. Spokesman for the White House, Donald Thisbit, announced to reporters, “This is yet another fine example of a president who has the foresight to follow through on his initiatives.” .",
            "url": "https://luddites.me/w/news/2007/09/24/bush-repunctuates-education-law-no-child-left-behind-act.html",
            "relUrl": "/w/news/2007/09/24/bush-repunctuates-education-law-no-child-left-behind-act.html",
            "date": " • Sep 24, 2007"
        }
        
    
  
    
        ,"post95": {
            "title": "Greek God Vows to Avenge Son's Death",
            "content": "Greek god Apollo vowed today to AP reporter, Donald Thisbit, to prosecute Zeus, king of the gods, to the full extent of the law for the unlawful execution of Apollo’s son, Asclepius. While the case has been dormant due to a lack of evidence for over 2,500 years, Apollo feels certain he can convince district attorneys to reopen the case as more and more gods seek returns on the unlawful killing(s) of their siblings, spouses, parents and children. . Apollo commented, “All Asclepius aspired to achieve was the reanimation of dead tissue for the immortality of man. Now, all involved in his death must be killed.” .",
            "url": "https://luddites.me/news/l%C3%AFf/2007/09/09/greek-god-vows-to-avenge-sons-death.html",
            "relUrl": "/news/l%C3%AFf/2007/09/09/greek-god-vows-to-avenge-sons-death.html",
            "date": " • Sep 9, 2007"
        }
        
    
  
    
        ,"post96": {
            "title": "Concerns Rise as Expectations Lower",
            "content": "Area residents of Watkins Glen, Arizona today noted increasing concern over their own lowered expectations. Said Donald Thisbit, elementary school teacher of his students, “I just couldn’t care less about their education–and that frightens the heck out of me.” Wilford Mansfield, owner of the Dapper Dangler grocery store, expressed frustration with plummeting sales: “We’ve posted record losses every quarter for the past seven quarters, and I couldn’t be more concerned about how little I care.” .",
            "url": "https://luddites.me/news/2007/09/07/concerns-rise-as-expectations-lower.html",
            "relUrl": "/news/2007/09/07/concerns-rise-as-expectations-lower.html",
            "date": " • Sep 7, 2007"
        }
        
    
  
    
        ,"post97": {
            "title": "Pope Announces: 'Life Begins at Lust'",
            "content": "Part-time Vice Cardinal at the Vatican, Donald Thisbit, revealed to AP reporters this morning the results of the Pope’s revelations on the true point of entry for new souls into the universe. “Lust”, he said, “initiates an inter dimensional spiritual phone call, bringing the next new soul to the front of the line in preparation to enter existence.” Thisbit also announced the Vatican’s new anti-lust research policy, calling psychology a platform of genocide on the largest possible scale. .",
            "url": "https://luddites.me/news/pope/2007/09/06/pope-announces-life-begins-at-lust.html",
            "relUrl": "/news/pope/2007/09/06/pope-announces-life-begins-at-lust.html",
            "date": " • Sep 6, 2007"
        }
        
    
  
    
        ,"post98": {
            "title": "thurgling",
            "content": "It comes at that time in the early morning when the throat clenches about the fist and a fast cry surges toward the stomach: “something is missing”. I am meant for something great. What is self or greatness? I do not hesitate to abstain from speculation. What matters at the end of the day? How many men on this earth ate bread tonight? Has that percentage improved since yesterday? If not, what are our plans to change that? From the poorest child’s access to bread, the whole spectrum becomes clear– . Suffering will always exist if we do not sacrifice. Christ died in vain. .",
            "url": "https://luddites.me/republicans/l%C3%AFf/hungry/2007/08/19/thurgling.html",
            "relUrl": "/republicans/l%C3%AFf/hungry/2007/08/19/thurgling.html",
            "date": " • Aug 19, 2007"
        }
        
    
  
    
        ,"post99": {
            "title": "glope",
            "content": "An inadequately funded urchin tottled toward the slow gaze of despair. Not glancing upward from its own steady march, the urchin bent forward and stumbled into the open arms of license. .",
            "url": "https://luddites.me/poetry/2007/08/10/glope.html",
            "relUrl": "/poetry/2007/08/10/glope.html",
            "date": " • Aug 10, 2007"
        }
        
    
  
    
        ,"post100": {
            "title": "laziness breeds",
            "content": "He’s in there, lollygagging about, twiddling the old thumbs as he mocks me. I see him, in his wee chair, leaning back against his tiny gravity, reading his mini New York Times late edition and sipping a barely visible cup of Chai. It disgusts me. I’ve already planned the first speech: day one, hour one, minute one, second 25 (give him a moment with Mom before setting things down) . Listen up, Soldier. You’ve been selected for a special mission, because you’re the best of the best of the best. Of the best. I hope you’ve enjoyed your R&amp;R, because that’s the last you’ll see of it for the next 6,574 days. We’ve been keeping a close eye on you, and it’s time to… . Anyways, the rest will come as a surprise to us all. For the moment, he and I both can take in a deep breath of awe. .",
            "url": "https://luddites.me/lollygagging/l%C3%AFf/peanut/2007/08/03/laziness-breeds.html",
            "relUrl": "/lollygagging/l%C3%AFf/peanut/2007/08/03/laziness-breeds.html",
            "date": " • Aug 3, 2007"
        }
        
    
  
    
        ,"post101": {
            "title": "quit me thisly",
            "content": "squalor tempests beneath the artificial breeze the heat stacks brick ovens beside the bedroom door thirst strangles her as she sleeps i sweat .",
            "url": "https://luddites.me/glated/heat/l%C3%AFf/2007/07/10/quit-me-thisly.html",
            "relUrl": "/glated/heat/l%C3%AFf/2007/07/10/quit-me-thisly.html",
            "date": " • Jul 10, 2007"
        }
        
    
  
    
        ,"post102": {
            "title": "It's that time when the world falls in love",
            "content": "She sleeps with her mouth open and kicks when I brush against her legs. It’s an effort not to want to gently touch her stomach. . Insanity festers in the tossing and turning of the night. . .",
            "url": "https://luddites.me/eli/2007/07/09/its-that-time-when-the-world-falls-in-love.html",
            "relUrl": "/eli/2007/07/09/its-that-time-when-the-world-falls-in-love.html",
            "date": " • Jul 9, 2007"
        }
        
    
  
    
        ,"post103": {
            "title": "CBS Introduces 'Life on Demand'",
            "content": "In the absence of truly innovative reality TV programming, CBS executives propose to cross the entertainment threshold by introducing your life, on demand. Watch moments of your past, present, or potential futures in real time–only when you desire to experience it. That first kiss in slow motion. Your first sky dive adventure three years from now in the Amazon. Your elite training in a Chinese counter-terrorism, joint, international task force to eradicate counter-government international task forces. All of it available on your television, at your leisure. CBS executives do provide one disclaimer: “CBS cannot be held responsible for broadcasts of future events that individual audience members fail to enact in their own lives due to time spent watching own lives in demand without regard for actual living.” .",
            "url": "https://luddites.me/news/2007/07/03/cbs-introduces-life-on-demand.html",
            "relUrl": "/news/2007/07/03/cbs-introduces-life-on-demand.html",
            "date": " • Jul 3, 2007"
        }
        
    
  
    
        ,"post104": {
            "title": "Sea of Rage",
            "content": "His hunger never abides, and his fury consumes him. His own rage frightens him. He knows not what he might do or kill if he can’t control it. It is, of course, a battle he cannot win. .",
            "url": "https://luddites.me/fury/l%C3%AFf/sam/2006/10/25/sea-of-rage.html",
            "relUrl": "/fury/l%C3%AFf/sam/2006/10/25/sea-of-rage.html",
            "date": " • Oct 25, 2006"
        }
        
    
  
    
        ,"post105": {
            "title": "See to Shining See",
            "content": "It takes a moment to find Calliope. Urgency predicates motion. . I stopped bringing the newspapers from the porch into the hallway. They remain unread regardless. In fact, I migrated the newspapers from the hallway back onto the porch. Manifest Destiny. I scatter them in the evening when I return from work, and I hear them stacked again in the mornings as I lay staring at the ceiling. . I recall mornings watching the stars die; of course, then I threw the newspapers back towards their Deliverer. Change doesn’t change much. . Sometimes I think about reading as I lay my wearied bones to rest on salvation army couches. Beds abound up the stairs. Big, soft, expensive beds. I’m no longer comfortable with comfort. One day I’ll trite someone to death. . The thought of reading does occur. I can’t remember the last thing I read consciously. Words fill pages that scroll in accordance with the movements of my fingers. I absorb; I accept; I link. Changes little changing. . Closing the eyes is the hardest part. They don’t like that. They resist. Then they flitter about, searching for occupation. Words are like food to them. . I’ll feed my porch instead. .",
            "url": "https://luddites.me/l%C3%AFf/anaxagoras/2006/10/24/see-to-shining-see.html",
            "relUrl": "/l%C3%AFf/anaxagoras/2006/10/24/see-to-shining-see.html",
            "date": " • Oct 24, 2006"
        }
        
    
  
    
        ,"post106": {
            "title": "can't see my tale",
            "content": "Nothing. . Everything. . Anything. . These three words are, in and of themselves, relatively benign. But imagine if you said them slowly and surely, one after the other with a sense of urgency in your voice and a half-eaten growl in your throat. If you almost choked back a tear on the last one. If you left a baroque pause between the first and second while you lit a cigarette and looked angled at the floor. . France has surrendered for less. .",
            "url": "https://luddites.me/obsequious/l%C3%AFf/2006/10/09/cant-see-my-tale.html",
            "relUrl": "/obsequious/l%C3%AFf/2006/10/09/cant-see-my-tale.html",
            "date": " • Oct 9, 2006"
        }
        
    
  
    
        ,"post107": {
            "title": "tails of the apocalypse",
            "content": "Bukowski, we miss hating you. . Give us a thirst to match our drinks. .",
            "url": "https://luddites.me/gimel/l%C3%AFf/2006/08/29/tails-of-the-apocalypse.html",
            "relUrl": "/gimel/l%C3%AFf/2006/08/29/tails-of-the-apocalypse.html",
            "date": " • Aug 29, 2006"
        }
        
    
  
    
        ,"post108": {
            "title": "lampshade of the apocalypse",
            "content": "There’s a moment when you first stumble down the stairs in the morning and collapse into the kitchen, the lights still struggling with varying definitions of cogency, as you peer into the cupboard to pull out the last clean coffee cup, that you stare through the pending doorway into Africa. In the distance, Kilimanjaro roars. Lions purr beneath the marula trees. . I like to live in that space between my nose and the cabinet door. .",
            "url": "https://luddites.me/thwibbt/l%C3%AFf/2006/08/28/lampshade-of-the-apocalypse.html",
            "relUrl": "/thwibbt/l%C3%AFf/2006/08/28/lampshade-of-the-apocalypse.html",
            "date": " • Aug 28, 2006"
        }
        
    
  
    
        ,"post109": {
            "title": "this country does noT exist",
            "content": "The moon was gold like violets in February, and the grass green like radishes pulled from the dark recesses of the fridge. The air smelled of diamonds–coal burning in the microwave; and life breathed down my neck with the self-importance of a forced whisper during morning vespers. . Rain falls like similes. . I like the like creatures like morning likes dawn. . Words and intentions fail. .",
            "url": "https://luddites.me/l%C3%AFf/eggplant/2006/07/14/this-country-does-no-t-exist.html",
            "relUrl": "/l%C3%AFf/eggplant/2006/07/14/this-country-does-no-t-exist.html",
            "date": " • Jul 14, 2006"
        }
        
    
  
    
        ,"post110": {
            "title": "Rejected Personal Description from Yahoo",
            "content": "Introductions are best done at 15,000 feet in a C-130 preparing to dive into an aggressive landing pattern over Baghdad. Two reasons. First, you can’t hear anything besides the roar of the engines and the sound of pressure dropping out of your ear drums. Communication transcends language as you try to express agony and/or humor via poorly contrived hand signals, which inevitably convey meanings you do not intend to people whom you’ve never met. Second, explaining the rationale behind said attempts at communication is rarely anything less than hilarious. Otherwise, introductions are bound to be boring and uninspired. .",
            "url": "https://luddites.me/gibbled/l%C3%AFf/personal/2006/05/28/rejected-personal-description-from-yahoo.html",
            "relUrl": "/gibbled/l%C3%AFf/personal/2006/05/28/rejected-personal-description-from-yahoo.html",
            "date": " • May 28, 2006"
        }
        
    
  
    
        ,"post111": {
            "title": "Bait.",
            "content": "So, in a bold move yesterday morning, Jen tore into the guest bathroom (adjacent to the guest bedroom, where my cousins were sleeping) and assaulted the trash can. Then, selecting used tampons one-by-one, she carried them into the bedroom and laid them on the beds. .",
            "url": "https://luddites.me/dog/l%C3%AFf/jen/2006/05/28/bait.html",
            "relUrl": "/dog/l%C3%AFf/jen/2006/05/28/bait.html",
            "date": " • May 28, 2006"
        }
        
    
  
    
        ,"post112": {
            "title": "elastic vengeance",
            "content": "It comes in those moments between 3:15 and the wailing of the next door neighbor’s newborn tapioca child. It creeps up your pant leg like a twice dead grandmother with a bayonet between her cold, dead hands–except you aren’t wearing pants. A cold sweat would make things right; but, instead, you feel the knots in your stomach boring chimney holes and preparing to hibernate through the winter that is your discontent. Hot flashes like oranges thrown whole into blenders splatter across your peripherals. It hurts, excepting that it doesn’t. You wish it hurt, because that would be better than feel grandma’s M9 poking into your chest with less than enough force to tickle but more than enough to remind you that things are very unsettling. Visions of diapers, green mush, swimming pools, inflatable rafts, and endless dying childhood innocence embrace you with the sticky taste of buttery entreat. It’s all fading faster than you can bolt upright in bed. Cinnamon and sulfer in the air. Black eyes learing from behind the curtains. Skin crawling on top of your own. . It doesn’t occupy reality in the same way as the baby’s screams. But it’s there. Go back to sleep. Dream of horses and Gilgamesh. Fly with the dolphins. Don’t look back, and never wake up. . . Currently listening : You in Reverse By Built to Spill Release date: 11 April, 2006 .",
            "url": "https://luddites.me/pregnant/l%C3%AFf/2006/03/28/elastic-vengeance.html",
            "relUrl": "/pregnant/l%C3%AFf/2006/03/28/elastic-vengeance.html",
            "date": " • Mar 28, 2006"
        }
        
    
  
    
        ,"post113": {
            "title": "Eves and Cusps",
            "content": "I lost my accent in the gutter of an alleyway in Germany, a town called Hof, which literally or otherwise means ‘place’. I couldn’t find it again, though I hadn’t more than a moment to look for it before the punk rockers, pink hair dyed neon golden in the moonlight, dragged me across the tracks and into a wine seller forgotten by most–and most of them constituents of the dungeon-esque bar. We listened to Van Morrison and Alman Brothers and Zep; and it seemed that none of us understood more than a mouthful, which generally seemed to be more full of wine than understanding. Arm-in-arm, singing “Sweet Home Alabama”, the lights played tricks, simple slights of hand; and staggering through streets unknown to me, I found my way back to the train station thinking an accent a terrible thing to lose. .",
            "url": "https://luddites.me/deutschland/l%C3%AFf/exonerated/2005/12/16/eves-and-cusps.html",
            "relUrl": "/deutschland/l%C3%AFf/exonerated/2005/12/16/eves-and-cusps.html",
            "date": " • Dec 16, 2005"
        }
        
    
  
    
        ,"post114": {
            "title": "обо мне",
            "content": "I talk to myself when I feel awkward. I say the things that I want to say to the people involved (past or present) in my life, and then I feel more awkward as I remind myself that only I can hear my voice. . I’ve stepped foot on three continents. I’ve walked in the cities of ten countries. I’ve seen most of the fifty states. San Francisco, Seattle, Chicago, New Orleans, Orlando, D.C., New York, Vancouver, Atlanta, Montreal, Quebec, London, Babylon, Geneva, Berlin, Munchen, Koln, Baghdad and Ur are familiar to me. I’ve met a thousand faces. I’ve forgotten most of them. I’ve climbed mountains, weathered storms inside flimsy tents and the cold, hard ground in German winters. I’ve been to war. I watched men die. I’ve won a marathon, written a book and seen it published, sailed a boat, taught myself to program, ridden a rollercoaster, fished, hiked, drank, driven, sung a song to a pretty girl, lit a fire, fired a gun, dreamed, crashed, converted, regressed, loved and loved and loved and failed. . I failed to finish a novel. I failed to keep all my promises. I failed to be always honest. I failed to finish what I set out to do. I failed to show up on time, to remain always faithful, to keep my integrity, to pray, to listen, to answer, to forgive, to help when I was able. I take copious amounts of psychotropic medication in the attempt to achieve normality. . I’ve learned to like every cuisine on the planet. I’ve learned to love the environment. I’ve learned to distrust most of what I hear. I learned to cook, to clean, to write, to ignore, to trust, to nurture things living and dead. I can do anything I put my mind to. Most of these things I don’t do well. I’m extremely attractive. Fantastic in bed. I kiss well. I have great taste in music, better taste in films. I’m moderately well read. I’m physically fit, or I used to be. I have a great sense of humor. I tell stories, and I tell them well. I have depth. . It’s all true. Every word of it. . None of it has anything to do with who I am. .",
            "url": "https://luddites.me/l%C3%AFf/honesty/liberation/%D1%80%D0%BE%D1%81%D1%81%D0%B8%D1%8F/2005/12/13/%D0%BE%D0%B1%D0%BE-%D0%BC%D0%BD%D0%B5.html",
            "relUrl": "/l%C3%AFf/honesty/liberation/%D1%80%D0%BE%D1%81%D1%81%D0%B8%D1%8F/2005/12/13/%D0%BE%D0%B1%D0%BE-%D0%BC%D0%BD%D0%B5.html",
            "date": " • Dec 13, 2005"
        }
        
    
  
    
        ,"post115": {
            "title": "Great Tidings",
            "content": "It is, I think, significant that certain days stand out in memory and beckon for our attention and reflection. We purpose them, plan them and then, counter intuitively, allow our plans to unfold, acknowledging in so many words that plans are (very routinely) lists of things that do not happen. And these plans and the reality that follows them quickly become the stuff of myth and legend. The thanksgiving dinner, when the daughter of your second cousin turned the heat up on the stove and browned, blackened and burnt the Bird beyond recognition as the until-that-moment-quiet nephew began to pour gravy into the sweet potatoes, quietly begs to be recounted over Thanksgivings present and future. The road trips to homes of friends and family, which began in earnest and ended in cheap motel rooms, sadly picking away at KFC drumsticks as we imagined that heroic bird, great and glistening, laid to final rest upon the dinner table to be drawn and quartered before the family, still await us through unsuspecting short cuts and diversions. These days we set aside to celebrate human virtues (gratefulness, giving, sacrifice, honor) become and remain so (in the heart and mind of this reporter) only by the effort we exert to honor the values for which they stand. In that spirit, I would like to share my thanks for those that have stood by me, beaten me when I needed it, lifted me when I could not walk, encouraged me, laughed with me, shared time and money and shoulders. I am, in short, inexhaustibly grateful to you: my friends and family. I hope this Thanksgiving found you well, with full bellies and loosened belts and leftovers on speed dial. Nurse your bellies, all of you. . Shalom. .",
            "url": "https://luddites.me/l%C3%AFf/holiday/hungry/2005/11/25/great-tidings.html",
            "relUrl": "/l%C3%AFf/holiday/hungry/2005/11/25/great-tidings.html",
            "date": " • Nov 25, 2005"
        }
        
    
  
    
        ,"post116": {
            "title": "'W'it",
            "content": "I must have some repressed self-loathing, because my brain unleashed a fury of W’s drivel in my dream last night. I wish I could remember more of it, but the only phrase that remains (and picture him with his usual… . I wish I could describe this particular expression more concisely, but I can’t quite reduce it to those few and precise words that would normally form a well-crafted insult (and, in this case, purely objective observation). It’s that look when he leans forward on a podium, eyes staring hazily forward as his brain fumbles for any series of words that could comprise competent speech, almost as if he expects the audience to gaze at him with admiration as he stares down with non-comprehension, asphyxiating arrogance, and something between conceit and pert ignorance, that fills you with rage at the man; for not only is he an idiot, but he clearly has opposite delusions about the same fact. It’s more than the vacancy between his ear canals, though; it’s the utterly false assumptions that he seems to possess about his own character and the character of his audience. I could rant for pages on this frustrating flaw in his moral and intellectual fiber. When he announced his Harriet Myers appointment to the Supreme Court (if you saw this clip on the news, you’ll know exactly the look that I want to capture) he said, (I paraphrase), “The best idea I’ve heard in a long time is to appoint someone to the judicial seat who has never been a judge (or practiced real law).” . …back to the dream) clear is, (W’ concluding his speech), “…so I figured if I can’t win an argument, maybe I can win a war.” .",
            "url": "https://luddites.me/pillaging/l%C3%AFf/dreams/2005/11/15/w-it.html",
            "relUrl": "/pillaging/l%C3%AFf/dreams/2005/11/15/w-it.html",
            "date": " • Nov 15, 2005"
        }
        
    
  
    
        ,"post117": {
            "title": "Peanut Butter and Sasquatch",
            "content": "So little has happened in the last 48 hours that I cannot use few enough words to describe it. Perhaps an ellipses will settle the matter. … .",
            "url": "https://luddites.me/l%C3%AFf/2005/10/11/peanut-butter-and-sasquatch.html",
            "relUrl": "/l%C3%AFf/2005/10/11/peanut-butter-and-sasquatch.html",
            "date": " • Oct 11, 2005"
        }
        
    
  
    
        ,"post118": {
            "title": "I fought the giant lizard today",
            "content": "I knew going into that den of fear that my battle would not be one of fortunate ease. At first, he clung cleverly to the side of the refrigerator. A bold move. One I would not forget. I countered from the counter, swinging my spatula of justice toward his forbidable frame. “Check!” I cried. He bounded from the fridge to the wall to the floor to the ceiling to the door. Bolder still. “But I control the exits here, my friend. You cannot escape. You leave either dead or vanquished!” His eyes flitted to and fro. I hurled myself against the door, mighty weapon already weaving painful swirls of judgement down upon him; but he loosed a fearsome scowl and lept yet again into the dark crevasses of the couch. . A word on the couch. Many ancient evils lurk beneath the cushions we fear to turn. Surely, perhaps, goodness also dwells. The lost change, the keys, the condoms of utter necessity too wait for our humble eyes to light upon them–but at what cost? At what terrible cost! So it was that I turned bravely and humbly to the unturning of the sofa cushions. Slowly, at first, to keep my prey on edge–then faster as the scent of the hunt came more fully into my nostrills. Pillows flung into the air, lint and dust scattered to the winds of the awesome ceiling fan, and at last the outstretched, leathery claws of that viscous reptile as he hurled himself against me in one last futile attempt at freedom. . To rest I laid him upon the asphalt. Songs will yet be sung of the man incarnate thrice upon the form of lizard beneath the failing streetlight of our world. .",
            "url": "https://luddites.me/l%C3%AFf/2005/09/15/i-fought-the-giant-lizard-today.html",
            "relUrl": "/l%C3%AFf/2005/09/15/i-fought-the-giant-lizard-today.html",
            "date": " • Sep 15, 2005"
        }
        
    
  
    
        ,"post119": {
            "title": "Fellow Thebans",
            "content": "This winter has been especially harsh and long. With temperatures plummeting to record lows and heat expenditures on the rise, I find myself with my fellow citizens: pulling the wool blanket a little bit closer, holding the hot chocolate a little bit longer, and above all, staying indoors as much as possible. . A word on the medical discharge process from the Army: ‘discharge’ should not really be included in the name. Of course, the process is unique to each individual allowed to waltz in the medical ballroom of the military mansion, like a newborn baby—innocent, attractive and ultimately evil. You see other people carrying their babies and perhaps think to yourself, “How cute! How wonderful! I must have one.” And you try to conceive. Oh, almighty father and surrogate mother, how you try. Tests must be run, of course. They’re tests, after all—they can’t be expected to simply sit about sipping lemonade; they must be applied. You must be poked, prodded, nudged, waffled, squeezed, squirted, swamped, swilled and (above all) quizzed. Your blood pressure goes up to rooftop for a breath of fresh air. Your blood sugar decides to join her for a bit of late afternoon gossip. Your hair decides it would much rather grow out of your toes than your head. Your head fires your toes, who protest that they’re union and can’t be fired and decide to go on strike. Your fingers can’t decide whether to follow the toes or rebel against the head and allow themselves to just tremble ever so slightly. Your hair attempts to ascend back to the head, but the toes cry, “Scab!” and stop the hair at the legs. Finally, conception happens—but it’s one ugly baby. . So you look at the sonograms. Life floats in the ancestral womb. You ask the doctor for the birth date. He suggests that maybe some tests could answer that question. You lose five pounds off your knees, only to find it hiding in your shoulder blades. The shoulders begin smuggling weight in from Angola, and the border patrol captures a mere fraction of the cargo. You find yourself at war with France, and to the surprise of the global community, Switzerland actually suggests that perhaps the French are on to something. But, it could be worse; you could be working. . It’s come to that, you see. I meet people at the local polar bear club, and they ask, “So what do you do?” . “I’m an experiential architect. I note how the experience of architecture makes me feel.” . “I doodle. Professionally. I increase executive productivity by ghost-doodling for high ranking CEOs.” . Nothing fosters enmity with your fellow man as much as the truth. Never tell him, “I negotiate the transfer of tiny sums of money, fractions of a penny, back and forth between accounts to force accounts into an overdraft.” . The results are never good. . I must be off. I hope you all are well. Take care. . “Chances are you are scared of fictions. Chances are you are only fleetingly happy. Chances are you know much less than you think you do. Chances are you feel a little guilty. Chances are you want people to lie to you. Perhaps the answer lies on the side of a coffee cup. You are lost.” . The Way I See It # 23 by David Cross -Found on the side of a Starbucks coffee cup .",
            "url": "https://luddites.me/l%C3%AFf/2005/08/24/fellow-thebans.html",
            "relUrl": "/l%C3%AFf/2005/08/24/fellow-thebans.html",
            "date": " • Aug 24, 2005"
        }
        
    
  
    
        ,"post120": {
            "title": "Area Man Confused By Obscure 'Mullis' References",
            "content": "Area man, CSM Blackwood, has been reported interrogating the port-o-john guards with questions about the Mullis enigma. SPC Clark told reporters, “Yeah, this guy keeps asking me about Mullis: “Who is this Mullis guy, anyways?” “What’s with the cock? Why does he love it so much?” “Does he know something I don’t know?”. I mean, I just don’t know. I watch the graffiti, I don’t make it.” Other sources indicated that CSM Blackwood could be seen pacing back and forth along the many rows of port-o-potties at Camp Duke, frustrated and agitated. Local nationals reported confusion as they were repeatedly approached by the area man and asked, “Where is Mullis?” Although the answers are unclear, the potential for the future looks bright, says Blackwood, “I will find this man, this aberration, and I will verbally counsel him like no other soldier has ever seen.” . --New York Times .",
            "url": "https://luddites.me/baghdad/news/2004/07/17/area-man-confused-by-obscure-mullis-references.html",
            "relUrl": "/baghdad/news/2004/07/17/area-man-confused-by-obscure-mullis-references.html",
            "date": " • Jul 17, 2004"
        }
        
    
  
    
        ,"post121": {
            "title": "Baal is Dead; I Killed Him",
            "content": "Babylon approaches slowly. Endless wasteland precedes barren desert and opens into more nothing than can be bottled and sold at next year’s federal auctions for the blind. Following that, water appears. With water comes green in every shade that life embraces. . For those of you that have never enjoyed the luxury of riding in a military convoy through the deserts of Iraq, I will spare you most of the petty details. Imagine an oven strapped to a skateboard, which is propelled by the steam engine fueled by the your sweat. Traveling at an unknown, inconstant speed, it takes 2 hours to drive from An Najaf to Al Hilla (Babylon). . The desire to fumble with phrases like “Nothing can describe” or “there is no way to convey the…” overwhelms. I suppose there’s nothing special about the ruins of that ancient city, nothing that can’t be seen elsewhere on the globe in other, less formidable climates; but few other places offer one the same chance to walk on ancient ground, through the birthplace of man—and it’s that feeling that crawls up the back of the spine and washes over you like fire as you stand on top of the ruins of a temple for a god that no longer answers his phone. I barbequed, but no one opened the door. Dead cow, dead pig, dead sheep and a light glaze of honey and spices, but no one spoke. It’s a pity, because I brought my camera. . Saddam, it seems, aspired to defy all prophecies and had begun to rebuild the city before his early resignation. Most of what has been rebuilt resembles an early toddler’s discovery of Legos. Haphazard masonry meets a myriad number of incompatible bricks, which threaten to crumble should the wind increase in force. Still, the ruins impress. Through an endless labyrinth, which was once one of the seven wonders of the world, you walk through the memory of the hanging gardens. Walls tower above you, and I pictured little boys playing hide and seek in the world’s greatest playground. . I could describe the rubble for days; but I’ll share the pictures instead, once they’ve been developed. After touring the city, I walked to the market, an experience, for which I was completely unprepared. . Guidelines for surviving a real, Arabic marketplace: . Hit the first merchant that greets you as hard as you can. Hopefully, you can bring him to his knees. Should another merchant greet you, repeat the process until no one speaks to you. | Young boys who speak Arabic and English linger about to sell their services. They will rob you blind. Hire one. The alternative is not pretty. | Remember that both “no” and “yes” mean, “yes” in Arabic. There is no word for “no” that Arabs understand in any language, so your best bet it to resort to physical violence. | Carry your wallet in your hand and keep a firm grip on it. Wear clothing with as few pockets as possible. Vendors will put jewelry into your pockets and demand money from you later. | Remember that no matter how low you barter the price, you are still being robbed. | No matter what you do, you have been robbed. | I followed the standard military directions to the market, “Down that aways a bit, can’t miss it;” and I almost passed by this odd series of hovels, the walls of which were decked like patchwork with blankets and clothes. If a young lad had not attached himself to me, I would not have recognized the place for what it was. . Stepping low through the doorway, you step through a portal into another dimension of another universe. A thousand merchants with their wares attempt to rob you simultaneously. I have nightmares about this place. I spent $50, and I’m ncunot even sure what I bought. The little boy assured me that it was quality. So, I have an unquantifiable amount of quality somewhere on my person. That’s reassuring. . Finally, I ate lunch on the bank of the river that passes through Babylon. Someone, somewhere in the military has taste, for they built the chow hall in the best possible place. Quite a day. . I’m sure there are a hundred other details that I’ve forgotten, but then, I haven’t really slept in some time. .",
            "url": "https://luddites.me/l%C3%AFf/g%C3%B6d/2004/06/23/baal-is-dead-i-killed-him.html",
            "relUrl": "/l%C3%AFf/g%C3%B6d/2004/06/23/baal-is-dead-i-killed-him.html",
            "date": " • Jun 23, 2004"
        }
        
    
  
    
        ,"post122": {
            "title": "Area Man Blows Second Chance at Life, Hopes for Third",
            "content": "Area man, Donald Thisbit, appeared shaken Wednesday afternoon after his close encounter with death. “I feel like I’ve been given a second chance at life,” Thisbit told reporters. “I mean, if my friends hadn’t pointed out the cholesterol content of that Burger King Whopper (tm) to me, I might not be here right now. I was moments away from biting into certain death, when heaven smiled upon me. I know now that I have to give back some of what’s been given to me.” . Thisbit’s wife expressed concern; however, as days passed and Donald exhibited no behavioral changes. “He just lays on the couch and watches ‘Japan-an-amation’, mumbling about designing softer couches and bigger bags of potato chips–all for the good of mankind, he says. In fact, I think he’s gained about 10 pounds since his little “close encounter” with death.” . Thisbit defended his choices since the near-accident, suggesting that he was mentally harnessing his energies to do something big, something really big for mankind. “It’s a difficult change to go through, from being a chartered accountant one minute to a death-defying miracle-man the next. It may take me awhile to adjust to my new responsibilities.” . Thisbit did confess that he was finding it difficult to focus on his new tasks, “People just don’t understand. They expect you to pick up and carry on the way you did before. But you can’t. Cleaning dishes, going to work, waking up before noon–these are things for the man without a global mission.” Thisbit’s wife commented, “If he needs inspiration, I can give him another close encounter with death that he won’t walk away from.” . --Sun Times .",
            "url": "https://luddites.me/news/donald%20thisbit/2004/06/03/area-man-blows-second-chance-at-life-hopes-for-third.html",
            "relUrl": "/news/donald%20thisbit/2004/06/03/area-man-blows-second-chance-at-life-hopes-for-third.html",
            "date": " • Jun 3, 2004"
        }
        
    
  
    
        ,"post123": {
            "title": "Public Concern Rises as Treatment of Prisoners Declines",
            "content": "Despite increased attention and criticism from the Press and the United Nations, conditions are worsening for Iraqi detainees. Sources on the ground have indicated that conditions vary from camp to camp; and, while most U.S. military forces fully comply with Geneva Convention regulations and the Law of Land Warfare, certain groups continue to ignore the policies and regulations of the U.S. government. Camp Duke, in particular, has seen a dramatic increase in the number of complaints from detainees. . An overhead view of the camp reveals with startling clarity the dark underbelly of the military. Crude tents, supplied with air conditioning, shower trailers and toilets sit surrounded by menacing concertina wire and tireless military police guards. Detainees must sometimes travel over 15 feet through the brutal Iraqi heat to use the supplied latrines, but the brutality does not end there. . POW Mahmoud Al Modesto Al Shakir Al Fonzo offered his tragic story to reporters early this morning. Through tears and repeated breaks for cigarettes, Mahmoud revealed the gruesome details; “Praise Allah,” he began, “for this will only strengthen the will of the resistance, and soon the American infidels will die like pigs.” Mahmoud was well dressed, freshly shaved and shivering as he spoke, “You must understand the horror, the terror. They forced me to do things, terrible things. Unspeakable things. The first day I was here, they made me shower.” He paused to pull his robe down over his right arm, “Do you see this arm? I had not bathed this arm since I was five years old when I accidentally fell in a swimming pool. Allah blessed my unwashed body, and now it’s broken.” The showering lasted weeks, according to Mahmoud. “Every day, they forced me into the trailer. At first, I tried to maintain some dignity. I didn’t touch the soap or shampoo; but the American bastards wouldn’t even allow me spiritual right to bathe only in the grace of Allah.” . SPC Donald Thisbit offered his unique perspective on the continuing abuse. “As an interrogator, I knew I needed to up the ante if I wanted to get results. If I get a tough cookie, some Muqtada militia member that wants to play games, I go straight for the toothpaste. After a few consecutive brushings, I’ll pull out the floss. I once broke a man in three and a half minutes, a Camp record.” SPC Thisbit is not alone in his approach to interrogation; others take his techniques and add their own sadistic variations, like the mandatory use of toilet paper, manicures, pedicures, weekly laundry runs and other tactics. “It’s about pushing them into that zone of weakness, which forces them to confront their inner demons. We assert our positive control, and they start spilling the names, phone numbers and addresses. And, to be honest, I like the feeling of power,” Thisbit told reporters. . Once a modest detention facility filled with quiet prisoners, the prison at Camp Duke has become a veritable concentration camp, filled with grown men, crying like babies as soldiers trim their fingernails and wash behind their ears. The sound of wailing can be heard over the roar of the helicopter rotors, which signal the arrival of more detainees. Camp authorities had no comment on their policies, though the soldiers directly involved in the holocaust-like activities often exhibited pride and zeal for their work. . –Los Angeles Times .",
            "url": "https://luddites.me/baghdad/news/donald%20thisbit/2004/05/28/public-concern-rises-as-treatment-of-prisoners-declines.html",
            "relUrl": "/baghdad/news/donald%20thisbit/2004/05/28/public-concern-rises-as-treatment-of-prisoners-declines.html",
            "date": " • May 28, 2004"
        }
        
    
  
    
        ,"post124": {
            "title": "Local News",
            "content": "HEADLINES: Mullis Sightings in Hong-Kong Continue (page 7) . HEADLINES: Canadian Mounties Make Progress in Securing Baghdad (page 9) . Canadian officials announced early this morning that the first mission of their recent deployed Mounties was a complete success. Arnold Phlankaster told Press this morning, “Our Mounties arrived, secured their objective, and are now in positive control of Baghdad proper.” Surprisingly, with no casualties on either side… . HEADLINES: Area Man Declares World Peace (page 1) . ENTERTAINMENT: Die Hard–With a Mullis . COVER STORY: Army Introduces Revolutionary “Train-As-We-Fight” Program . Unveiled during a recent raid conducted by 2ACR troops in the An Najaf area of Iraq, Regimental Commander Harold Zimms announced, “Prior to this event, we have trained as we fight; but henceforth, we will train AS we fight.” SPC Donald Thisbit commented, “It sounded a little complicated at first, but after the first few minutes it becomes second nature. During last night’s raid, I completed two correspondance courses and my yearly Equal Opportunity training. To top it off, we captured a key Sadr lieutenant.” Zimms revealed a complex program to Press members detailing a variety of options for soldiers, including advanced computer-based training, basic soldier training, benefits and legal advice, as well as numerous other courses. “We must maximize our time on the ground. We should not only kill the enemy but edify our soldiers’ minds as we do it.” . SGT Rudolph Humphrey told a different story; however, as he described his experience in last night’s raid. “Yeah, they say you get to choose; but I got stuck with Trigonometry during the heat of the battle. Between solving for “x” and trying to hog tie our captive, I forgot to take the absolute value of “y”…and let’s just say I don’t think the results are entirely my fault. I’d like a retest on our next raid, but I just know they’ll give me ancient Chinese history instead.” . --Associated Press .",
            "url": "https://luddites.me/baghdad/news/donald%20thisbit/2004/05/15/local-news.html",
            "relUrl": "/baghdad/news/donald%20thisbit/2004/05/15/local-news.html",
            "date": " • May 15, 2004"
        }
        
    
  
    
        ,"post125": {
            "title": "Local News",
            "content": "HEADLINES (Politics) . Bush pledges to change the way things is. (Page 3) . “We have a duty to reform. In fact, I promise to reform the process of reform. More than that, if re-elected, I promise to change the way things were happening. Furthermore…” . HEADLINES (Science) . BREAKING: Chicken confesses, “I came first.” (Page 7) . HEADLINES (Law) . BREAKING: Egg sues chicken for slander. (Page 9) . COVER STORY . Canadian Mounties Affirm: “We Always Get Our Enemy (AKA Those Who Have Been Liberated).” . In response to the rising tolls on American soldiers, Canada stepped forward this morning to pledge support for the war effort. State spokesman, Donald Thisbit announced to the Press, “We are committed to providing support for the liberation of Iraq. While we have no real army or assets to send, we have organized over 1,000 Canadian Mounties to send into the heat of battle.” While Thisbit declined to reveal the specifics of the operation, he did suggest that the Mounties would have a unique advantage against Improvised Explosive Devices. . Career Mountie, Harold Zimm told Press members, “Once the little vermin see the might and glory of the Canadian empire, riding across the rolling plains, through the trees and across the mountain tops in pursuit of victory, they’ll crumble.” After being told that Iraq was mostly desert wasteland, void of trees and mountains, Zimm continued, “We’ll fill up the dirty glass of Justice from the Udders of Victory and serve it warm.” .",
            "url": "https://luddites.me/baghdad/news/donald%20thisbit/2004/05/09/local-news.html",
            "relUrl": "/baghdad/news/donald%20thisbit/2004/05/09/local-news.html",
            "date": " • May 9, 2004"
        }
        
    
  
    
        ,"post126": {
            "title": "Yes!",
            "content": "Friends, . In one sense, I have been training for today my entire Army career. Recline in your comfortable chairs and allow Uncle Fro to weave a little tale for your evening pleasure: Imagine an empty parking lot. You are calm and relaxed; the sound of the wind is soothing as you wait in your vehicle of choice. Looking about, you realize that the lot is not paved but is dirt and that it stretches as far as the eye can see. You’re waiting for something to happen–you’re not sure what or when this ‘something’ should occur or even what to do once you finally apprehend this thing; but you know that your inactivity is a direct result of the absence of ‘it’ happening. . You wait. After an acceptable amount of time has passed, you decide that this thing will have to happen later; and you pack up your things and move along. . This was my day. From the fragments that I have been able to piece together (and here I have truly excelled in all things Army), we were due today to set a course south and that our best laid plans killed a few mice and not a lot of men seemed to know anything about it. I do not know when we next plan to attempt our great push south, but I know that if and when we do succeed, I will have no access to the Internet or any of the other communication mediums I have come to enjoy every once in awhile these last few weeks. And, given that I am on the world’s slowest connection, I do not have time to respond to the many emails that I have received; and, hoping to break with convention and dive into necessity, will here attempt to say everything all at once. So, from this point on, you may feel free to scan for your names and read the appropriate message. . +Jonathan Froehlich: Keep kicking ass and say hello to that fiance of yours. Whatever you do, don’t get deployed. Iraq makes beasts of men. . +Kirk Habel: Want a car? It’s not much, but The Indignant Barney has fared me well, and I’d like to leave ‘er in good hands. I figure you could use one as a wedding present or such. Let me know. We’ll do Army paperwork together. It’ll be fun and tedious and ridiculously complicated. . Mom and Dad: Stay safe. New York is a war zone. Temperatures are rising, make sure you drink plenty of water. Love you guys. . +Tim Farrar: Don’t get deployed. Iraq makes beasts of men. Keep a beer cold for me, man. And check out this tv show, “Firefly”–It’s brilliant. . +David Freeman: I had a dream that you got back together with…What’s the scoop? Send me some obscure music. . Daniel Zeke Balan: Don’t get deployed. Say hello to the wife. Here’s my belated 2003 top 5 lists:     Movies:         1. Lost in Translation,         2. Once Upon a Time in the West,         3. Ishtar,         4. Two Towers (Extended Version),         5. 21 Grams.     Music:         1. Hot Water Music (can’t remember album name),         2. Modest Mouse, Moon and Antarctica (it’s been on the list for years now.. can’t take it off),         3. Rolling Stones – Exile on Main Street,         4. Blind Melon – Blind Melon,         5. The Shins – Chutes Too Narrow.      Books:         1. Ecclesiastes (of the Old Testament),         2. Life of Pi (because I absolutely hated it, and 5 people have sent me copies of it since I deployed),         3. My Life and Hard Times – James Thurber,         4. The Complete Idiot’s Guide to Learning Russian – Me,         5. The Republic – Plato (because I hated it more than the Life of Pi). . +Craig Amundson: How’s the rebel rousing going? I’ve lost your address–the few letters I sent you bounced back. I should still get mail, so send me another letter and I’ll reply with as much promptness as I can muster. . +Cranberry Thunderfunk: Miss you, man. Enjoy your summer vacation. Soon enough, they disappear; and all the king’s horses and men can’t fit them into their training calendars and you’ll end up in a parking lot in the middle of the desert. Don’t join the Army. It makes beasts of men. . Carson Chittom: What are you up to these days? …that’s all I’ve got. . +Jay Loftin: What’s the next scheme? Are you finally headed out to teach English to the needy Russians or slavs of this world? Perhaps running for president of Russia? Do tell. . Lisa: Are you married yet? If so, awesome. Tell me all. If not, tell me all. Still in Oxford? What are your plans? What are his plans? . Mollie: Has he proposed yet? If not, just give me an address–I’ll make a few phone calls. . Vero: How’s the research coming? Has summer arrived yet? Is Germany lush and beautiful? Have the wine fests begun? Say hello to Lulu for me. I miss her so. . Donovan: How’s Ohio? Did the job pan out? You sounded happy the last time we talked, I hope that things are still working out for you. Any more plans on extending that family of yours? Boys, girls, both? . Stephan Boutwell : What’s the scoop, brother? I’m still planning the MOART (Mother of All Road Trips) when I head to San Antonio. We will drink beer and grill steaks together. . And for everyone else whom I’ve abused by not mentioning, I apologize for not being able to think of anything to say. I will try to fix this gross shortcoming as soon as possible. Thank you all for your letters and packages and support. . My address remains the same: D CO 501 MI Bn UNit 90324 APO, AE 09324-3024 . Much love, CF . P.S. The Complete Idiot’s Guide to Learning Russian is now available at every major bookstore. I encourage mass purchasing. .",
            "url": "https://luddites.me/letters/notes/l%C3%AFf/farewell/2004/04/25/yes.html",
            "relUrl": "/letters/notes/l%C3%AFf/farewell/2004/04/25/yes.html",
            "date": " • Apr 25, 2004"
        }
        
    
  
    
        ,"post127": {
            "title": "Я не говорю по-испански",
            "content": "Friends of Athens, . Today, mankind has aspired toward new, startling and grandiose achievements. My work–the sweat of my brow, the fruit of my labor–is available for preorder on Amazon.com. But when, you ask, will I need to occupy myself in the study of Russian? I recommend that you remain at all times vigilant–the threat of communism lurks behind every corner, growing like a mold in the refrigerator-like minds of every desperate anarchist. Will you suffer your children the fate of living in a despotic nation? I dare say, no! Learn Russian. Arm yourselves! Preorder now! .",
            "url": "https://luddites.me/%D1%80%D0%BE%D1%81%D1%81%D0%B8%D1%8F/l%C3%AFf/2003/12/03/%D1%8F-%D0%BD%D0%B5-%D0%B3%D0%BE%D0%B2%D0%BE%D1%80%D1%8E-%D0%BF%D0%BE-%D0%B8%D1%81%D0%BF%D0%B0%D0%BD%D1%81%D0%BA%D0%B8.html",
            "relUrl": "/%D1%80%D0%BE%D1%81%D1%81%D0%B8%D1%8F/l%C3%AFf/2003/12/03/%D1%8F-%D0%BD%D0%B5-%D0%B3%D0%BE%D0%B2%D0%BE%D1%80%D1%8E-%D0%BF%D0%BE-%D0%B8%D1%81%D0%BF%D0%B0%D0%BD%D1%81%D0%BA%D0%B8.html",
            "date": " • Dec 3, 2003"
        }
        
    
  
    
        ,"post128": {
            "title": "Wishing Wells Away",
            "content": "Comrades, . I have remained static, while the location around me has changed. Gone are the steel-reinforced walls of the Ministry of Interior. In their stead, I have the comfort of higher sort. Apparently, a pack of wild dogs had claimed my new home some months before we arrived. As such, evil has taken on a new face; though rabies has seldom looked cuter. Beucephalus, a heroic if not starved beast, likes to wake me every morning with his affectionate howls and his disease-infested drool. He and I share a strong disliking for the rats that have begun to wage war with the dogs for rule over my new kingdom. But all is not lost as it seldom is. . Yesterday, I saw the most jaw-droppingly, heart-achingly, hit-in-the-stomach-with-a-piece-of-molten-lava breathtakingly beautiful sunrise. The clouds broke halfway across the horizon as the half-crescent of the sun climbed above the steps of wispy white, and bounced sunbeams like pebbles across the pond of the heavens. This was the sort of sunrise that you cannot escape. It would find you in your bed, kicking and screaming and bouncing upon your chest like a child at first, until you had lifted your eyes to look at it, when at once it would have transformed into something infinitely more glorious than you would have been ready and or willing to accept. Going back to sleep, you would have felt that matter of supreme importance waited for you to explore it, if only you could remember the proper time and place to greet it. This was the sort of sunrise that starts wars for the love of a woman. The sort of splendor that makes small men giants, and giants mountains, and mountains obstacles to the view of the sun and therefore subject to the wrath of small men. . I would have taken a picture, but I’m lazy. . At any rate, I check my email now and again these days. I should take a picture of my building, but I doubt that I ever shall. I’ve become selfish, prone to hoarding memories these days. Fortunately, I write less poetry (or none at all) than I used to. Speaking of the esophagus, I have written a little story, hardly more than a page, which I greatly enjoyed writing. In fact, it’s difficult to articulate, but I have felt quite so singularly alive–like really alive, conscious of the mindset of your toenails alive–in quite a long time. So I’ve decided to share my little bit of joy with you all, and hope that all will enjoy it. . Until our paths cross again, I remain, . Your friend and expatriate. .",
            "url": "https://luddites.me/l%C3%AFf/2003/11/05/wishing-wells-away.html",
            "relUrl": "/l%C3%AFf/2003/11/05/wishing-wells-away.html",
            "date": " • Nov 5, 2003"
        }
        
    
  
    
        ,"post129": {
            "title": "The Swift Hand of The Enemy (AKA Those Who Have Been Liberated)",
            "content": "Once more, I turn to your patient and receptive arms for comfort and consolation. I have endured hard times at the hand of my enemy, but I shill yet prevail. The past months have been rife with conflict, challenges, suffering and even–dare I say, triumphs. Adversity knows no limits and fears no shame. My current home of residence, the Ministry of the Interior, is to be turned over to the Iraqi people sometime this month. Here, I have endured running water and fairly consistent power. In the long nights that I have here spent, I have felt the cruel whip of addiction as I watched entire seasons of 24 on glorious DVD–without the luxury of surround sound. The forces of evil have seen to it that I eat more tender vitals than are my right. . I have often despaired during these times; but now, no more. We must move. For the next few days, we are shutting down mission and packing up the 5-tons to relocate to a new home elsewhere in Baghdad. Suffering there, I’m certain, will increase. Unfortunately, my long-time friends “Abu Running Water” and “Sheikh Electricity” will not be waiting for me with open arms; but I have met these demons before and prevailed. My only real cause for concern is the lack of Internet connectivity, which I have enjoyed here, which has made me weak and sluggish, dulled my senses and thwarted the fight for freedom. This time, unlike other times in the past, when I felt a certain distrust of my Enemy (aka those who have been liberated) Internet vendors dedication to capitalistic aims, I am truly in the dark. Perhaps no computer lab awaits me. Perhaps I will once more rely on the support that your many kind letters have given me. Perhaps this dark abyss knows no bottom. . In recent events, a few items leap to mind that may be of interest to those of you, who keep track of some of my life’s lesser details. My brother, Jonathan, is now engaged to his girlfriend, Rachel. I encourage any who are willing to give this stud a hard time, extend congratulations and rebuke equally as he prepares to embark into that final frontier. I think a quote from 1 Samuel might be appropriate here, “And Jonathan kicks ass.” Amen. . I am now a landowner. I purchased 55 acres of land in Frenchville, Maine. I trust the significance and/or hilarity of this event should be self-evident. . I wish I had more time to write more personal emails, but I always seem to choose the worst moments to do so. As time is limited: Balan, I hope the wedding goes well–send me some pictures; I want to see this Margo of yours. Tim and Dave–I hope your Radiohead concert ended in a fiery inferno, from which you narrowly escaped with your lives. Or, at the very least, send me a poster or t-shirt or something. Dylan, . Habel, enjoy Spain–I envy you. . I’m sure there’s more to be said, but I cannot think of it at the moment. I really do miss you all. I look forward to sitting back over a pint of Guinness and catching up. . If anyone wants to launch a small business with me in early 2006, let me know. Plans/details/inspiration are available upon request. .",
            "url": "https://luddites.me/baghdad/l%C3%AFf/2003/10/04/the-swift-hand-of-the-enemy-aka-those-who-have-been-liberated.html",
            "relUrl": "/baghdad/l%C3%AFf/2003/10/04/the-swift-hand-of-the-enemy-aka-those-who-have-been-liberated.html",
            "date": " • Oct 4, 2003"
        }
        
    
  
    
        ,"post130": {
            "title": "The Enemy (AKA Those Who Have Been Liberated) Revisited",
            "content": "Lest you, in your idle wonderings throughout the day, chance upon the grave and fundamentally flawed notion that we soldiers on the front line experience any moments of levity or relaxation from the near-insurmountable challenges of life in a combat zone, let me begin by relating the story of my journey to send this very email. As 3rd ID abandoned us 1st AD folks, leaving us to the wolves and would-be wolves, the not-quite-yet wolves, and the wolves-with-better-things-to-do-than-wolfing wolves, the enemy (aka those who had been liberated) again bared his teeth, showing his continued resistance to the march of democracy, revealing his hidden alliances to the former regime, practically admitting to the private production of chemical weapons with the intent of killing sweet, innocent American babies, by suggesting that he, the enemy (aka those who had been liberated) himself, would shut down this fine computer lab due to “decreased demand.” Why, these fellows haven’t caught on to the whole point of capitalism at all. If Smith tells us anything, it’s that it doesn’t matter whether demand be real or perceived–create it if you must, but never–EVER claim that it doesn’t exist! People will buy because you tell them they must. This is the moral foundation of our great nation. This is why we wage wars. This is why the Enemy (aka those who have been liberated) lost, and the Enemy (aka those who have been liberated) must change! . I explained all of this to him, of course, through my trusty government sponsored interpreter (who is also, coincidentally, sponsored by Nike); but the Enemy (aka those who had been liberated) seemed more inclined to dismantle this fine lab than to give me cheap and immediate access to my beloved internet. In the end, I prevailed; though I must admit, I think the corporate sponsorship swayed the battle for me. Did you, for example, know that Pepsi is now sponsoring a full 45f all combat raids in New Baghdad? Our HMMVWWVMSMWNSXMMVS look very sheik with a cool, clean, morally satisfying Pepsi logo pasted across the side. . But I digress. To the internet I came. I typed for you a very brilliant, very emotionally evocative, very wise and sober email about my condition, the condition of the enemy (aka those who had been liberated)  and the profound relationship between a good, hot bath (where the water is just the right temperature, and you get to soak for a solid 10 minutes before the first person starts banging on the door, screaming, “When are you going to be done in there, you lazy, incompetent buffoon? 27 people are waiting outside…”) and a cup of coffee (when you’ve just had a large, satisfying breakfast, and the coffee is oh-so-hot and the sun is just starting to rise, and you just lit the bowl of your pipe to watch blue wisps of smoke unfurl into the morning air, and you heave a sigh of relaxation and peace before the first person starts to shout, “Hey, why aren’t you working? Didn’t you see this stack of reports that need to be entered? Who said you could smoke in here?” before the resounding thud of a brick smashes their big toe), when the power went out. The power has gone out a number of times all day, for more reasons than I care to here explain; but I lost that bold and exciting email, and no one shall ever have the opportunity to see it. . But. And when I say, “but,” here, of course I mean for you to brace yourselves for a shocking revelation. You see, I prevailed against the enemy (aka those who had been liberated) once more. The internet is mine. The comforting roar of a generator several feet from my right ear drum reassures me that the power will not prevent the successful completion of this email. All is well. I am ready. . Life is much the same as it has been. General-so-and-so forbade the consumption of Iraqi meat. The enemy (aka those who have been liberated) has taken to using chemical warfare, by proudly displaying his “chicken and rice”—the chicken so sweet and succulent, beckoning my brain to comply with the input from my nostrils. But alas! No. . The power has been on and off with no predictability or consistency, as has the water. The temperatures…shall not be spoken of. My ripped, Army abs are covered entirely in a particularly unpleasant heat rash. That’s right, you eligible, single females out there—I said it: ripped, Army abs. Feel free to write letters of adoration. I am impartial. . Soon, you may all add to my title, “Sgt.” Indeed, you heard me correctly. I am pursuing promotion, advancing in the ranks. You may all feel free to address me as “Grand Poobah, Sgt. Froehlich,” “Sgt. Froehlich, Grand Poobah” or any variation that seems to suit you. I will also (naturally) now be accepting burnt offerings, blood sacrifices, and lavish gifts. I really cannot stress the lavish gifts part enough. I mean, when all is said and done, who cares about spilt ram’s blood, when compared to a really nice Lazy boy, or a full body massage, or just a really good steak. Seriously. Promotion is still some months off, but you can feel free to emotionally prepare yourselves for the change. . As my access to the internet may once again be cut off (and very soon), I shall have to revert entirely to snail mail correspondence. . I had planned to write much more, but I realize that I’ve already written too much. Accounts of all my many adventures must wait for another day. I miss you all. I miss home. I miss everything that can be associated with America. . Feel free to write me, I will respond to anyone who cares to put ink to paper. That’s all I’ve got. The enemy (aka those who have been liberated) is kicking me out of my beloved computer lab. Thank you, and goodnight. .",
            "url": "https://luddites.me/baghdad/l%C3%AFf/2003/08/16/the-enemy-aka-those-who-have-been-liberated-revisited.html",
            "relUrl": "/baghdad/l%C3%AFf/2003/08/16/the-enemy-aka-those-who-have-been-liberated-revisited.html",
            "date": " • Aug 16, 2003"
        }
        
    
  
    
        ,"post131": {
            "title": "War Against the Enemy (AKA Those Who Have Been Liberated)",
            "content": "The time will come, dear friends, when I shall be forced to recount the long stories of my youth spent in the desert, wandering through the wasteland, journeying toward purpose and mission and Baghdad. And lo! did I there arrive, observe, and subjugate. But in the days and years to come, from the comfort of an easy chair, I may allow myself to recount a few words about my experiences, some of which are still in the proverbial oven, and puffing a bit on one of Tennessee’s finer pipe-tobaccos, I will spare a few, meaningful phrases about the hardships, the difficult victories, speaking at no long length of pain and loss. . “Imagine,” I will begin, “that you’ve stopped to stare the Enemy (aka those who have been liberated) square in the face. You can sense the evil in him, for he wants $14 for a case of cold cokes, and you only have $12. What do you do? How do you wrestle with these kinds of despair?” . “Once,” I’ll say, “the Enemy (aka those who have been liberated) almost prevented me escape with my life. I ordered a pizza from him, with all the toppings. ‘Supreme,’ I think we used to say? But the Enemy (aka those who have been liberated) came back with only half the toppings, 45 minutes late. How can you conquer this sort of enemy?” . So you see dear friends, though I have not revealed all–certainly not, for the nation’s security is at stake; but that my trials have not been few. Oh no. The constant sweating, the flies, the venerable roaches, the inscrutable mosquitos, the lingering humidity–let us not cast a scornful eye upon these adversaries; for they are not mere trifles to be laughed at, whilst you recline indoors, drinking expensive coke. . Alas, I will not have email again for some time; though I would, naturally encourage all replies. I am safe; though I would caution you not to rely too heavily upon these false pretenses of security that the media displays–for as you can glean from my descriptions above, we are in combat, quiet and constant against a determined foe. A foe who wants far more than his products are worth. . At any rate, I miss home. I cannot wait to return there again. Stay safe, for danger abounds everywhere. . Humbly yours. .",
            "url": "https://luddites.me/baghdad/l%C3%AFf/2003/07/06/war-against-the-enemy-aka-those-who-have-been-liberated.html",
            "relUrl": "/baghdad/l%C3%AFf/2003/07/06/war-against-the-enemy-aka-those-who-have-been-liberated.html",
            "date": " • Jul 6, 2003"
        }
        
    
  
    
        ,"post132": {
            "title": "Purged By Fire",
            "content": "Friends of family, family of friends, and persons unconnected to either, . You may now pull forth your journals, note pads or stick-it notes and mark up the calendar of life (insomuch as we assume time to be a totally linear description of movement) the day that I, your humble hero–vested by God with the charge of sitting resolutely and waiting indefinitely, without thought for my own safety but only the safety of two courageous trucks–have seen it all. By ‘all,’ of course, I mean ‘most of it.’ . To the point, as I drove recreationally across the endless plains of desert sand this very morning, feeling quite suburban in the comforts of an SUV, complete with airbags and air conditioning and white picket fences, I found myself looking in my rear view mirror to notice that the vehicle following so closely behind me had embraced Frau Gravity in such a way that SUV’s were not meant to embrace. Thus I found myself in the throes of panic, visions of heroism flashing before my eyes as I thrust myself atop the toppled vehicle to open the free doors and pull the occupants to safety. All had gone gloriously in my mind, replete with a score to do Mr. Williams proud, until the grim reality of my hand, resting on the exhaust pipe for oh-so-too-long of a brief second in passing woke my body to the joy of second degree burns. . If only I were of higher rank and authority, I might dictate these words to the rapt ears of an eager pupil; but, alas, I must myself painfully peck away at the keyboard until my burden of relating this adventure is complete. One might think, momentarily, that the sheer pain of typing would keep my wordiness in check, but alas–such is not the case. . My right hand has found itself the unwelcome home of a bitter blister, the size and scope of which we shall not here discuss. Now, my poor team members have the added weight of an unserviceable soldier as well as our aforementioned dead trucks. Fortunately, hope is in sight. While I remain in Kuwait, my comrades paving the way to freedom ahead of me in Baghdad, news has arrived that we (a friend of mine and I) may leave as early as Saturday for that fated land. . I don’t actually know what day it is today, but the sound of ‘Saturday’ suggests a close proximity to me; it’s reassuring and comforting, not like the bitter days of the week, like ‘Thursday’ or ‘Monday.’ At any rate, the doctor expects that my hand should heal sufficiently enough to use more than my forefinger in a few days, at which time I expect my verbosity to reach unprecedented levels, as my days in the tent have afforded me little other activity than brandying words about with my tent-mates, the rats and lizards, who find the accommodations considerably more desirable than I ever would (as an objective surveyor). . I would like, of course, to hear from you all; my poor laptop (which housed all of my addresses and phone numbers and whatnot) through which I hoped to send letters abroad has suffered an unholy fate and now waits in the dark recesses of some military mail room to find its way to a doctor of its kind. As such, all that I ask for are addresses for, to use the local vernacular, ‘snail-mail’ correspondence. Time is something which I have in abundance–though content, as I’m sure you have already surmised, is lacking. . That is all; I have finished. I shall report my victories and failures as they arise, given what opportunity I have. . Take care and goodnight. .",
            "url": "https://luddites.me/army/letter/2003/05/28/purged-by-fire.html",
            "relUrl": "/army/letter/2003/05/28/purged-by-fire.html",
            "date": " • May 28, 2003"
        }
        
    
  
    
        ,"post133": {
            "title": "One Last Hoorah",
            "content": "Friends of the U.S. Armed Forces, . This may be the last email that I send for some time, and by ‘some time,’ I of course mean, I have no idea when my fingers will touch a keyboard again. The last of my company is convoying out, taking with them this fine machine, whose virtues have allowed me to stay, shall we say, “in touch” with the outside world. . All I see is desert, but I wish I could say “dead people” there, instead. Alas, no tried metaphors for me. If any of you are curious as toward the fastest way to completely destroy a diesel engine on a HMWVV (better add a few more M’s and V’s in there), I would recommend the following, easy to perform, one-step procedure. Put any mixture of soap and water into the gas tank, preferably while the truck is running. Now, I, of course, was not so emboldened to try this daring maneuver; however, some of the Army’s finest mechanics decided to live life to the fullest and take care of that challenge for me. The end result, you ask? Two blissfully dead trucks. My trucks. You should see them. They sit there so peacefully in the sun, not a care in the world, oblivious to the twists that Fate has thrown them. . So instead of heading North with my comrades in arms to rush into certain danger in a country full of people who increasingly hate Americans, despite our valiant efforts to convince them that water really isn’t necessary to survive in the desert; I will be guarding my tent, until the Army sees fit to send a TET for myself and my vehicles. At that time, I will be whisked away to a land of milk and honey, or at least as close to the land of milk and honey as I have ever been. . Two keys to staying alive in the desert. One, don’t go there. Two, if you do, find air conditioning until you can get out. . I’ve had a good run of it so far, surviving sand storms, general stupidity, water rationing, camel burgers, and those nasty little black flies that burrow into your skin and try to build condominiums there. I feel almost complete. But then, I haven’t been shot at yet, so I have that waiting for me. . Habel, wish you all the luck on the road–hope that the not-replacing-3rd ID non-mission mission works out well for you. Balan, I should be back in time for that wedding. Jonathan, hope that Residence Inn doesn’t cramp your style. Craig, thinking about you–got your books and ready to chat. And for everyone else whom I don’t have time to write personal messages to, take care–especially Lt. Farrar, who I hear is suffering down at the S-1 shop at OBC. . Much love .",
            "url": "https://luddites.me/army/l%C3%AFf/2003/05/16/one-last-hoorah.html",
            "relUrl": "/army/l%C3%AFf/2003/05/16/one-last-hoorah.html",
            "date": " • May 16, 2003"
        }
        
    
  
    
        ,"post134": {
            "title": "In Title",
            "content": "It’s easy to forget the important things while you drink. As you sit on the edge of the balcony, caressing the end of a cigarette; those ideas that suddenly seem important come into focus; they become clear and distinct, and then, once the screaming above has quieted, everything falls into the tiny strands of incoherence. You sit in front of the writing tablet some hours later, trying to recall the specific phrase or turn of words, but they wander by the wayside, swaggering in their own drunk manner, and you can’t confront them, much as you try. The words are lost; they have gone their separate ways. .",
            "url": "https://luddites.me/poetry/2002/06/19/in-title.html",
            "relUrl": "/poetry/2002/06/19/in-title.html",
            "date": " • Jun 19, 2002"
        }
        
    
  
    
        ,"post135": {
            "title": "adjustments",
            "content": "When the world has begun to spin and the lines of resolution blur into the horizon of snow - the picture will not be adjusted; and it sometimes becomes necessary to know     more than your place - but a reason for staying put. .",
            "url": "https://luddites.me/poetry/spinning/2000/05/02/adjustments.html",
            "relUrl": "/poetry/spinning/2000/05/02/adjustments.html",
            "date": " • May 2, 2000"
        }
        
    
  
    
        ,"post136": {
            "title": "blastphemy",
            "content": "Of all the emptiness and disdain -     for which I have no explanation     but the mass consumption of human spirit -     the lengths to which man (myself, foremost of the cast)         will to which         and find his own destruction;     the manner in which we cast ourselves the     fool and the lonely lot of living in open         graves - . I have found nothing to prove myself     holy, nor in that search anything to     make the days be anything but a         suffering laid upon the altar for a         God who sees me as I truly am. . Pity nihilism does not offer me the fortitude of blasphemy. .",
            "url": "https://luddites.me/blastphemy/poetry/2000/05/01/blastphemy.html",
            "relUrl": "/blastphemy/poetry/2000/05/01/blastphemy.html",
            "date": " • May 1, 2000"
        }
        
    
  
    
        ,"post137": {
            "title": "on bubbles",
            "content": "How would one justify the extent of the madness -     what is the weight, in grams, of the lie for which we     built the house . And once the house was built and mortar dry and     tapestries and paintings clothed the walls     to end the hollow echoing through empty rooms . And when children emerged from tiny rooms to play     and run and roll down stairs and scrape the walls     and stain the rugs and to let goldfish die . And when dinner parties lasted late into the evening     followed by coffee and cigars, and the furniture     had to be replaced for the sake of social status,     and the guest rooms torn down to make the library     of books never opened past their inscriptions on the third page     and the chipped china of wedding presents thrown out     rather than given to charity . And when the children were no longer that but something else     and rather like a mirror which does not fade in the absence     of light, and when they themselves invariably vanished one         day     to be replaced by the hand of the postman full of bills     and blank postcards and the occasional ringing phone . And when retirement leapt out in ambush armed with     reasons and sensibilities too many and too great to     vanquish . And when the thousands of admirers who had once graced     the presence of the house and worn her into something     fashionable suddenly become as mist, and rooms so long     unused and filled with vague memories of once important things     become too much to look at . When the house becomes too much to bear, old and alone,     and the thought of a quiet townhouse with no yards or maids     seems as beautiful or tangible as winter roses . When the time comes to sell and move on: . Does the lie still follow you? Or was it bundled with the mortgage? .",
            "url": "https://luddites.me/poetry/2000/04/27/on-bubbles.html",
            "relUrl": "/poetry/2000/04/27/on-bubbles.html",
            "date": " • Apr 27, 2000"
        }
        
    
  
    
        ,"post138": {
            "title": "time sensitive",
            "content": "WHAT?     is truth. .",
            "url": "https://luddites.me/poetry/2000/04/26/time-sensitive.html",
            "relUrl": "/poetry/2000/04/26/time-sensitive.html",
            "date": " • Apr 26, 2000"
        }
        
    
  
    
        ,"post139": {
            "title": "beneath",
            "content": "At times I wish only that my heart would open inside my mind, that I might cry with new sorrow and weep new tears of salt and mist. But I am hard and stubborn and have only a vague idea of what beauty may or may not be. . Why write and for what humanity? To be a child… To be again loved as a child; to again yearn for the self indulgence indulged a child…     yet more than death waits         for those who wait             for love .",
            "url": "https://luddites.me/poetry/love/2000/04/26/beneath.html",
            "relUrl": "/poetry/love/2000/04/26/beneath.html",
            "date": " • Apr 26, 2000"
        }
        
    
  
    
        ,"post140": {
            "title": "parched",
            "content": "Where ever shall I go to find myself a drink     to match my thirst? I fancy myself a drinker, with a fair grasp of the chords and melodies - and a spirited dancer. . One should grow new eyes each day - and save the old, to constantly remember the world as it was just five minutes prior. .",
            "url": "https://luddites.me/poetry/2000/04/25/parched.html",
            "relUrl": "/poetry/2000/04/25/parched.html",
            "date": " • Apr 25, 2000"
        }
        
    
  
    
        ,"post141": {
            "title": "in the end",
            "content": "In the last days they will say to him     stretching out their hands as if to grab the whole     of the world,         saying, . “Did we not speak of this to you?     You stand alone, and when we turn to leave -     you will die without even a twitch         from the nose of God.     The world moves on, moves on - old man.     No place remains in the halls of memory     for you. The world is quick and swift             to judgement, merciless in her damnation;     where shall you go - all has gone before you     for naught…” . but he will hear no more than a few scattered words of their speech, nor will he pay heed to their presence. . Sitting on his perch on the edge of the world, in the last throne room of the last stronghold where     the earth still ends in a shower of     mist and foam and power into a     dark unknown, watching the fangs of unnamed leviathans     gnawing at the surface of the deep - he will rise up and set sail from the brink,     perhaps allowing himself a glance backward     at a world gone strange, and, catching the last gust of the North Wind, allow the abyss to swallow the tail of that impossible world.     Sail - for a year or a day     and find a place fit to sit and think. .",
            "url": "https://luddites.me/poetry/2000/04/23/in-the-end.html",
            "relUrl": "/poetry/2000/04/23/in-the-end.html",
            "date": " • Apr 23, 2000"
        }
        
    
  
    
        ,"post142": {
            "title": "earnest",
            "content": "How can we propose to fashion for ourselves life or livelihood - an attempt to         order the pieces of a puzzle when we have neither the will nor the         ability to see the portrait for what it might have been rather than what         has been, in so bleak a way, assembled to represent happiness, laughter - . And at what juncture do we cease the self-proclamation of Godhood and         admit to ourselves that we have never once given serious attention to         Truth, but to the rules that define our physical world. . When I die, I wish to breath my own blood as I scream in agony pure and     intense. Slowly, slowly that I may earn the breaths that I took in vain. .",
            "url": "https://luddites.me/poetry/2000/04/22/earnest.html",
            "relUrl": "/poetry/2000/04/22/earnest.html",
            "date": " • Apr 22, 2000"
        }
        
    
  
    
        ,"post143": {
            "title": "defer",
            "content": "I didn’t touch the coffee; rather, watched it steam and felt vaguely the heat of it through; and when I was certain it had become entirely cold and useless to anyone of good taste; I paid my bill and left. .",
            "url": "https://luddites.me/poetry/2000/04/21/defer.html",
            "relUrl": "/poetry/2000/04/21/defer.html",
            "date": " • Apr 21, 2000"
        }
        
    
  
    
        ,"post144": {
            "title": "mistake",
            "content": "of all the days of my my life, I only truly regret a moment in the day I mistook the look of haste on her face for a smile. .",
            "url": "https://luddites.me/poetry/2000/04/20/mistake.html",
            "relUrl": "/poetry/2000/04/20/mistake.html",
            "date": " • Apr 20, 2000"
        }
        
    
  
    
        ,"post145": {
            "title": "linger",
            "content": "If I leave today I have lost nothing but my impatience; if I linger here I gain time to wait, and linger longer. .",
            "url": "https://luddites.me/poetry/leafing/wading/2000/04/18/linger.html",
            "relUrl": "/poetry/leafing/wading/2000/04/18/linger.html",
            "date": " • Apr 18, 2000"
        }
        
    
  
    
        ,"post146": {
            "title": "toes",
            "content": "Of the days that dwell within     the numbness of my toes     and the hours spent in     concentration quiet and intense - . Blankness in some guise has      found me with clamped eyes      and pinched nostrils,      leaning back into the fall     and looking only at the     retreating face of imagination     and hope. . I trust that resolves the issue. .",
            "url": "https://luddites.me/poetry/2000/04/15/toes.html",
            "relUrl": "/poetry/2000/04/15/toes.html",
            "date": " • Apr 15, 2000"
        }
        
    
  
    
        ,"post147": {
            "title": "Muscles",
            "content": "Language’s mildew, the sweet oysters who foam at the mouth, rabid and discontent, violent. Love is leprosy, love is kind. I hear the distant bleating of the mollusks. Angry bourbon, it assaults the drinker, who, sitting in a bar next to a pretty, unintelligent girl whom he asks to leave with him. she agrees, smiling at the bourbon as they leave, arm in arm. Merciful murders, killed before they knew they were evil. Killed while still innocent, mercifully denied the right to sin; they die. sweet mercy. . Drunken oysters go postal. Bottles of bourbon are found next to the dead. The police call them murders of passion. . The drinker calls them frightening. . The victims do not speak. . The oysters are too drunk to comment. .",
            "url": "https://luddites.me/muscle/poetry/1998/08/11/muscles.html",
            "relUrl": "/muscle/poetry/1998/08/11/muscles.html",
            "date": " • Aug 11, 1998"
        }
        
    
  
    
        ,"post148": {
            "title": "Mollie",
            "content": "shake your hair back tuck tufts behind your ear don’t let a smirk escape your lips–that would be enjoyment. closed like shutters, empty and withdrawn like a rabbit in hibernation. you hide another smirk: you are not thinking of the music. why do you play? I close my eyes and feel the intensity of the emotion as the waves of music wash over me. I close my eyes and can still see you. playing. why? pursing your lips, casting awkward glances at the conductor, nodding your head as you move, shifting in your seat, absently drawing on the chords. all there before the darkness of my eyes. I open them, half expecting to see you gone, but you are still there and the chorus continues, accelerating ever upward, spiraling, and you play. . when we talk and we laugh, telling dirty jokes and swapping tragedies– why do I not see this part of you? are you the artist, or am I? I don’t feel like one: these misshapen words all that I can conjure while you produce worlds from your magic pouch. . how odd that it should be you… here, in this place. these pews of wood and stone, the crucifix above you, and I sit at the back, almost not a part of this place; and you do not see me. perhaps you do, now letting your gaze wander about the church, perhaps you spot me. what is that look in your eyes? weariness? anger? discontent? . what is this? now your head is bowed completely, dull melancholy in eyes I cannot see, but you soon begin. . closing my eyes, I am again transported. passion in the music, in the unspoken words erupting forth from the mouth of a great river. . somehow I do not know if this place suits you. you hide yourself well, tucked away like your hair behind your ears. you open your eyes occasionally and let some peer deep into your soul, for a moment, before you blink and the whirlpools drawing me inside you are banished. you strike me as one hiding. . perhaps I would not have come, but I told you that I would, and so I did. I wonder if I shall go to speak with you afterwards, or whether I will slip out the door, unseen. there might be something poetic in it, i’m not sure what. I don’t know why I wouldn’t, but then, why would I? odd. I feel as if I’ve been speaking to you, saying all these things to you these last few moments. but I haven’t. Should I not show you this I’ll have spoken the words and you’ll not have heard them. It’s all a continuum, you know, all of it. . the music builds to a crescendo, mounting and mounting, piling note after note upon a great heap, until it threatens to burst. do you? . I didn’t lock the door. I don’t now know why. I was standing right there, the door in my hand. how easy it would it have been to reach out and flip a switch? perhaps the hand of God prevented me. . perhaps if I had locked the door, you would not have locked your keys inside. then would you have ever known how lucky you had just been? something would have happened that you would never see. . Odd. All of it. But so am I, And you. .",
            "url": "https://luddites.me/cello/poetry/churches/1998/08/11/mollie.html",
            "relUrl": "/cello/poetry/churches/1998/08/11/mollie.html",
            "date": " • Aug 11, 1998"
        }
        
    
  
    
        ,"post149": {
            "title": "Lamplight",
            "content": "The lamplight.. it plays with your mind, dances from its post as it were some god, some shade or creature.. the whir of flies buzz in their dense swarm at the top like a cloud, or plague, or fog. The insects dance with the light; and the light casts scornful glances at the dark street, painting billboards in the distance and benches, the ones that might bear “wet paint” signs in humble scribble on some piece of lost cardboard that would be slightly drenched with rain that might hold that unholy acid, on the side of the street. The lamplight, street lights, they play tricks with your mind. You stand here, for hours on the street corner, your overly made-up lips tugging on a cheap cigarette; your arms wrapped tightly about you as you shiver in the cold. There might be a moon, there might not.. you can never tell with the glow of the light above you.. Light pollution, they call it. But all the same, you can’t see the stars from right here, even without the light, the smog of this city would block them. Sometimes I sit here, hugging the post as if it will hold me back. Sometimes, I just hold the post, feeling the cold distance of the metal as it rests against my body. Sometimes it is comforting, the post is there: it is always cold and always rough to the touch; but it is constant. Sometimes it is terrifying.. as if I am afraid that it will become something that it is not.. that one day it will change and become warm and close, that it might hold me back. And that scares me. . But the light plays tricks on your eyes. You think you might see a vagrant on the horizon, swaggering forward. Perhaps he holds a bottle in his hand, you might be fairly sure that he is drunk and know in the same moment that he will make his way upward as if he were swimming and try to talk to you. You aren’t particularly afraid, but annoyed. Another lost drunk to deal with. But then you blink, and he vanishes. And you realize he was merely a wraith in the darkness, nothing real. And then you’ll turn your eyes downward, sometimes after it has just rained, and there, in the street, will be a puddle where several drops of oil have fallen. And a thousand different colors of red and blue and green in distorted swirls that speak of people’s lives stretched out and twisted and yet strangely beautiful. They wrap about each other as you shift your stance, almost writhing on the street. You can see fear and pain and love and death in the people’s eyes; you can see them looking back at you. Staring up at you. They watch you. But you are not paranoid, for they cannot harm you. And again you blink and they are gone, except for a vague memory still resting like a single page atop a desk of cluttered papers, where you can sometimes distinguish it from the rest, but just barely. And then it is gone, and you’ve lost it. But the light plays tricks. Sometimes they are beautiful.. other times not. But it is still magic. At least to those who see it. . But we stand here, at least I do. Waiting. Watching. Staring into the darkness, never saying much to each other. It would be wrong to speak in these moments, with our thoughts to ourselves we can be someplace else, perhaps with children and a house, in a place where we can respect ourselves and not wake up feeling dirty and shameful. Empty. These moments where we are each saints. These are moments of hope. And the streetlight bears witness to them all. And, like us, says nothing. . Then a car pulls up, the window rolls down and a bit of face protrudes from inside. “How much?” a scruffy voice asks. . “Fifty dollars,” I say. . He looks at me for a moment and says, “Get in.” . And I take one last glance at the streetlight, close my eyes, hold my breath, and step inside his car. .",
            "url": "https://luddites.me/poetry/lamps/highschool/1998/08/11/lamplight.html",
            "relUrl": "/poetry/lamps/highschool/1998/08/11/lamplight.html",
            "date": " • Aug 11, 1998"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I’m a simple man with a simple goal: to finish hiking my desk before the clock runs out. With any luck, I might just make it. .",
          "url": "https://luddites.me/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  
  

  
      ,"page37": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://luddites.me/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

  
  

}