<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://luddites.me/atom.xml" rel="self" type="application/atom+xml" /><link href="https://luddites.me/" rel="alternate" type="text/html" /><updated>2021-11-04T17:23:05-05:00</updated><id>https://luddites.me/atom.xml</id><title type="html">походы на моем столе</title><subtitle>Hiking my desk</subtitle><entry><title type="html">Blogging to the Oldies</title><link href="https://luddites.me/logging/code/tech/2020/10/04/blogging-to-the-oldies.html" rel="alternate" type="text/html" title="Blogging to the Oldies" /><published>2020-10-04T00:00:00-05:00</published><updated>2020-10-04T00:00:00-05:00</updated><id>https://luddites.me/logging/code/tech/2020/10/04/blogging-to-the-oldies</id><content type="html" xml:base="https://luddites.me/logging/code/tech/2020/10/04/blogging-to-the-oldies.html">&lt;h2 id=&quot;reality-meet-opportunity&quot;&gt;Reality, Meet Opportunity&lt;/h2&gt;

&lt;p&gt;For quite a while now, I have wanted to update my blog, do some more writing (both personally and professionally) and generally flex some unused muscles a bit. Fortuna often has sadistic tendencies as some can attest. Consider the recent toppling of the &lt;a href=&quot;https://www.sec.gov/litigation/litreleases/2020/lr24905.htm&quot;&gt;NS8 empire&lt;/a&gt; &lt;a href=&quot;https://www.wsj.com/articles/former-head-of-cyber-fraud-detection-startup-ns8-arrested-on-fraud-charges-11600469207&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://www.pacermonitor.com/public/case/36301258/United_States_Securities_and_Exchange_Commission_v_Rogas_et_al&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://www.forbes.com/sites/davidjeans/2020/09/18/how-a-cyber-fraud-company-ceo-raised-123-million-in-months---and-got-arrested-for-fraud/amp&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://www.reviewjournal.com/business/sec-charges-former-ceo-of-tech-company-with-fraud-2123503/&quot;&gt;4&lt;/a&gt;, &lt;a href=&quot;https://www.justice.gov/usao-sdny/press-release/file/1317641/download&quot;&gt;5&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/pulse/ns8-demonstrates-how-employment-data-can-valuable-richard-stiennon&quot;&gt;6&lt;/a&gt; and a &lt;a href=&quot;https://www.formds.com/issuers/ns8-inc&quot;&gt;great fall of nepotism&lt;/a&gt; with &lt;a href=&quot;https://www.justice.gov/usao/justice-101/preliminary-hearing&quot;&gt;recent developments&lt;/a&gt; and &lt;a href=&quot;https://www.reviewjournal.com/business/laid-off-workers-sue-tech-company-citing-lack-of-advance-notice-2124501/&quot;&gt;former employee actions&lt;/a&gt;. So many links to criminal conspiracy to defraud and so little daylight; regardless, I have had more than a little time to navel gaze in recent weeks.&lt;/p&gt;

&lt;p&gt;I’ve long been frustrated by the available tools for blogging. Some of these goals compete with each other and some are onerous due to costs–I want as much of my platform to be free (both as in beer and as in speech) as possible &lt;em&gt;and&lt;/em&gt; I want as much control over my platform as possible &lt;em&gt;and&lt;/em&gt; I want to have features like commenting and search and analytics &lt;em&gt;and&lt;/em&gt; there can be no ads and the word &lt;em&gt;Jekyll&lt;/em&gt; may not be invoked. I have an old &lt;a href=&quot;https://hiking.luddites.me&quot;&gt;Blogger site&lt;/a&gt;, which I desperately want to retire; and I have a &lt;a href=&quot;https://medium.com/@christopher.r.froehlich&quot;&gt;Medium site&lt;/a&gt; which I am increasingly frustrated with: from the inability to post articles in the past to Mediums idiotic approach to monetization–what was initially cool about medium is no longer interesting to me.&lt;/p&gt;

&lt;p&gt;So I set out to figure out how to create the blog platform you, dear reader, are currently (hopefully) enjoying.&lt;/p&gt;

&lt;h3 id=&quot;goals&quot;&gt;Goals&lt;/h3&gt;

&lt;p&gt;Broadly speaking, I want to be able to meet these objectives:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Easy to add new posts&lt;/li&gt;
  &lt;li&gt;Easy to update existing posts&lt;/li&gt;
  &lt;li&gt;Keep revision history of edits&lt;/li&gt;
  &lt;li&gt;Blog is searchable&lt;/li&gt;
  &lt;li&gt;Commenting in some form is possible, and comments are stored in my control&lt;/li&gt;
  &lt;li&gt;No ads (at least for now)&lt;/li&gt;
  &lt;li&gt;Service is free for me to host my content and free for consumers&lt;/li&gt;
  &lt;li&gt;I can more or less change anything about the blog at whim&lt;/li&gt;
  &lt;li&gt;Fast to manage&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;non-starters&quot;&gt;Non-starters&lt;/h3&gt;

&lt;p&gt;I considered a number of options, and I won’t go too deep into the pros and cons so much as leave breadcrumbs for others to follow (in no particular order):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com&quot;&gt;Medium&lt;/a&gt;: it looks nice, but I have to surrender too much control. It’s not free as in speech or free as in lattes.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blogger.com&quot;&gt;Blogger&lt;/a&gt;: it looks dated. It does most of what I need, but it’s slow to manage and cumbersome to maintain.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ghost.org&quot;&gt;Ghost&lt;/a&gt;: it used to be a nice competitor to Medium, but the target audience for users no longer includes me. It’s free to self-host, but non-trivial to manage.&lt;/li&gt;
  &lt;li&gt;All other self-hosted solutions (Ghost included): while I &lt;em&gt;can&lt;/em&gt; run anything on my local systems, I don’t want to depend on my personal equipment to run my site and I don’t want to have to deal with security (although services like &lt;a href=&quot;https://ngrok.com&quot;&gt;Ngrok&lt;/a&gt; and &lt;a href=&quot;https://pagekite.net/&quot;&gt;Pagekite&lt;/a&gt; are awesome and definitely worth your time).&lt;/li&gt;
  &lt;li&gt;Cloud hosting options are a mixed bag when looking for free. You can get lots of usage out of &lt;a href=&quot;https://azure.com&quot;&gt;Azure&lt;/a&gt; on the initial free options, but eventually you have to pay.&lt;/li&gt;
  &lt;li&gt;WordPress/Drupal/etc. Will never use; will not investigate.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;One “blog” concept that I’ve always liked is by &lt;a href=&quot;https://twitter.com/raganwald&quot;&gt;@raganwald&lt;/a&gt; is his use of &lt;a href=&quot;https://github.com/raganwald/raganwald.github.com/tree/master/_posts&quot;&gt;Github&lt;/a&gt; for organizing content. I have long considered this approach as it checks off a lot of boxes:&lt;/p&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Complete control&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Free as in latkes and free as in peaceful protests&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;It’s git, so it’s all under control&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The perceived negatives I have had in the past seem to be less of an issue these days with the emergence of a few factors (some relatively new, some a bit older):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;: a free static content website based on the content of a branch of your repository. Commonly the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch, which is how this blog is served.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;Github Actions&lt;/a&gt;: Manage your updates to Github Pages automatically&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/features/codespaces&quot;&gt;Github Codespaces&lt;/a&gt;: Everything you need to manage your site, in your browser. This is a very nice to have–you can do this anywhere/anytime already with other tools.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/&quot;&gt;GatsbyJs&lt;/a&gt;: A pretty slick static site generator based on React. Lots of extensions and pluggability.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/utterance/utterances&quot;&gt;Comments&lt;/a&gt;: Using a tool called Utterances, which is just a convenient wrapper around Github Issues–commenting is free and easy and completely under my control.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.algolia.com/&quot;&gt;Search&lt;/a&gt;: This is the only 3rd party piece that I cannot take and move just anywhere, but it’s free as in pancakes for my purposes, so I’ll content with it for now and/or until I need something better.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;getting-there&quot;&gt;Getting There&lt;/h3&gt;

&lt;p&gt;I did some basic soul googling for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blog github pages -jekyll&lt;/code&gt; and quickly found &lt;a href=&quot;https://codesandtags.github.io/blog/creating-my-blog-with-gatsby-and-github-pages&quot;&gt;Creating my blog with Gatsby and Github Pages&lt;/a&gt;, which was more than enough to get me going. I explored a variety of &lt;a href=&quot;https://www.gatsbyjs.com/starters/?v=2&quot;&gt;Gatsby Templates&lt;/a&gt; (once I had decided that Gatsby would meet all my needs) and I picked the &lt;a href=&quot;https://www.gatsbyjs.com/starters/hasura/gatsby-gitbook-starter/&quot;&gt;Gitbook Starter&lt;/a&gt; template as a base. There were a variety of things I needed to change–most notably the logic for generating the sidebar tree, which required comparing the &lt;a href=&quot;https://github.com/hasura/gatsby-gitbook-starter&quot;&gt;template repo&lt;/a&gt; with the &lt;a href=&quot;https://github.com/hasura/learn-graphql/tree/master/tutorials/graphql/intro-graphql/tutorial-site&quot;&gt;demo repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of my time was occupied fixing annoyances–I spent more than a few hours wrestling with the &lt;a href=&quot;https://github.com/tschaub/gh-pages&quot;&gt;gh-pages&lt;/a&gt; module that I use for automating deploys to, you guessed it, Github Pages. The production build process for Gatsby is much slower than I would like, which is especially annoying in the early phases of development when you’re making lots of minor tweaks and changes. Combine that with trying to guarantee that I cache bust my site with new deploys, the general speed of build+deploy, local caching issues, remote caching issues–and I easily spent most of a day refreshing my browser in a state of uncertainty as to whether I was testing the right version of my code. Once I generally worked through my self-inflicted CI/CD pipeline issues, I am very satisfied with what I was able to throw together over a day and a half.&lt;/p&gt;

&lt;h2 id=&quot;outstanding-concerns&quot;&gt;Outstanding Concerns&lt;/h2&gt;

&lt;p&gt;One of the fun bits of doing all this work is that it’s a beautiful combination of development work, writing and designing–all of which I love. I get to keep polishing my dev chops as I work through my backlog of blog posts to migrate as well as explore new technologies and solutions to my own little set of concerns. I’ve historically struggled to find a development problem that aligns with my personal interests, and for the first time I feel like I have the beginnings of a solution here.&lt;/p&gt;

&lt;p&gt;Still, much remains todo if I want to consider this feature complete:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add analytics so I can measure traffic.&lt;/li&gt;
  &lt;li&gt;Some form of management for comments.&lt;/li&gt;
  &lt;li&gt;Find alternate ways to authenticate for comments so not everyone needs to have a Github account to comment.&lt;/li&gt;
  &lt;li&gt;Fix some rendering issues on page load.&lt;/li&gt;
  &lt;li&gt;Tagging and other basic “bloggy” features.&lt;/li&gt;
  &lt;li&gt;Migrate all my old content over.&lt;/li&gt;
  &lt;li&gt;Refactor the whole thing to TypeScript, because {reasons}.&lt;/li&gt;
  &lt;li&gt;Refactor the whole thing from TypeScript to Rust, because…why not?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If any of this has been interesting, please let me know in the comments or in &lt;a href=&quot;https://github.com/crfroehlich/blog&quot;&gt;the code, which is the blog, which is the code, which…&lt;/a&gt;!&lt;/p&gt;</content><author><name>CF</name></author><category term="logging" /><category term="code" /><category term="tech" /><summary type="html">Reality, Meet Opportunity For quite a while now, I have wanted to update my blog, do some more writing (both personally and professionally) and generally flex some unused muscles a bit. Fortuna often has sadistic tendencies as some can attest. Consider the recent toppling of the NS8 empire 1, 2, 3, 4, 5, 6 and a great fall of nepotism with recent developments and former employee actions. So many links to criminal conspiracy to defraud and so little daylight; regardless, I have had more than a little time to navel gaze in recent weeks. I’ve long been frustrated by the available tools for blogging. Some of these goals compete with each other and some are onerous due to costs–I want as much of my platform to be free (both as in beer and as in speech) as possible and I want as much control over my platform as possible and I want to have features like commenting and search and analytics and there can be no ads and the word Jekyll may not be invoked. I have an old Blogger site, which I desperately want to retire; and I have a Medium site which I am increasingly frustrated with: from the inability to post articles in the past to Mediums idiotic approach to monetization–what was initially cool about medium is no longer interesting to me. So I set out to figure out how to create the blog platform you, dear reader, are currently (hopefully) enjoying. Goals Broadly speaking, I want to be able to meet these objectives: Easy to add new posts Easy to update existing posts Keep revision history of edits Blog is searchable Commenting in some form is possible, and comments are stored in my control No ads (at least for now) Service is free for me to host my content and free for consumers I can more or less change anything about the blog at whim Fast to manage Non-starters I considered a number of options, and I won’t go too deep into the pros and cons so much as leave breadcrumbs for others to follow (in no particular order): Medium: it looks nice, but I have to surrender too much control. It’s not free as in speech or free as in lattes. Blogger: it looks dated. It does most of what I need, but it’s slow to manage and cumbersome to maintain. Ghost: it used to be a nice competitor to Medium, but the target audience for users no longer includes me. It’s free to self-host, but non-trivial to manage. All other self-hosted solutions (Ghost included): while I can run anything on my local systems, I don’t want to depend on my personal equipment to run my site and I don’t want to have to deal with security (although services like Ngrok and Pagekite are awesome and definitely worth your time). Cloud hosting options are a mixed bag when looking for free. You can get lots of usage out of Azure on the initial free options, but eventually you have to pay. WordPress/Drupal/etc. Will never use; will not investigate. Solution One “blog” concept that I’ve always liked is by @raganwald is his use of Github for organizing content. I have long considered this approach as it checks off a lot of boxes: Complete control Free as in latkes and free as in peaceful protests It’s git, so it’s all under control The perceived negatives I have had in the past seem to be less of an issue these days with the emergence of a few factors (some relatively new, some a bit older): Github Pages: a free static content website based on the content of a branch of your repository. Commonly the gh-pages branch, which is how this blog is served. Github Actions: Manage your updates to Github Pages automatically Github Codespaces: Everything you need to manage your site, in your browser. This is a very nice to have–you can do this anywhere/anytime already with other tools. GatsbyJs: A pretty slick static site generator based on React. Lots of extensions and pluggability. Comments: Using a tool called Utterances, which is just a convenient wrapper around Github Issues–commenting is free and easy and completely under my control. Search: This is the only 3rd party piece that I cannot take and move just anywhere, but it’s free as in pancakes for my purposes, so I’ll content with it for now and/or until I need something better. Getting There I did some basic soul googling for blog github pages -jekyll and quickly found Creating my blog with Gatsby and Github Pages, which was more than enough to get me going. I explored a variety of Gatsby Templates (once I had decided that Gatsby would meet all my needs) and I picked the Gitbook Starter template as a base. There were a variety of things I needed to change–most notably the logic for generating the sidebar tree, which required comparing the template repo with the demo repo. Most of my time was occupied fixing annoyances–I spent more than a few hours wrestling with the gh-pages module that I use for automating deploys to, you guessed it, Github Pages. The production build process for Gatsby is much slower than I would like, which is especially annoying in the early phases of development when you’re making lots of minor tweaks and changes. Combine that with trying to guarantee that I cache bust my site with new deploys, the general speed of build+deploy, local caching issues, remote caching issues–and I easily spent most of a day refreshing my browser in a state of uncertainty as to whether I was testing the right version of my code. Once I generally worked through my self-inflicted CI/CD pipeline issues, I am very satisfied with what I was able to throw together over a day and a half. Outstanding Concerns One of the fun bits of doing all this work is that it’s a beautiful combination of development work, writing and designing–all of which I love. I get to keep polishing my dev chops as I work through my backlog of blog posts to migrate as well as explore new technologies and solutions to my own little set of concerns. I’ve historically struggled to find a development problem that aligns with my personal interests, and for the first time I feel like I have the beginnings of a solution here. Still, much remains todo if I want to consider this feature complete: Add analytics so I can measure traffic. Some form of management for comments. Find alternate ways to authenticate for comments so not everyone needs to have a Github account to comment. Fix some rendering issues on page load. Tagging and other basic “bloggy” features. Migrate all my old content over. Refactor the whole thing to TypeScript, because {reasons}. Refactor the whole thing from TypeScript to Rust, because…why not? If any of this has been interesting, please let me know in the comments or in the code, which is the blog, which is the code, which…!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2020-10-04-blogging-to-the-oldies.jpg" /><media:content medium="image" url="https://luddites.me/images/2020-10-04-blogging-to-the-oldies.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Oscar</title><link href="https://luddites.me/fiction/short%20story/2020/09/30/oscar.html" rel="alternate" type="text/html" title="Oscar" /><published>2020-09-30T00:00:00-05:00</published><updated>2020-09-30T00:00:00-05:00</updated><id>https://luddites.me/fiction/short%20story/2020/09/30/oscar</id><content type="html" xml:base="https://luddites.me/fiction/short%20story/2020/09/30/oscar.html">&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Words have been changed and characters rearranged to limit liability to the not guilty.    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Every sixty minutes at seven minutes past the hour exactly, Oscar would run naked through the house. He always entered through the front door, streaked through the living room, raced down the hallway, dashed in and out of each room (bathrooms and closets included), ran a quick circle around the island in the kitchen and exited through the mudroom and out the garage. If the garage door were closed, Oscar would mash the button and jog in place until the door raised high enough to dart under.&lt;/p&gt;

&lt;p&gt;While Oscar’s hourly run was in and of itself perplexing, what confused us even more was that not one of us had the faintest idea who was Oscar or whence he came. Did he visit other houses on our street? The pure oddity of our visitor left us in an unusual position. Customarily, it is not appropriate to approach a stranger’s house (be it or not a neighbor’s), knock upon the door and inquire about nude persons that may or may not be running through said person’s home.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Good afternoon, ma’am. I’m your neighbor from down the street, and…”&lt;br /&gt;  &lt;br /&gt;
“Oh, yes, ma’am. Number 312, yes.”&lt;br /&gt;  &lt;br /&gt;
“I’m sure you have seen me riding down the street. Yes, ma’am.”&lt;br /&gt;  &lt;br /&gt;
“Oh, no, ma’am — we don’t even play baseball. I don’t…”&lt;br /&gt;  &lt;br /&gt;
“Yes, ma’am, I see. I am very sorry about the window, but it really wasn’t…”&lt;br /&gt;  &lt;br /&gt;
“If I may, I will ask my mother to inquire around.”&lt;br /&gt;  &lt;br /&gt;
“Yes ma’am, integrity and responsibility are very important virtues for our young people, yes. As a matter of fact, I…”&lt;br /&gt;  &lt;br /&gt;
“Of course, ma’am. I could not agree more.”&lt;br /&gt;  &lt;br /&gt;
“Ma’am, the reason I came by is to ask if you have ever seen Oscar.”&lt;br /&gt;  &lt;br /&gt;
“Well, you see, ma’am, I really do not know. I only know that he runs naked through our house every day.”&lt;br /&gt;  &lt;br /&gt;
“Heaven forbid, ma’am. This is no prank…”&lt;br /&gt;  &lt;br /&gt;
“Please, I assure you, I had no such intention…”&lt;br /&gt;  &lt;br /&gt;
“Accept my apologies; I am sorry to have disturbed you.”&lt;br /&gt;  &lt;br /&gt;
“Yes, I will have my mother…”&lt;br /&gt;  &lt;br /&gt;
“Good day ma’am.”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So you see, the question of asking about the neighborhood was itself quite out of the question. The next, most obvious approach was to try to follow Oscar and see where he went. Now, I do not know if you have ever tried to chase a naked, fully grown man with a seven foot long beard as he runs down the street in broad daylight, but the folks around here do not take kindly to it. Frankly, we didn’t much relish the idea either. It is one thing to blissfully, obliviously ignore a naked person streaking past and quite another thing entirely to try to unsee a couple of children chasing a naked, fully grown man with a seven foot beard.&lt;/p&gt;

&lt;p&gt;If we were not going to interview the neighbors and if we were not going to chase a naked, four and a half foot tall, fully grown man with a seven foot beard, then the next best thing had to be to setup a stakeout. I would watch the front door and keep a clear view up and down the street. Isaac would set up base at the top of the street and Jordan would keep watch from the bottom of the street. You will now be forgiven if you thought this a perfectly good and reasonable plan, for none of us expected to see Oscar floating gently down toward the ground, a parachute the color of the setting sun holding him aloft as his freely dangling loins taunted us with the ineffable and inscrutable ceremony of Oscar’s visit. No one expects a naked, four and a half foot tall, fully grown man with flowing red hair and a seven foot beard to parachute into their driveway, release and then run through every nook and cranny of their house. Indeed, faced with the blur of that buck naked, birthday suit clad, man coursing through our house, we were still caught by the shock of the parachute entrance to react in any significant way before Oscar was already tearing out the garage toward the end of the street. Curiously, as we watched him slowly fade into the horizon, the wind picked up and before I had a chance to snap my fingers the parachute caught the breeze and carried itself after Oscar down the street.&lt;/p&gt;

&lt;p&gt;As you might imagine, my brothers and I were most puzzled. Did Oscar always parachute down? That seemed highly improbable — surely it would take more than an hour to get back into a plane, take off, circle overhead and parachute back down again. There was only one thing for it: stay in position and wait sixty minutes. We decided to take turns at the front of the house for the next round. I drew the short straw, so the first watch was mine. At five minutes past the hour, I would blow a whistle to call my brothers out and we would all fall into position. So it was that at 7:05 in the evening, the three of us resumed our triangular formation to await Oscar. The seconds dripped off our foreheads like icicles sweating. I was focused with such intensity on my watch that the explosion in the middle of the street nearly snatched the life right out of me. At 7:06:30 the sewer lid in the middle of the street shot straight up into the air and Oscar tumbled forward in a pop-off suit. Quick as a jackrabbit, he discarded the suit into the sewer just as the cover landed perfectly back in place. Thus we were left staring at the massive, yellow smiley face tattooed on Oscar’s posterior as that naked, four and a half foot, fully grown man with flowing red hair and a seven foot beard flashed in and out of our house toward the setting sun.&lt;/p&gt;

&lt;p&gt;We had time for one more watch before darkness fell. We briefly discussed positioning a camera through the night to capture Oscar’s various entrances but just as quickly decided we had already seen enough of naked Oscar and did not need to further stain our memories with yet more images of Oscar’s pride. As before, we waited until the appointed time, and at 8:05 that evening resumed our watch in anticipation of Oscar’s return. We stood facing the street, no longer attempting to hide, standing in plain view in the middle of the driveway. Were it not for Isaac’s excellent hearing and quick wit, we might have missed Oscar’s entrance entirely. At Isaac’s signal, we swiftly turned around to face the house just in time to see Oscar release his grip on a hang glider and land nimbly on the roof, from which he performed a flawless backflip, his neatly braided armpit hair swinging like dreadlocks, landing before the front door and streaking inside.&lt;/p&gt;

&lt;p&gt;There comes a point in the day when one can take no more of a naked, four and a half foot tall, full grown man with flowing red hair, a seven foot beard, a giant smiley face butt tattoo and armpit hair dreadlocks. After all, he would be lapping through our house every hour, all night long. We had given up closing bedroom doors long ago. Oscar could pick a lock in less than a second. Deadbolts didn’t stop him. Barricading the door slowed him down not in the least. In the beginning, once it had become clear that Oscar was an unstoppable force, my parents had begun trying to solicit advice from friends and family — but try as they might, they could not find a way to broach the subject of the naked man. My parents tried hosting dinner parties in a more casual effort to allow the subject of Oscar to occur organically in conversation, but Oscar’s hourly runs would prove as frictionless as my mother’s desserts find their way from table to tummy — Oscar could loop through the house, setting foot in every room, unseen and unheard by all except we privileged few with tickets to the never ending show. Gradually, we would come to accept that Oscar’s loins were intended for an audience of us and us alone.&lt;/p&gt;

&lt;p&gt;My parents tried all the usual sorts of things that simple, hardworking, market fearing adults should try. They called the police.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Yes, officer, fourteen inch toenails painted neon green with glitter.”&lt;br /&gt;  &lt;br /&gt;
“No, officer, I assure you — this is not a joke.”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They called the city newspapers.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“No, officer, I assure you — this is not a joke.”&lt;br /&gt;  &lt;br /&gt;
“Yes, tugboat earrings in both ears — quite large. The tugboats make a horn sound as he runs.”&lt;br /&gt;  &lt;br /&gt;
“Well, no, we don’t have any pictures…the man is stark naked. If you could just come by the house…”&lt;br /&gt;  &lt;br /&gt;
“What time? Any hour of the day; just be here at seven past the hour.”&lt;br /&gt;  &lt;br /&gt;
“What? Yes, of course I am serious!”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They called animal control.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Well, no, he is not technically an animal himself, but he does run with a gerbil in each hand.”&lt;br /&gt;  &lt;br /&gt;
“Well the gerbils look quite distressed!”&lt;br /&gt;  &lt;br /&gt;
“Their squeaks sound most concerned.”&lt;br /&gt;  &lt;br /&gt;
“I assure you that being swung about in the hands of a naked man is not among the things Mother Nature provisioned for a gerbil’s recreational activities.”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They called the fire department.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“No sir, nothing is burning. Yet. Not at this exact moment.”&lt;br /&gt;  &lt;br /&gt;
“Well, you see, the back of his neck, you see. Erm. His neck hairs to be precise. Well, the back of his neck is always smoking and the hairs are singed you see.”&lt;br /&gt;  &lt;br /&gt;
“Something is burning them.”&lt;br /&gt;  &lt;br /&gt;
“Well, as I said, not at this exact moment, but if you come by in just thirty minutes, I am sure you will see the smoke.”&lt;br /&gt;  &lt;br /&gt;
“No, I am not threatening to start a fire!”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They called the FBI.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I see. You’ve already heard about us, eh?”&lt;br /&gt;  &lt;br /&gt;
“Nothing you can do? Nothing at all? Can’t even take a message, eh? Would just get thrown away as soon as I hang up, you say?”&lt;br /&gt;  &lt;br /&gt;
“Would it make any difference to know that he has tiny tattoos of the Russian flag above his nipples?”  &lt;br /&gt;
“None whatsoever, eh…”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At that my father gave up hope. For a time, my mother carried on. She called the local churches, the banks, the grocery stores. She called plumbers and electricians and contractors. She called the Red Cross, Amnesty International, the UN and the WHO. I do believe she called every non-residential entity with a phone number before finally collapsing against the cold, hard, unrelenting truth: Oscar’s naughty bits were inextricably intertwined with our lives.&lt;/p&gt;

&lt;p&gt;My parents were nothing if not rational creatures, disposed to dispensing healthy portions of the scientific method at every opportunity (and to them, moments do not exist that are not opportune). Logically, if we could not rely upon anyone else, then from beneath our own bootstraps we must emerge prepared to do battle. Gods bless them, they did try so many things. If I recall correctly, my mother had the first idea: equip each of us with solar eclipse glasses and turn out the lights before Oscar’s next run. Mother handed out the glasses and we sat wrapped in the comforting embrace of darkness, eyes closed behind thick, dark lenses with the quiet evening holding vigil around us. Darkness, sweet and absolute, suddenly abandoned us without warning as the light of a thousand flares roared to raging life around the house, bringing Oscar’s frank and beans into perfect clarity and focus as he flitted gracefully, rapidly through the house. In the dark of the evenings, my father tried cutting the power to the house. Naturally, Oscar persisted, his whole body wrapped in a complex web of glow sticks. At that, my brothers and I did begin a short lived philosophical discussion on whether or no the glow sticks constituted a form of clothing; but we quickly tired of the question and are happy to defer it to consideration by future generations.&lt;/p&gt;

&lt;p&gt;Among all the curiosities that surround Oscar: his arrival, appearance and routine, the simplest to explain (and not without coincidence the first question often asked of this simple narrative) is how we came to know his name; and for this we have but Oscar to thank, for every time Oscar opened the front door, he proclaimed in a sing-song voice “Oscar’s back” with the “ack” extended in a lilting sort of way, extended but not entirely detached from the “b” of its birth — the way a mother might soothe a infant on her return: all is well, worry not, sanity and security are restored. The answers to most other questions remain shrink wrapped in enigmas: how and where does he sleep? Does he have a family? What does he do each hour for the 58½ minutes not spent inside our house? How does he keep this up, every single hour of every single day for months if not years on end? What happens when he gets sick? Has he ever been late? Where did he come from? And why? Why? Why — by the unwritten, sacred names of all the unspoken holiness around us — why?&lt;/p&gt;

&lt;p&gt;As it does, time passed. Like a sudden burst of sunlight severing the grip of an icicle from the roof, an idea smashed into my consciousness with the same abruptness as Oscar bursting through the doorway: why not ask him? For reasons that will soon clarify as they crystalize: attempting to start a conversation with Oscar proved slightly more difficult than my confidence in the idea suggested. One Saturday morning, as Oscar entered the living room, I braced myself for the unthinkable and managed to release a whispery “Are you hungry?”, which only barely managed to escape my lips before Oscar reached the garage. Each conversation felt as a stained glass window being assembled from its shattered fragments. Our first dialog differed little from the rest except insofar as it was the end of the evitable.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;06:07 — Are you hungry?&lt;br /&gt;  &lt;br /&gt;
07:07 — Yep.&lt;br /&gt;  &lt;br /&gt;
08:07 — Would you like a sandwich?&lt;br /&gt;  &lt;br /&gt;
09:07 — Please.&lt;br /&gt;  &lt;br /&gt;
10:07 — What kind of sandwich?&lt;br /&gt;  &lt;br /&gt;
11:07 — Tuna…&lt;br /&gt;  &lt;br /&gt;
12:07 — …fish…&lt;br /&gt;  &lt;br /&gt;
13:07 — …no…&lt;br /&gt;  &lt;br /&gt;
14:07 — …pickles.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At 3:07 in the afternoon, a tuna fish sandwich, on toasted rye bread, lounged upon the kitchen counter, waiting with a diagonal come hither slice down the middle for Oscar to return. Oscar took the sandwich and at 4:07 said “Thanks” as he passed. From that day forward, I left a tuna sandwich on the kitchen counter in the afternoons. Our conversations continued, Oscar replying a word or two per hour.&lt;/p&gt;

&lt;p&gt;I asked:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Do you enjoy this?”&lt;br /&gt;  &lt;br /&gt;
“This is…”&lt;br /&gt;  &lt;br /&gt;
“…the job…”&lt;br /&gt;  &lt;br /&gt;
“…I was…”&lt;br /&gt;  &lt;br /&gt;
“…born…”&lt;br /&gt;  &lt;br /&gt;
“…to do.”&lt;br /&gt;  &lt;br /&gt;
“Is the pay good?”&lt;br /&gt;  &lt;br /&gt;
“Decent…”&lt;br /&gt;  &lt;br /&gt;
“…Has per diem…”&lt;br /&gt;  &lt;br /&gt;
“…Benefits…”&lt;br /&gt;  &lt;br /&gt;
“…Travel.”&lt;br /&gt;  &lt;br /&gt;
“When did you start?”&lt;br /&gt;  &lt;br /&gt;
“A few…”&lt;br /&gt;  &lt;br /&gt;
“…years ago.”&lt;br /&gt;  &lt;br /&gt;
“What made you get into this line of work?”&lt;br /&gt;  &lt;br /&gt;
“Great…”&lt;br /&gt;  &lt;br /&gt;
“…exercise…”&lt;br /&gt;  &lt;br /&gt;
“…Meet new…”&lt;br /&gt;  &lt;br /&gt;
“…people…”&lt;br /&gt;  &lt;br /&gt;
“…See new…”&lt;br /&gt;  &lt;br /&gt;
“…places.”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the conversations went for days or weeks, until (quite unexpectedly) I stumbled upon the question I should have asked at the very beginning. “So. Um. Oscar? So, why our house?” I paused, “I mean, this is great and all — don’t get me wrong — the gerbils really close the deal…but why choose to do this in our home?”&lt;/p&gt;

&lt;p&gt;Oscar skidded to a halt in mid stride. He turned to face me and walked slowly into the living room. “Eh,” he said, “Sorry. Say that one more time?” “Well,” I started, “I mean, of all the houses in all the world, why ours?” Oscar scratched his head for a moment, his red hair somehow still flowing, “Why. Hrm. Yes, why, indeed.” From where I cannot imagine, Oscar produced a thick stack of papers. “Let’s see,” he started, thumbing through the papers, “Kilpatricks. 312 Maple. Full service package. Ordered on February 2nd. Full year, paid in advance.” He looked up at me, “This is 312 Maple. You are the Kilpatricks, right?” “Oh, no” I said, “You want 313, just across the street.”&lt;/p&gt;

&lt;p&gt;Inside a blur of motion, Oscar had a phone in his hand and he was furiously tapping away at the screen. He lifted the phone to his ear.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Jimmy, Oscar here. Looks like corporate screwed up again.”&lt;br /&gt;  &lt;br /&gt;
“Yeah, the DF-10.75 package with full service add-on. Yeah, it’s 313 Maple.”&lt;br /&gt;  &lt;br /&gt;
“Right, send the usual cleanup crew.”&lt;br /&gt;  &lt;br /&gt;
“Ok. I’ll update the protocol.”&lt;br /&gt;  &lt;br /&gt;
“Sounds good. I’ll start on them first thing tomorrow.”&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At that, Oscar hung up and the phone vanished as quickly as it had appeared. He flipped through the paperwork, located a page and held that with one hand while the other produced a tongue depressor in a sterile package, “Lick that and swab here please,” he said to me. Dazed, I unwrapped the small wooden device from the plastic, gave it a lick and spread the ooze on the form where he indicated. “I’m very sorry about all of this,” Oscar said as the paperwork and tongue depressor vanished. “You know how corporate gets sometimes. Mistakes happen. Big wigs don’t think like the little wigs, and so on.” Oscar looked around, almost with a hint of sadness — though it was difficult to interpret his emotions behind the layers of clown makeup on his face. “Again, so terribly sorry about all of this. Corporate will be in touch to tidy things up here, hog tie any loose ends, wrangle any problems, etcetera.” Oscar walked toward the front door and said without looking back, “Well, good luck with…well, whatever it is you people do here.” He was gone, and I have never seen him since.&lt;/p&gt;

&lt;p&gt;My mother walked into the living room later that evening and observed me — I must have looked glazed over, sitting on the couch and staring at the wall. “What happened dear?” she asked. “I have no idea. I mean, Oscar’s gone. Seems he won’t be back. Something about a wrong address. I had to lick some paperwork. I guess he wanted the Kilpatricks from across the street.” The color fell off my mother’s face like a mortar dropping toward the earth, “The Kilpatricks moved away months ago, dear. A new family just moved in last week.”&lt;/p&gt;

&lt;p&gt;“Oh. Oh, dear my. Oh dear,” I said. “Should we…? Should we, you know, say something?”&lt;/p&gt;

&lt;p&gt;My mother mused for a moment before slowly composing herself and turning toward the kitchen, “No…No, I think it’s best they figure this out for themselves.”&lt;/p&gt;</content><author><name>CF</name></author><category term="fiction" /><category term="short story" /><summary type="html">Words have been changed and characters rearranged to limit liability to the not guilty. Every sixty minutes at seven minutes past the hour exactly, Oscar would run naked through the house. He always entered through the front door, streaked through the living room, raced down the hallway, dashed in and out of each room (bathrooms and closets included), ran a quick circle around the island in the kitchen and exited through the mudroom and out the garage. If the garage door were closed, Oscar would mash the button and jog in place until the door raised high enough to dart under. While Oscar’s hourly run was in and of itself perplexing, what confused us even more was that not one of us had the faintest idea who was Oscar or whence he came. Did he visit other houses on our street? The pure oddity of our visitor left us in an unusual position. Customarily, it is not appropriate to approach a stranger’s house (be it or not a neighbor’s), knock upon the door and inquire about nude persons that may or may not be running through said person’s home. “Good afternoon, ma’am. I’m your neighbor from down the street, and…” “Oh, yes, ma’am. Number 312, yes.” “I’m sure you have seen me riding down the street. Yes, ma’am.” “Oh, no, ma’am — we don’t even play baseball. I don’t…” “Yes, ma’am, I see. I am very sorry about the window, but it really wasn’t…” “If I may, I will ask my mother to inquire around.” “Yes ma’am, integrity and responsibility are very important virtues for our young people, yes. As a matter of fact, I…” “Of course, ma’am. I could not agree more.” “Ma’am, the reason I came by is to ask if you have ever seen Oscar.” “Well, you see, ma’am, I really do not know. I only know that he runs naked through our house every day.” “Heaven forbid, ma’am. This is no prank…” “Please, I assure you, I had no such intention…” “Accept my apologies; I am sorry to have disturbed you.” “Yes, I will have my mother…” “Good day ma’am.” So you see, the question of asking about the neighborhood was itself quite out of the question. The next, most obvious approach was to try to follow Oscar and see where he went. Now, I do not know if you have ever tried to chase a naked, fully grown man with a seven foot long beard as he runs down the street in broad daylight, but the folks around here do not take kindly to it. Frankly, we didn’t much relish the idea either. It is one thing to blissfully, obliviously ignore a naked person streaking past and quite another thing entirely to try to unsee a couple of children chasing a naked, fully grown man with a seven foot beard. If we were not going to interview the neighbors and if we were not going to chase a naked, four and a half foot tall, fully grown man with a seven foot beard, then the next best thing had to be to setup a stakeout. I would watch the front door and keep a clear view up and down the street. Isaac would set up base at the top of the street and Jordan would keep watch from the bottom of the street. You will now be forgiven if you thought this a perfectly good and reasonable plan, for none of us expected to see Oscar floating gently down toward the ground, a parachute the color of the setting sun holding him aloft as his freely dangling loins taunted us with the ineffable and inscrutable ceremony of Oscar’s visit. No one expects a naked, four and a half foot tall, fully grown man with flowing red hair and a seven foot beard to parachute into their driveway, release and then run through every nook and cranny of their house. Indeed, faced with the blur of that buck naked, birthday suit clad, man coursing through our house, we were still caught by the shock of the parachute entrance to react in any significant way before Oscar was already tearing out the garage toward the end of the street. Curiously, as we watched him slowly fade into the horizon, the wind picked up and before I had a chance to snap my fingers the parachute caught the breeze and carried itself after Oscar down the street. As you might imagine, my brothers and I were most puzzled. Did Oscar always parachute down? That seemed highly improbable — surely it would take more than an hour to get back into a plane, take off, circle overhead and parachute back down again. There was only one thing for it: stay in position and wait sixty minutes. We decided to take turns at the front of the house for the next round. I drew the short straw, so the first watch was mine. At five minutes past the hour, I would blow a whistle to call my brothers out and we would all fall into position. So it was that at 7:05 in the evening, the three of us resumed our triangular formation to await Oscar. The seconds dripped off our foreheads like icicles sweating. I was focused with such intensity on my watch that the explosion in the middle of the street nearly snatched the life right out of me. At 7:06:30 the sewer lid in the middle of the street shot straight up into the air and Oscar tumbled forward in a pop-off suit. Quick as a jackrabbit, he discarded the suit into the sewer just as the cover landed perfectly back in place. Thus we were left staring at the massive, yellow smiley face tattooed on Oscar’s posterior as that naked, four and a half foot, fully grown man with flowing red hair and a seven foot beard flashed in and out of our house toward the setting sun. We had time for one more watch before darkness fell. We briefly discussed positioning a camera through the night to capture Oscar’s various entrances but just as quickly decided we had already seen enough of naked Oscar and did not need to further stain our memories with yet more images of Oscar’s pride. As before, we waited until the appointed time, and at 8:05 that evening resumed our watch in anticipation of Oscar’s return. We stood facing the street, no longer attempting to hide, standing in plain view in the middle of the driveway. Were it not for Isaac’s excellent hearing and quick wit, we might have missed Oscar’s entrance entirely. At Isaac’s signal, we swiftly turned around to face the house just in time to see Oscar release his grip on a hang glider and land nimbly on the roof, from which he performed a flawless backflip, his neatly braided armpit hair swinging like dreadlocks, landing before the front door and streaking inside. There comes a point in the day when one can take no more of a naked, four and a half foot tall, full grown man with flowing red hair, a seven foot beard, a giant smiley face butt tattoo and armpit hair dreadlocks. After all, he would be lapping through our house every hour, all night long. We had given up closing bedroom doors long ago. Oscar could pick a lock in less than a second. Deadbolts didn’t stop him. Barricading the door slowed him down not in the least. In the beginning, once it had become clear that Oscar was an unstoppable force, my parents had begun trying to solicit advice from friends and family — but try as they might, they could not find a way to broach the subject of the naked man. My parents tried hosting dinner parties in a more casual effort to allow the subject of Oscar to occur organically in conversation, but Oscar’s hourly runs would prove as frictionless as my mother’s desserts find their way from table to tummy — Oscar could loop through the house, setting foot in every room, unseen and unheard by all except we privileged few with tickets to the never ending show. Gradually, we would come to accept that Oscar’s loins were intended for an audience of us and us alone. My parents tried all the usual sorts of things that simple, hardworking, market fearing adults should try. They called the police. “Yes, officer, fourteen inch toenails painted neon green with glitter.” “No, officer, I assure you — this is not a joke.” They called the city newspapers. “No, officer, I assure you — this is not a joke.” “Yes, tugboat earrings in both ears — quite large. The tugboats make a horn sound as he runs.” “Well, no, we don’t have any pictures…the man is stark naked. If you could just come by the house…” “What time? Any hour of the day; just be here at seven past the hour.” “What? Yes, of course I am serious!” They called animal control. “Well, no, he is not technically an animal himself, but he does run with a gerbil in each hand.” “Well the gerbils look quite distressed!” “Their squeaks sound most concerned.” “I assure you that being swung about in the hands of a naked man is not among the things Mother Nature provisioned for a gerbil’s recreational activities.” They called the fire department. “No sir, nothing is burning. Yet. Not at this exact moment.” “Well, you see, the back of his neck, you see. Erm. His neck hairs to be precise. Well, the back of his neck is always smoking and the hairs are singed you see.” “Something is burning them.” “Well, as I said, not at this exact moment, but if you come by in just thirty minutes, I am sure you will see the smoke.” “No, I am not threatening to start a fire!” They called the FBI. “I see. You’ve already heard about us, eh?” “Nothing you can do? Nothing at all? Can’t even take a message, eh? Would just get thrown away as soon as I hang up, you say?” “Would it make any difference to know that he has tiny tattoos of the Russian flag above his nipples?” “None whatsoever, eh…” At that my father gave up hope. For a time, my mother carried on. She called the local churches, the banks, the grocery stores. She called plumbers and electricians and contractors. She called the Red Cross, Amnesty International, the UN and the WHO. I do believe she called every non-residential entity with a phone number before finally collapsing against the cold, hard, unrelenting truth: Oscar’s naughty bits were inextricably intertwined with our lives. My parents were nothing if not rational creatures, disposed to dispensing healthy portions of the scientific method at every opportunity (and to them, moments do not exist that are not opportune). Logically, if we could not rely upon anyone else, then from beneath our own bootstraps we must emerge prepared to do battle. Gods bless them, they did try so many things. If I recall correctly, my mother had the first idea: equip each of us with solar eclipse glasses and turn out the lights before Oscar’s next run. Mother handed out the glasses and we sat wrapped in the comforting embrace of darkness, eyes closed behind thick, dark lenses with the quiet evening holding vigil around us. Darkness, sweet and absolute, suddenly abandoned us without warning as the light of a thousand flares roared to raging life around the house, bringing Oscar’s frank and beans into perfect clarity and focus as he flitted gracefully, rapidly through the house. In the dark of the evenings, my father tried cutting the power to the house. Naturally, Oscar persisted, his whole body wrapped in a complex web of glow sticks. At that, my brothers and I did begin a short lived philosophical discussion on whether or no the glow sticks constituted a form of clothing; but we quickly tired of the question and are happy to defer it to consideration by future generations. Among all the curiosities that surround Oscar: his arrival, appearance and routine, the simplest to explain (and not without coincidence the first question often asked of this simple narrative) is how we came to know his name; and for this we have but Oscar to thank, for every time Oscar opened the front door, he proclaimed in a sing-song voice “Oscar’s back” with the “ack” extended in a lilting sort of way, extended but not entirely detached from the “b” of its birth — the way a mother might soothe a infant on her return: all is well, worry not, sanity and security are restored. The answers to most other questions remain shrink wrapped in enigmas: how and where does he sleep? Does he have a family? What does he do each hour for the 58½ minutes not spent inside our house? How does he keep this up, every single hour of every single day for months if not years on end? What happens when he gets sick? Has he ever been late? Where did he come from? And why? Why? Why — by the unwritten, sacred names of all the unspoken holiness around us — why? As it does, time passed. Like a sudden burst of sunlight severing the grip of an icicle from the roof, an idea smashed into my consciousness with the same abruptness as Oscar bursting through the doorway: why not ask him? For reasons that will soon clarify as they crystalize: attempting to start a conversation with Oscar proved slightly more difficult than my confidence in the idea suggested. One Saturday morning, as Oscar entered the living room, I braced myself for the unthinkable and managed to release a whispery “Are you hungry?”, which only barely managed to escape my lips before Oscar reached the garage. Each conversation felt as a stained glass window being assembled from its shattered fragments. Our first dialog differed little from the rest except insofar as it was the end of the evitable. 06:07 — Are you hungry? 07:07 — Yep. 08:07 — Would you like a sandwich? 09:07 — Please. 10:07 — What kind of sandwich? 11:07 — Tuna… 12:07 — …fish… 13:07 — …no… 14:07 — …pickles. At 3:07 in the afternoon, a tuna fish sandwich, on toasted rye bread, lounged upon the kitchen counter, waiting with a diagonal come hither slice down the middle for Oscar to return. Oscar took the sandwich and at 4:07 said “Thanks” as he passed. From that day forward, I left a tuna sandwich on the kitchen counter in the afternoons. Our conversations continued, Oscar replying a word or two per hour. I asked: “Do you enjoy this?” “This is…” “…the job…” “…I was…” “…born…” “…to do.” “Is the pay good?” “Decent…” “…Has per diem…” “…Benefits…” “…Travel.” “When did you start?” “A few…” “…years ago.” “What made you get into this line of work?” “Great…” “…exercise…” “…Meet new…” “…people…” “…See new…” “…places.” So the conversations went for days or weeks, until (quite unexpectedly) I stumbled upon the question I should have asked at the very beginning. “So. Um. Oscar? So, why our house?” I paused, “I mean, this is great and all — don’t get me wrong — the gerbils really close the deal…but why choose to do this in our home?” Oscar skidded to a halt in mid stride. He turned to face me and walked slowly into the living room. “Eh,” he said, “Sorry. Say that one more time?” “Well,” I started, “I mean, of all the houses in all the world, why ours?” Oscar scratched his head for a moment, his red hair somehow still flowing, “Why. Hrm. Yes, why, indeed.” From where I cannot imagine, Oscar produced a thick stack of papers. “Let’s see,” he started, thumbing through the papers, “Kilpatricks. 312 Maple. Full service package. Ordered on February 2nd. Full year, paid in advance.” He looked up at me, “This is 312 Maple. You are the Kilpatricks, right?” “Oh, no” I said, “You want 313, just across the street.” Inside a blur of motion, Oscar had a phone in his hand and he was furiously tapping away at the screen. He lifted the phone to his ear. “Jimmy, Oscar here. Looks like corporate screwed up again.” “Yeah, the DF-10.75 package with full service add-on. Yeah, it’s 313 Maple.” “Right, send the usual cleanup crew.” “Ok. I’ll update the protocol.” “Sounds good. I’ll start on them first thing tomorrow.” At that, Oscar hung up and the phone vanished as quickly as it had appeared. He flipped through the paperwork, located a page and held that with one hand while the other produced a tongue depressor in a sterile package, “Lick that and swab here please,” he said to me. Dazed, I unwrapped the small wooden device from the plastic, gave it a lick and spread the ooze on the form where he indicated. “I’m very sorry about all of this,” Oscar said as the paperwork and tongue depressor vanished. “You know how corporate gets sometimes. Mistakes happen. Big wigs don’t think like the little wigs, and so on.” Oscar looked around, almost with a hint of sadness — though it was difficult to interpret his emotions behind the layers of clown makeup on his face. “Again, so terribly sorry about all of this. Corporate will be in touch to tidy things up here, hog tie any loose ends, wrangle any problems, etcetera.” Oscar walked toward the front door and said without looking back, “Well, good luck with…well, whatever it is you people do here.” He was gone, and I have never seen him since. My mother walked into the living room later that evening and observed me — I must have looked glazed over, sitting on the couch and staring at the wall. “What happened dear?” she asked. “I have no idea. I mean, Oscar’s gone. Seems he won’t be back. Something about a wrong address. I had to lick some paperwork. I guess he wanted the Kilpatricks from across the street.” The color fell off my mother’s face like a mortar dropping toward the earth, “The Kilpatricks moved away months ago, dear. A new family just moved in last week.” “Oh. Oh, dear my. Oh dear,” I said. “Should we…? Should we, you know, say something?” My mother mused for a moment before slowly composing herself and turning toward the kitchen, “No…No, I think it’s best they figure this out for themselves.”</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2020-09-30-oscar.png" /><media:content medium="image" url="https://luddites.me/images/2020-09-30-oscar.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Code Generation Fail: An all the king’s horses tragedy</title><link href="https://luddites.me/metadata/retrospective/code/generation/2019/07/10/code-generation-fail-an-all-the-kings-horses-tragedy.html" rel="alternate" type="text/html" title="Code Generation Fail: An all the king’s horses tragedy" /><published>2019-07-10T00:00:00-05:00</published><updated>2019-07-10T00:00:00-05:00</updated><id>https://luddites.me/metadata/retrospective/code/generation/2019/07/10/code-generation-fail-an-all-the-kings-horses-tragedy</id><content type="html" xml:base="https://luddites.me/metadata/retrospective/code/generation/2019/07/10/code-generation-fail-an-all-the-kings-horses-tragedy.html">&lt;p&gt;Sometimes best intentions and good ole fashioned elbow grease are no match against the tyrannical fist of Reality. In my &lt;a href=&quot;https://blog.luddites.me/2019/Code-Generation--Connecting-T4-to-Entity-Framework-Core&quot;&gt;previous post&lt;/a&gt;, I discussed some of the initial ambitions and achievements in my attempt to convert the Entity Framework Core + MVC project into a dynamically generated template using T4. The good news? T4 is a perfectly adequate way to generate code from templates. The bad news? There is no way to make this completely integrated in a pure .NET Core project. What does this mean, and why is this a problem?&lt;/p&gt;

&lt;h3 id=&quot;the-story&quot;&gt;The Story&lt;/h3&gt;

&lt;p&gt;Full disclosure: if you want something approximating a tldr; just skip to the next section.&lt;/p&gt;

&lt;p&gt;For starters, the beauty of .NET Core is that I can compile and run a .NET Core app as easily on my Pixelbook as I can on my Windows devices. Getting a Core app up and running is just a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet build&lt;/code&gt; away! This simplicity is bruised, battered and beaten when we can’t run the transforms required to generate that code. In an ideal world, when I run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet build&lt;/code&gt; on the &lt;a href=&quot;https://github.com/crfroehlich/autoEcMvc&quot;&gt;AutoEcMvc&lt;/a&gt; solution, the CodeGeneration project would compile and output the generated code into the AutoEcMvc project, which would then compile.&lt;/p&gt;

&lt;p&gt;If this worked, the project could then drop seamlessly into Azure Pipelines which would automatically compile, test and deploy the project to my Azure app container! (It should be noted, I can still make this work, but it’s extra work that should be unnecessary).&lt;/p&gt;

&lt;p&gt;Before I dive into the full autopsy of the deceased dream, I’ll explain my temporary solution and a few alternatives that I considered. For reasons that I’ll explain momentarily, the only way for even &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msbuild&lt;/code&gt; to work with a T4 project is to base the project on .NET Framework. In order to keep the T4 free from compilation issues (because Text Transformation happens &lt;em&gt;before&lt;/em&gt; build, you can find yourself in a situation where the solution cannot compile without some minor hacking), I find it useful to keep the C# backing code for the templates in its own project. Unfortunately, the minimum project type that will work is .NET Standard (.NET Framework will also work, but the goal is to get as close to .NET Core as possible). For these reasons, my current solution’s solution has three projects, in build order: CodeGeneration (.NET Standard) &amp;gt; T4 (.NET Framework) &amp;gt; AutoEcMvc (.NET Core). CodeGeneration has only the utility functions required for the T4 project, which has only the metadata JSON and TT files, and AutoEcMvc has the user defined and generated content together. In another chapter, we’ll remove generated code from source control entirely, but for now I’m leaving it in place as a way to easily review and compare changes with the original project.&lt;/p&gt;

&lt;p&gt;With this configuration, msbuild works seamlessly and I’ll update my Azure Pipeline to use msbuild and get my CI/CD plans back on track. I’m less than thrilled with having to throw &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet build&lt;/code&gt; under the bus, but I’ve also spent more hours trying to crack this nut than I want — and I have whales need fryin’.&lt;/p&gt;

&lt;p&gt;Before I completely abandoned the dream of a pure .NET Core solution, I explored a few options. There is &lt;a href=&quot;https://github.com/daveaglick/Scripty&quot;&gt;Scripty&lt;/a&gt;, which “lets you use Roslyn-powered C# scripts for code generation. You can think of it as a scripted alternative to T4 templates.” While it sounds promising, the project hasn’t been updated in a while and seems to have outstanding issues with .NET Core. There is also the issue of documentation — any &lt;a href=&quot;https://github.com/daveaglick/Scripty/issues/104&quot;&gt;examples&lt;/a&gt; of converting a T4 template to Scripty would be enormously helpful. Another promising option was &lt;a href=&quot;https://github.com/atifaziz/t5&quot;&gt;T5&lt;/a&gt;, but no amount of tinkering prevailed against the ineffable and inscrutable refusal from Core to comply. Finally, there is &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/page?view=aspnetcore-2.2&amp;amp;tabs=visual-studio&quot;&gt;scaffolding&lt;/a&gt; built into ASP.NET Core, but this is specific to Razor pages and not really a way to keep generated code in sync with metadata in the way I want to use it.&lt;/p&gt;

&lt;p&gt;Absent other ideas, T4 still seems like the best approach without a major rewrite. I should note, my specific use of T4 is not terribly complicated, and it would be easy to ditch the templates altogether and simply write the code entirely in C#, but then it would cease to be generic and defeat the purpose of this little exercise. I may emerge from this experiment with a different opinion, but for now I’ll assume that T4 will remain the backbone of the project (until proven differently).&lt;/p&gt;

&lt;p&gt;As always, this has been a long winded series of asides, a slow and drifting detour from the main point: T4 and .NET Core do not mix. The latter does not abide the former. There is hostility, vitriol and threats of malice aforethought between the two. How do I know this?&lt;/p&gt;

&lt;h3 id=&quot;my-current-solution&quot;&gt;My Current “Solution”&lt;/h3&gt;

&lt;p&gt;To understand the problems with trying to migrate T4 into .NET Core, I think it useful to explain the challenges presented in .NET Framework. There are two paths to text transformation.&lt;/p&gt;

&lt;p&gt;The first is a developer convenience baked directly into Visual Studio since at least 2015. When you add a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tt&lt;/code&gt; file into a project, VS immediately recognizes the template and offers a few convenience options for you as a developer: (1) whenever you save changes to the template, VS immediately runs text transform and the output is regenerated, (2) VS gives context menu options to manually transform (aka Run Custom Tool) and to debug the template, which will launch the debugger and allow you to set breakpoints anywhere, and (3) VS offers the option to run all transforms at the project/solution level. All of these features are hugely beneficial to the development of templates. But. And this is a big “but”.&lt;/p&gt;

&lt;p&gt;The second is through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msbuild&lt;/code&gt; which is what I would normally use in my CI pipeline. Msbuild launches text transform in a different context than VS, which means that the relative paths (e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$(SolutionDir)&lt;/code&gt; )that work in VS no longer work from msbuild.&lt;/p&gt;

&lt;p&gt;In order to reconcile the two different behaviors, we need to make some changes to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.csproj&lt;/code&gt; file. Unfortunately, a project using .NET Framework has to be unloaded to be edited, then reloaded. Personally, I edit the project file directly in VS Code and let VS trigger the reload warning after I save changes. This is tedious, but it eliminates a few right-clicks.&lt;/p&gt;

&lt;p&gt;If we start with a &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/T4/templates/imports.ttinclude&quot;&gt;T4 import&lt;/a&gt; that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-t4&quot;&gt;#&amp;gt;&amp;lt;#@ assembly name=&quot;$(SolutionDir)CodeGeneration\\bin\\netstandard2.0\\CodeGeneration.Dll&quot;    
#&amp;gt;&amp;lt;#@ assembly name=&quot;$(SolutionDir)CodeGeneration\\bin\\netstandard2.0\\Newtonsoft.Json.Dll&quot;    
#&amp;gt;&amp;lt;#@ import namespace=&quot;Newtonsoft.Json&quot;    
#&amp;gt;&amp;lt;#@ import namespace=&quot;Newtonsoft.Json.Linq&quot;    
#&amp;gt;&amp;lt;#@ import namespace=&quot;CodeGeneration&quot; #&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;we have two immediate problems. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$(SolutionDir)&lt;/code&gt; cannot resolve outside of VS, and our 3rd party dependency on Newtonsoft will not be available from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin&lt;/code&gt; directory. Starting with the latter, you can add this into a property group in the project file:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;CopyLocalLockFileAssemblies&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/CopyLocalLockFileAssemblies&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, all reference binaries will be copied into the build output directory.&lt;/p&gt;

&lt;p&gt;Next, the challenge of resolving the path to that output directory can be solved as well. A custom mapping is required, which is also possible with a little XML markup:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;targetFolder&amp;gt;&lt;/span&gt;$(MSBuildProjectDirectory)\\..\\CodeGeneration\\bin\\netstandard2.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/targetFolder&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ItemGroup&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;T4ParameterValues&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Include=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;targetFolder&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;    
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;$(targetFolder)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/T4ParameterValues&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ItemGroup&amp;gt;&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, I can update the T4 imports to:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#&amp;gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;#@ assembly name=&quot;$(targetFolder)\\CodeGeneration.Dll&quot;    
#&amp;gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;#@ assembly name=&quot;$(targetFolder)\\Newtonsoft.Json.Dll&quot;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this will work seamlessly between VS and msbuild. There are a few other changes to make, but these are much more clearly documented elsewhere. For reference here, you also need:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Import&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Project=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$(MSBuildToolsPath)\\Microsoft.CSharp.targets&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Get the Visual Studio version: --&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;VisualStudioVersion&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Condition=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;'$(VisualStudioVersion)' == ''&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;16.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/VisualStudioVersion&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Keep the next element all on one line: --&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;VSToolsPath&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Condition=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;'$(VSToolsPath)' == ''&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/VSToolsPath&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- This is the important line: --&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Import&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Project=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$(VSToolsPath)\\TextTemplating\\Microsoft.TextTemplating.targets&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TransformOnBuild&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TransformOnBuild&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;OverwriteReadOnlyOutputFiles&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/OverwriteReadOnlyOutputFiles&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TransformOutOfDateOnly&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TransformOutOfDateOnly&amp;gt;&lt;/span&gt;    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RunPostBuildEvent&amp;gt;&lt;/span&gt;Always&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RunPostBuildEvent&amp;gt;&lt;/span&gt;    
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the final glue to ensure that you get identical behavior when compiling the project from any direction.&lt;/p&gt;

&lt;p&gt;Once all these pieces are in place, msbuild should &lt;strong&gt;just work&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/modeling/t4-parameter-directive?view=vs-2019&quot;&gt;T4 Parameter Directive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/modeling/code-generation-in-a-build-process?view=vs-2019#parameters&quot;&gt;Pass build context data into the templates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/clariuslabs/TransformOnBuild&quot;&gt;TransformOnBuild&lt;/a&gt; (I didn’t end up using this solution, but exploring the project helped me resolve some issues)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;my-struggle&quot;&gt;My Struggle&lt;/h3&gt;

&lt;p&gt;The next time I run into this class of problem, I definitely want to track all of my uncommitted changes and correlate each attempted fix with the relevant errors that occur which drive me to all the URLs and searches for answers as I attempt each new iteration of the fix. Then, ideally, I could blog about each stage of the journey with a little more coherence. For now and for the sake of the reader, I will simply list all of the relevant bits (that I can find in my browser history) that have led me to the conclusion that (as of this moment) T4 and Core cannot coexist.&lt;/p&gt;

&lt;p&gt;Incomplete Solutions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mono/t4&quot;&gt;Re-implementation of T4 in Mono&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://notquitepure.info/2018/12/12/T4-Templates-at-Build-Time-With-Dotnet-Core/&quot;&gt;T4 Templates at Build Time with Dotnet Core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=TimMaes.ttexecuter&quot;&gt;T4Executer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Relevant GitHub Issues:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xamarin/TorchSharp/issues/27&quot;&gt;dotnet build fails to generate TypeGeneration.cs on linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mono/t4/issues/12&quot;&gt;Add MSBuild targets package&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/issues/2743&quot;&gt;Several FileNotFoundException using Newtonsoft.Json inside T4 template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/issues/2000&quot;&gt;FileNotFoundException (System.Runtime, Version=4.2.1.0) when reflecting in T4 template&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nil4/dotnet-transform-xdt/issues/16&quot;&gt;Package type ‘DotnetCliTool’ is not supported by project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mono/t4/issues/42&quot;&gt;PlatformNotSupportedException with dotnet-t4-project-tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet-websharper/core/issues/903&quot;&gt;build failing — and what worked for me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Relevant StackOverflow Issues:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/17170080/t4-subtemplates-transformtext-not-working&quot;&gt;T4 subtemplates TransformText() not working&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/47691299/texttemplating-target-in-a-net-core-project&quot;&gt;TextTemplating target in a .Net Core project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50471751/the-imported-project-c-program-files-dotnet-sdk-2-1-201-microsoft-visualstudio&quot;&gt;The imported project “C:\Program Files\dotnet\sdk\2.1.201\Microsoft\VisualStudio\v15.0\WebApplications\Microsoft.WebApplication.targets” was not found&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Microsoft Docs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualstudio.texttemplating.texttransformation?view=visualstudiosdk-2019&quot;&gt;TextTransformation Class&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developercommunity.visualstudio.com/idea/535990/filenotfoundexception-systemruntime-version4210-wh.html&quot;&gt;FileNotFoundException (System.Runtime, Version=4.2.1.0) when reflecting in T4 template in .NET Core 2.1 app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As always, I hope this has helped someone with a similar quest. Please feel free to correct anything I have missed, suggest corrections or alternatives, or otherwise reach out to collaborate on solutions for this journey.&lt;/p&gt;</content><author><name>CF</name></author><category term="metadata" /><category term="retrospective" /><category term="code" /><category term="generation" /><summary type="html">Sometimes best intentions and good ole fashioned elbow grease are no match against the tyrannical fist of Reality. In my previous post, I discussed some of the initial ambitions and achievements in my attempt to convert the Entity Framework Core + MVC project into a dynamically generated template using T4. The good news? T4 is a perfectly adequate way to generate code from templates. The bad news? There is no way to make this completely integrated in a pure .NET Core project. What does this mean, and why is this a problem? The Story Full disclosure: if you want something approximating a tldr; just skip to the next section. For starters, the beauty of .NET Core is that I can compile and run a .NET Core app as easily on my Pixelbook as I can on my Windows devices. Getting a Core app up and running is just a git clone and dotnet build away! This simplicity is bruised, battered and beaten when we can’t run the transforms required to generate that code. In an ideal world, when I run dotnet build on the AutoEcMvc solution, the CodeGeneration project would compile and output the generated code into the AutoEcMvc project, which would then compile. If this worked, the project could then drop seamlessly into Azure Pipelines which would automatically compile, test and deploy the project to my Azure app container! (It should be noted, I can still make this work, but it’s extra work that should be unnecessary). Before I dive into the full autopsy of the deceased dream, I’ll explain my temporary solution and a few alternatives that I considered. For reasons that I’ll explain momentarily, the only way for even msbuild to work with a T4 project is to base the project on .NET Framework. In order to keep the T4 free from compilation issues (because Text Transformation happens before build, you can find yourself in a situation where the solution cannot compile without some minor hacking), I find it useful to keep the C# backing code for the templates in its own project. Unfortunately, the minimum project type that will work is .NET Standard (.NET Framework will also work, but the goal is to get as close to .NET Core as possible). For these reasons, my current solution’s solution has three projects, in build order: CodeGeneration (.NET Standard) &amp;gt; T4 (.NET Framework) &amp;gt; AutoEcMvc (.NET Core). CodeGeneration has only the utility functions required for the T4 project, which has only the metadata JSON and TT files, and AutoEcMvc has the user defined and generated content together. In another chapter, we’ll remove generated code from source control entirely, but for now I’m leaving it in place as a way to easily review and compare changes with the original project. With this configuration, msbuild works seamlessly and I’ll update my Azure Pipeline to use msbuild and get my CI/CD plans back on track. I’m less than thrilled with having to throw dotnet build under the bus, but I’ve also spent more hours trying to crack this nut than I want — and I have whales need fryin’. Before I completely abandoned the dream of a pure .NET Core solution, I explored a few options. There is Scripty, which “lets you use Roslyn-powered C# scripts for code generation. You can think of it as a scripted alternative to T4 templates.” While it sounds promising, the project hasn’t been updated in a while and seems to have outstanding issues with .NET Core. There is also the issue of documentation — any examples of converting a T4 template to Scripty would be enormously helpful. Another promising option was T5, but no amount of tinkering prevailed against the ineffable and inscrutable refusal from Core to comply. Finally, there is scaffolding built into ASP.NET Core, but this is specific to Razor pages and not really a way to keep generated code in sync with metadata in the way I want to use it. Absent other ideas, T4 still seems like the best approach without a major rewrite. I should note, my specific use of T4 is not terribly complicated, and it would be easy to ditch the templates altogether and simply write the code entirely in C#, but then it would cease to be generic and defeat the purpose of this little exercise. I may emerge from this experiment with a different opinion, but for now I’ll assume that T4 will remain the backbone of the project (until proven differently). As always, this has been a long winded series of asides, a slow and drifting detour from the main point: T4 and .NET Core do not mix. The latter does not abide the former. There is hostility, vitriol and threats of malice aforethought between the two. How do I know this? My Current “Solution” To understand the problems with trying to migrate T4 into .NET Core, I think it useful to explain the challenges presented in .NET Framework. There are two paths to text transformation. The first is a developer convenience baked directly into Visual Studio since at least 2015. When you add a new .tt file into a project, VS immediately recognizes the template and offers a few convenience options for you as a developer: (1) whenever you save changes to the template, VS immediately runs text transform and the output is regenerated, (2) VS gives context menu options to manually transform (aka Run Custom Tool) and to debug the template, which will launch the debugger and allow you to set breakpoints anywhere, and (3) VS offers the option to run all transforms at the project/solution level. All of these features are hugely beneficial to the development of templates. But. And this is a big “but”. The second is through msbuild which is what I would normally use in my CI pipeline. Msbuild launches text transform in a different context than VS, which means that the relative paths (e.g. $(SolutionDir) )that work in VS no longer work from msbuild. In order to reconcile the two different behaviors, we need to make some changes to the .csproj file. Unfortunately, a project using .NET Framework has to be unloaded to be edited, then reloaded. Personally, I edit the project file directly in VS Code and let VS trigger the reload warning after I save changes. This is tedious, but it eliminates a few right-clicks. If we start with a T4 import that looks like this: #&amp;gt;&amp;lt;#@ assembly name=&quot;$(SolutionDir)CodeGeneration\\bin\\netstandard2.0\\CodeGeneration.Dll&quot; #&amp;gt;&amp;lt;#@ assembly name=&quot;$(SolutionDir)CodeGeneration\\bin\\netstandard2.0\\Newtonsoft.Json.Dll&quot; #&amp;gt;&amp;lt;#@ import namespace=&quot;Newtonsoft.Json&quot; #&amp;gt;&amp;lt;#@ import namespace=&quot;Newtonsoft.Json.Linq&quot; #&amp;gt;&amp;lt;#@ import namespace=&quot;CodeGeneration&quot; #&amp;gt; we have two immediate problems. $(SolutionDir) cannot resolve outside of VS, and our 3rd party dependency on Newtonsoft will not be available from the bin directory. Starting with the latter, you can add this into a property group in the project file: &amp;lt;PropertyGroup&amp;gt; &amp;lt;CopyLocalLockFileAssemblies&amp;gt;true&amp;lt;/CopyLocalLockFileAssemblies&amp;gt; &amp;lt;/PropertyGroup&amp;gt; Now, all reference binaries will be copied into the build output directory. Next, the challenge of resolving the path to that output directory can be solved as well. A custom mapping is required, which is also possible with a little XML markup: &amp;lt;PropertyGroup&amp;gt; &amp;lt;targetFolder&amp;gt;$(MSBuildProjectDirectory)\\..\\CodeGeneration\\bin\\netstandard2.0&amp;lt;/targetFolder&amp;gt; &amp;lt;/PropertyGroup&amp;gt; &amp;lt;ItemGroup&amp;gt; &amp;lt;T4ParameterValues Include=&quot;targetFolder&quot;&amp;gt; &amp;lt;Value&amp;gt;$(targetFolder)&amp;lt;/Value&amp;gt; &amp;lt;/T4ParameterValues&amp;gt; &amp;lt;/ItemGroup&amp;gt; Now, I can update the T4 imports to: #&amp;gt;&amp;lt;#@ assembly name=&quot;$(targetFolder)\\CodeGeneration.Dll&quot; #&amp;gt;&amp;lt;#@ assembly name=&quot;$(targetFolder)\\Newtonsoft.Json.Dll&quot; And this will work seamlessly between VS and msbuild. There are a few other changes to make, but these are much more clearly documented elsewhere. For reference here, you also need: &amp;lt;Import Project=&quot;$(MSBuildToolsPath)\\Microsoft.CSharp.targets&quot; /&amp;gt; &amp;lt;PropertyGroup&amp;gt; &amp;lt;!-- Get the Visual Studio version: --&amp;gt; &amp;lt;VisualStudioVersion Condition=&quot;'$(VisualStudioVersion)' == ''&quot;&amp;gt;16.0&amp;lt;/VisualStudioVersion&amp;gt; &amp;lt;!-- Keep the next element all on one line: --&amp;gt; &amp;lt;VSToolsPath Condition=&quot;'$(VSToolsPath)' == ''&quot;&amp;gt;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)&amp;lt;/VSToolsPath&amp;gt; &amp;lt;/PropertyGroup&amp;gt; &amp;lt;!-- This is the important line: --&amp;gt; &amp;lt;Import Project=&quot;$(VSToolsPath)\\TextTemplating\\Microsoft.TextTemplating.targets&quot; /&amp;gt; &amp;lt;PropertyGroup&amp;gt; &amp;lt;TransformOnBuild&amp;gt;true&amp;lt;/TransformOnBuild&amp;gt; &amp;lt;OverwriteReadOnlyOutputFiles&amp;gt;true&amp;lt;/OverwriteReadOnlyOutputFiles&amp;gt; &amp;lt;TransformOutOfDateOnly&amp;gt;false&amp;lt;/TransformOutOfDateOnly&amp;gt; &amp;lt;RunPostBuildEvent&amp;gt;Always&amp;lt;/RunPostBuildEvent&amp;gt; &amp;lt;/PropertyGroup&amp;gt; This is the final glue to ensure that you get identical behavior when compiling the project from any direction. Once all these pieces are in place, msbuild should just work. References: T4 Parameter Directive Pass build context data into the templates TransformOnBuild (I didn’t end up using this solution, but exploring the project helped me resolve some issues) My Struggle The next time I run into this class of problem, I definitely want to track all of my uncommitted changes and correlate each attempted fix with the relevant errors that occur which drive me to all the URLs and searches for answers as I attempt each new iteration of the fix. Then, ideally, I could blog about each stage of the journey with a little more coherence. For now and for the sake of the reader, I will simply list all of the relevant bits (that I can find in my browser history) that have led me to the conclusion that (as of this moment) T4 and Core cannot coexist. Incomplete Solutions: Re-implementation of T4 in Mono T4 Templates at Build Time with Dotnet Core T4Executer Relevant GitHub Issues: dotnet build fails to generate TypeGeneration.cs on linux Add MSBuild targets package Several FileNotFoundException using Newtonsoft.Json inside T4 template FileNotFoundException (System.Runtime, Version=4.2.1.0) when reflecting in T4 template Package type ‘DotnetCliTool’ is not supported by project PlatformNotSupportedException with dotnet-t4-project-tool build failing — and what worked for me Relevant StackOverflow Issues: T4 subtemplates TransformText() not working TextTemplating target in a .Net Core project The imported project “C:\Program Files\dotnet\sdk\2.1.201\Microsoft\VisualStudio\v15.0\WebApplications\Microsoft.WebApplication.targets” was not found Microsoft Docs: TextTransformation Class FileNotFoundException (System.Runtime, Version=4.2.1.0) when reflecting in T4 template in .NET Core 2.1 app As always, I hope this has helped someone with a similar quest. Please feel free to correct anything I have missed, suggest corrections or alternatives, or otherwise reach out to collaborate on solutions for this journey.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2019-07-10-code-generation-fail-an-all-the-kings-horses-tragedy.jpg" /><media:content medium="image" url="https://luddites.me/images/2019-07-10-code-generation-fail-an-all-the-kings-horses-tragedy.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Code Generation: Connecting T4 to Entity Framework Core</title><link href="https://luddites.me/metadata/retrospective/code/generation/2019/07/08/code-generation-connecting-t-4-to-entity-framework-core.html" rel="alternate" type="text/html" title="Code Generation: Connecting T4 to Entity Framework Core" /><published>2019-07-08T00:00:00-05:00</published><updated>2019-07-08T00:00:00-05:00</updated><id>https://luddites.me/metadata/retrospective/code/generation/2019/07/08/code-generation-connecting-t-4-to-entity-framework-core</id><content type="html" xml:base="https://luddites.me/metadata/retrospective/code/generation/2019/07/08/code-generation-connecting-t-4-to-entity-framework-core.html">&lt;p&gt;I have enjoyed working with &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/modeling/code-generation-and-t4-text-templates?view=vs-2019&quot;&gt;T4&lt;/a&gt; in my .NET projects, and I have wanted to start exploring Entity Framework Core with ASP.NET Core. Fortunately, Microsoft has an excellent &lt;a href=&quot;https://docs.asp.net/en/latest/data/ef-mvc/intro.html&quot;&gt;suite of tutorials&lt;/a&gt; which makes it dead simple to get a sample project up and running. I jumped straight to the end and began by copying down the project code from the &lt;a href=&quot;https://github.com/aspnet/AspNetCore.Docs/tree/master/aspnetcore/data/ef-mvc/intro/samples/cu-final&quot;&gt;ASP.NET Core Documentation&lt;/a&gt; repo and I started my own git repo my new and intuitively named &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc&quot;&gt;AutoEcMvc&lt;/a&gt; (Automatic EF Core over MVC) project. I even went the extra mile and set up a free Azure account to host the project at &lt;a href=&quot;https://autoecmvc.luddites.me/&quot;&gt;https://autoecmvc.luddites.me&lt;/a&gt;. The challenges of connecting the GitHub project to a CI/CD pipeline for hosting on Azure will be addressed in a follow up blog post.&lt;/p&gt;

&lt;p&gt;This project is still in the early prototype phases, but the goal is to maintain feature parity with the original Microsoft tutorial project while eliminating the majority of the code. That said, it has most of the essential building blocks for dynamically generating models and controllers using code generation powered by T4.&lt;/p&gt;

&lt;p&gt;Before diving in further, the most obvious question to answer is: What problems does this project solve? If you have ever needed to design, extend or maintain an application that either sits on relational database or exposes a concrete set of APIs, you may be familiar with the sudden weakening of the stomach as you realize just how many lines of boiler plate code need to be written in order to get your new classes or modifications to classes ready for consumption by the compiler and the consumers of the app. Factories must be updated, new view/model/controller classes must be written. Potentially hundreds of lines of code that must be manually maintained — hundreds of lines of code that are nearly identical in style and substance to the classes that came before. With code generation, we can eliminate all of that boiler plate and focus exclusively on just the (usually) small subset of things that are actually different from our new or extended schema changes.&lt;/p&gt;

&lt;p&gt;T4 is one code generation/templating solution that can help us solve this problem. Since we’ll be using .NET Core as our project type, we never have to worry about adding/removing new files to/from the project — that happens automatically. T4 has some idiosyncrasies and shortcomings (also the subject of a follow-up blog post), but it works well enough for this prototype that I am comfortable recommending it as a starting point.&lt;/p&gt;

&lt;p&gt;A few goals and guiding principles that I have applied:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Code Generation should live in a separate project from the main application projects. This becomes essential as if your generated code does not compile, you can quickly get stuck in a chicken/egg/rooster situation where you cannot -pile to fix the compile.&lt;/li&gt;
  &lt;li&gt;All code templates should use structure data format for defining how to generate code. For this project, I use JSON files which represent each unique entity to be translated into actual project code.&lt;/li&gt;
  &lt;li&gt;Use partial classes everywhere possible to allow extension and custom properties logic.&lt;/li&gt;
  &lt;li&gt;Use abstract base classes to allow injecting custom logic inside the generated code. This is critical if you need custom logic to execute inside a constructor, for example, and do not want to overly complicate the templates.&lt;/li&gt;
  &lt;li&gt;Keep as much business logic out of the template as possible.&lt;/li&gt;
  &lt;li&gt;Separate generated code from user code and annotate generated code appropriately.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you look through the structure of &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc&quot;&gt;AutoEcMvc&lt;/a&gt;, you’ll notice that there are two main projects: AutoEcMvc, which is the app that gets deployed and CodeGeneration, which is just the templating logic. I picked .NET Standard as the project type for CodeGeneration, as I ran into numerous issues trying to get the project working using .NET Core. I will revisit that in the near future.&lt;/p&gt;

&lt;p&gt;Perhaps the single most import part of code gen is the structured data format in use. I need to be able to map my JSON back to a C# class that can be used deterministically in T4, so my &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/CodeGeneration/Transforms/schema/Course.json&quot;&gt;Course&lt;/a&gt; class is defined in JSON as:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A course represents a college course that a student can take&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;DisplayName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Title&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;HasControllers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ControllerMethods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Index&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Details&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Edit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Delete&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Course&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;DatabaseGeneratedOption&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;PrimaryKeyDisplayName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Number&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Columns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Each entity has a collection of columns, and a column looks like:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Unique name of the course&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Length&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;MinimumLength&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Title&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Order&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Honestly, it took quite a few iterations before I landed on the current data structure — and there is still quite a bit of cruft that can be removed to polish this. I started with the model classes, because they are the simplest and require the least amount of logic overall. I opted to use a numbered naming convention for the templates as a clue to the developer on the order in which things should be done: note this is simply an opinion and has no effect on the text transform step of compile — these templates can (and should always be able to) be transformed in any order. So &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/CodeGeneration/Transforms/templates/02_Models.tt&quot;&gt;02_models.tt&lt;/a&gt; is the first step of the process.&lt;/p&gt;

&lt;p&gt;First, include our imports for T4:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;#@ include file=&quot;imports.ttinclude&quot; #&amp;gt;&amp;lt;#&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You’ll notice that I frequently start an opening tag immediately after a closing tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&amp;gt;&amp;lt;#&lt;/code&gt; . This is &lt;a href=&quot;https://stackoverflow.com/a/19860881&quot;&gt;just a trick&lt;/a&gt; to avoid injecting extra white space into the output file.&lt;/p&gt;

&lt;p&gt;Second, load our schema from JSON:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BuildMethods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetJsonFilesAsTables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TemplateFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\\\\..\\\\schema&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It becomes easier as you scale the templates up and out to use utility methods. I have opted to store these in a static &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/CodeGeneration/Core/BuildMethods.cs&quot;&gt;BuildMethods&lt;/a&gt; class for two reasons: (1) you get compile time errors that make sense if the methods don’t compile and (2) debugging is much simpler inside a C# class. You could just as easily write these in a shared T4 include, which I also do for the &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/CodeGeneration/Transforms/templates/saveoutput.ttinclude&quot;&gt;SaveOutput&lt;/a&gt; methods. Either way works just as well. The plus sides of defining methods in T4 in this way are (1) you don’t need the “BuildMethods” prefix and (2) the methods do not need to compile before the transform executes. Personally, I generally prefer the static BuildMethods approach for most of my logic.&lt;/p&gt;

&lt;p&gt;Third, we run through vanilla T4 concepts to construct our output model class. There are far better resources on the ins and outs of T4 to waste your time here, and I’d rather focus on the nuances of trying to model entities from JSON. Perhaps the biggest hurdle at the model layer is getting the property types correct. If you look at the final output for &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/AutoEcMvc/Generated/Models/Course.cs#L23&quot;&gt;Course.cs&lt;/a&gt;, you’ll notice that it doesn’t have many properties, but most of them are special in one or more ways.&lt;/p&gt;

&lt;p&gt;First, we have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CourseID&lt;/code&gt; which is the primary key for the Course table. Almost every table should have some unique identifier, and we can probably assume that it will be named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{tableNmae}Id&lt;/code&gt; for the majority of cases (&lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/AutoEcMvc/Generated/Models/Person.cs#L19&quot;&gt;Person&lt;/a&gt; is an exception which required some &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/CodeGeneration/Transforms/templates/02_Models.tt#L7&quot;&gt;custom logic&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Second, we have a relationship to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Department&lt;/code&gt; which has the database column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DepartmentID&lt;/code&gt; as well as the materialized, convenience property of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Department&lt;/code&gt;. For almost all primitive properties (int, string, DateTime, etc), I use a column definition that references the primitive explicitly, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Type&quot;: &quot;int?&quot;&lt;/code&gt;. This works well for the most part — there are a variety of cases where we need extra information, such as to specify a string &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/CodeGeneration/Transforms/schema/Course.json#L14&quot;&gt;min/max length&lt;/a&gt;. Relationships, whether one-to-one, one-to-many or many-to-many require a bit more work. I opted to use a dedicated set of types for these: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[&quot;relationship&quot;, &quot;relagtionship?&quot;, &quot;relationships&quot;]&lt;/code&gt; which I can then use inside my &lt;a href=&quot;https://github.com/crfroehlich/AutoEcMvc/blob/master/CodeGeneration/Core/BuildMethods.cs#L328&quot;&gt;type building logic&lt;/a&gt; to write out the type exactly the way I want without having to specify multiple synonymous properties in JSON — that is, we could have accomplished this by defining two separate properties in the column definition, but that seemed wasteful and a potential pitfall for anyone maintaining the code — forget either property and the app won’t work as expected.&lt;/p&gt;

&lt;p&gt;Third, we write out a model file for each JSON file that’s been processed:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-t4&quot;&gt;&amp;lt;#    SaveOutput(table.Name + &quot;.cs&quot;, &quot;..//..//..//AutoEcMvc//Generated//Models&quot;);  } //foreach(var table in tables) #&amp;gt;&amp;lt;#@ include file=&quot;saveoutput.ttinclude&quot; #&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since I want to have a single model template generate many model outputs, this handles the writing of the individual files. T4 still generates a single, backing file — which is annoying. I set the template output extension to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ignore&lt;/code&gt;, which generates a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;02_models.ignore&lt;/code&gt; file after each compilation. A post build event then deletes all .ignore files. It’s not the most elegant solution to the problem, but it works well enough.&lt;/p&gt;

&lt;p&gt;I attacked the problem of generating the model classes from T4 by solving each class individually. From the starting project, I attacked each class in alphabetical order and committed the changes when I had each new class compiling and there were no regressions in the UI. If I were to start over, I would have written the tests first; but since the goal of this refactoring was to produce nearly 100% identical code to the original using code gen — most of the work was spent looking at the diffs to spot the bugs in my transform logic.&lt;/p&gt;

&lt;p&gt;I would also note that this approach would be very different if I cared about producing the most well designed code/architecture. There are numerous edge cases I shimmed into the logic to handle inconsistent naming conventions; for example, if I were to write these classes from scratch, I would guarantee all properties were named consistently and could then throw away some of the custom logic required in transforms. Since the goal was to mimic the original code as closely as possible, I feel relatively at peace with the choices made to get here.&lt;/p&gt;

&lt;p&gt;Next time, I’ll talk about some of the challenges with templating the controller classes — work that I have nearly finished. Following that, views are next up and potentially the most challenging.&lt;/p&gt;

&lt;p&gt;If you enjoy working with T4 or other code generation technologies, let me know what your experience has been like. If you have any tips or tricks (especially trying to get T4 transforms running under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dotnet build&lt;/code&gt;), please, please do let me know.&lt;/p&gt;</content><author><name>CF</name></author><category term="metadata" /><category term="retrospective" /><category term="code" /><category term="generation" /><summary type="html">I have enjoyed working with T4 in my .NET projects, and I have wanted to start exploring Entity Framework Core with ASP.NET Core. Fortunately, Microsoft has an excellent suite of tutorials which makes it dead simple to get a sample project up and running. I jumped straight to the end and began by copying down the project code from the ASP.NET Core Documentation repo and I started my own git repo my new and intuitively named AutoEcMvc (Automatic EF Core over MVC) project. I even went the extra mile and set up a free Azure account to host the project at https://autoecmvc.luddites.me. The challenges of connecting the GitHub project to a CI/CD pipeline for hosting on Azure will be addressed in a follow up blog post. This project is still in the early prototype phases, but the goal is to maintain feature parity with the original Microsoft tutorial project while eliminating the majority of the code. That said, it has most of the essential building blocks for dynamically generating models and controllers using code generation powered by T4. Before diving in further, the most obvious question to answer is: What problems does this project solve? If you have ever needed to design, extend or maintain an application that either sits on relational database or exposes a concrete set of APIs, you may be familiar with the sudden weakening of the stomach as you realize just how many lines of boiler plate code need to be written in order to get your new classes or modifications to classes ready for consumption by the compiler and the consumers of the app. Factories must be updated, new view/model/controller classes must be written. Potentially hundreds of lines of code that must be manually maintained — hundreds of lines of code that are nearly identical in style and substance to the classes that came before. With code generation, we can eliminate all of that boiler plate and focus exclusively on just the (usually) small subset of things that are actually different from our new or extended schema changes. T4 is one code generation/templating solution that can help us solve this problem. Since we’ll be using .NET Core as our project type, we never have to worry about adding/removing new files to/from the project — that happens automatically. T4 has some idiosyncrasies and shortcomings (also the subject of a follow-up blog post), but it works well enough for this prototype that I am comfortable recommending it as a starting point. A few goals and guiding principles that I have applied: Code Generation should live in a separate project from the main application projects. This becomes essential as if your generated code does not compile, you can quickly get stuck in a chicken/egg/rooster situation where you cannot -pile to fix the compile. All code templates should use structure data format for defining how to generate code. For this project, I use JSON files which represent each unique entity to be translated into actual project code. Use partial classes everywhere possible to allow extension and custom properties logic. Use abstract base classes to allow injecting custom logic inside the generated code. This is critical if you need custom logic to execute inside a constructor, for example, and do not want to overly complicate the templates. Keep as much business logic out of the template as possible. Separate generated code from user code and annotate generated code appropriately. If you look through the structure of AutoEcMvc, you’ll notice that there are two main projects: AutoEcMvc, which is the app that gets deployed and CodeGeneration, which is just the templating logic. I picked .NET Standard as the project type for CodeGeneration, as I ran into numerous issues trying to get the project working using .NET Core. I will revisit that in the near future. Perhaps the single most import part of code gen is the structured data format in use. I need to be able to map my JSON back to a C# class that can be used deterministically in T4, so my Course class is defined in JSON as: &quot;Description&quot;: &quot;A course represents a college course that a student can take&quot;, &quot;DisplayName&quot;: &quot;Title&quot;, &quot;HasControllers&quot;: true, &quot;ControllerMethods&quot;: [ &quot;Index&quot;, &quot;Details&quot;, &quot;Create&quot;, &quot;Edit&quot;, &quot;Delete&quot; ], &quot;Name&quot;: &quot;Course&quot;, &quot;DatabaseGeneratedOption&quot;: &quot;None&quot;, &quot;PrimaryKeyDisplayName&quot;: &quot;Number&quot;, &quot;Columns&quot;: [...] Each entity has a collection of columns, and a column looks like: &quot;Description&quot;: &quot;Unique name of the course&quot;, &quot;Length&quot;: 50, &quot;MinimumLength&quot;: 3, &quot;Name&quot;: &quot;Title&quot;, &quot;Order&quot;: 0, &quot;Type&quot;: &quot;string&quot; Honestly, it took quite a few iterations before I landed on the current data structure — and there is still quite a bit of cruft that can be removed to polish this. I started with the model classes, because they are the simplest and require the least amount of logic overall. I opted to use a numbered naming convention for the templates as a clue to the developer on the order in which things should be done: note this is simply an opinion and has no effect on the text transform step of compile — these templates can (and should always be able to) be transformed in any order. So 02_models.tt is the first step of the process. First, include our imports for T4: &amp;lt;#@ include file=&quot;imports.ttinclude&quot; #&amp;gt;&amp;lt;# You’ll notice that I frequently start an opening tag immediately after a closing tag #&amp;gt;&amp;lt;# . This is just a trick to avoid injecting extra white space into the output file. Second, load our schema from JSON: var tables = BuildMethods.GetJsonFilesAsTables(Path.GetDirectoryName(Host.TemplateFile) + &quot;\\\\..\\\\schema&quot;); foreach(var table in tables) { It becomes easier as you scale the templates up and out to use utility methods. I have opted to store these in a static BuildMethods class for two reasons: (1) you get compile time errors that make sense if the methods don’t compile and (2) debugging is much simpler inside a C# class. You could just as easily write these in a shared T4 include, which I also do for the SaveOutput methods. Either way works just as well. The plus sides of defining methods in T4 in this way are (1) you don’t need the “BuildMethods” prefix and (2) the methods do not need to compile before the transform executes. Personally, I generally prefer the static BuildMethods approach for most of my logic. Third, we run through vanilla T4 concepts to construct our output model class. There are far better resources on the ins and outs of T4 to waste your time here, and I’d rather focus on the nuances of trying to model entities from JSON. Perhaps the biggest hurdle at the model layer is getting the property types correct. If you look at the final output for Course.cs, you’ll notice that it doesn’t have many properties, but most of them are special in one or more ways. First, we have CourseID which is the primary key for the Course table. Almost every table should have some unique identifier, and we can probably assume that it will be named {tableNmae}Id for the majority of cases (Person is an exception which required some custom logic). Second, we have a relationship to Department which has the database column DepartmentID as well as the materialized, convenience property of Department. For almost all primitive properties (int, string, DateTime, etc), I use a column definition that references the primitive explicitly, e.g. &quot;Type&quot;: &quot;int?&quot;. This works well for the most part — there are a variety of cases where we need extra information, such as to specify a string min/max length. Relationships, whether one-to-one, one-to-many or many-to-many require a bit more work. I opted to use a dedicated set of types for these: [&quot;relationship&quot;, &quot;relagtionship?&quot;, &quot;relationships&quot;] which I can then use inside my type building logic to write out the type exactly the way I want without having to specify multiple synonymous properties in JSON — that is, we could have accomplished this by defining two separate properties in the column definition, but that seemed wasteful and a potential pitfall for anyone maintaining the code — forget either property and the app won’t work as expected. Third, we write out a model file for each JSON file that’s been processed: &amp;lt;# SaveOutput(table.Name + &quot;.cs&quot;, &quot;..//..//..//AutoEcMvc//Generated//Models&quot;); } //foreach(var table in tables) #&amp;gt;&amp;lt;#@ include file=&quot;saveoutput.ttinclude&quot; #&amp;gt; Since I want to have a single model template generate many model outputs, this handles the writing of the individual files. T4 still generates a single, backing file — which is annoying. I set the template output extension to .ignore, which generates a 02_models.ignore file after each compilation. A post build event then deletes all .ignore files. It’s not the most elegant solution to the problem, but it works well enough. I attacked the problem of generating the model classes from T4 by solving each class individually. From the starting project, I attacked each class in alphabetical order and committed the changes when I had each new class compiling and there were no regressions in the UI. If I were to start over, I would have written the tests first; but since the goal of this refactoring was to produce nearly 100% identical code to the original using code gen — most of the work was spent looking at the diffs to spot the bugs in my transform logic. I would also note that this approach would be very different if I cared about producing the most well designed code/architecture. There are numerous edge cases I shimmed into the logic to handle inconsistent naming conventions; for example, if I were to write these classes from scratch, I would guarantee all properties were named consistently and could then throw away some of the custom logic required in transforms. Since the goal was to mimic the original code as closely as possible, I feel relatively at peace with the choices made to get here. Next time, I’ll talk about some of the challenges with templating the controller classes — work that I have nearly finished. Following that, views are next up and potentially the most challenging. If you enjoy working with T4 or other code generation technologies, let me know what your experience has been like. If you have any tips or tricks (especially trying to get T4 transforms running under dotnet build), please, please do let me know.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2019-07-08-code-generation-connecting-t-4-to-entity-framework-core.png" /><media:content medium="image" url="https://luddites.me/images/2019-07-08-code-generation-connecting-t-4-to-entity-framework-core.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Solstice Squid</title><link href="https://luddites.me/solstice/winter/squid/2018/12/20/the-solstice-squid.html" rel="alternate" type="text/html" title="The Solstice Squid" /><published>2018-12-20T00:00:00-06:00</published><updated>2018-12-20T00:00:00-06:00</updated><id>https://luddites.me/solstice/winter/squid/2018/12/20/the-solstice-squid</id><content type="html" xml:base="https://luddites.me/solstice/winter/squid/2018/12/20/the-solstice-squid.html">&lt;p&gt;The Squid (TS) lives at the South Pole; this much we know. How she came to live there or her reasons for making this her permanent place of residence, we do not; but we can perhaps draw some conclusions for her behavior from this simple fact.&lt;/p&gt;

&lt;p&gt;In the depths of the ocean, deep beneath the Antarctic, where darkness reins supreme, TS watches for light. At that moment, when the Earth is on the cusp of its return from longest nights into longer days, TS reacts. Light is the celebration, to which TS brings her joy.&lt;/p&gt;

&lt;p&gt;Riding a sleigh of sea horses through the seven seas, TS brings presents to the residents of this world, driving furiously through the night to enter each home through the plumbing that inevitably connects all water to the ocean. Flinging presents from her many tentacled arms toward whatever artifice those residents have established: be it tree of wood or tree of candles, TS gently deposits gifts she has translated from the requests buried within our tears that have flowed from our eyes and sifted down into the depths of the deep.&lt;/p&gt;

&lt;p&gt;TS requires nothing of us from this, her annual sacrifice; at times, those who acknowledge TS can compliment her by leaving plates laden with kelp or seaweed salad near the showers or bathtubs of their homes.&lt;/p&gt;

&lt;p&gt;As the moon rises or sun sets on the eve of Solstice, consider TS and her labors. She has considered yours.&lt;/p&gt;</content><author><name>CF</name></author><category term="solstice" /><category term="winter" /><category term="squid" /><summary type="html">The Squid (TS) lives at the South Pole; this much we know. How she came to live there or her reasons for making this her permanent place of residence, we do not; but we can perhaps draw some conclusions for her behavior from this simple fact. In the depths of the ocean, deep beneath the Antarctic, where darkness reins supreme, TS watches for light. At that moment, when the Earth is on the cusp of its return from longest nights into longer days, TS reacts. Light is the celebration, to which TS brings her joy. Riding a sleigh of sea horses through the seven seas, TS brings presents to the residents of this world, driving furiously through the night to enter each home through the plumbing that inevitably connects all water to the ocean. Flinging presents from her many tentacled arms toward whatever artifice those residents have established: be it tree of wood or tree of candles, TS gently deposits gifts she has translated from the requests buried within our tears that have flowed from our eyes and sifted down into the depths of the deep. TS requires nothing of us from this, her annual sacrifice; at times, those who acknowledge TS can compliment her by leaving plates laden with kelp or seaweed salad near the showers or bathtubs of their homes. As the moon rises or sun sets on the eve of Solstice, consider TS and her labors. She has considered yours.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2018-12-20-the-solstice-squid.png" /><media:content medium="image" url="https://luddites.me/images/2018-12-20-the-solstice-squid.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Remoting: It’s even better and even worse than you expected</title><link href="https://luddites.me/remote/work/tech/2018/05/12/remoting-its-even-better-and-even-worse-than-you-expected.html" rel="alternate" type="text/html" title="Remoting: It’s even better and even worse than you expected" /><published>2018-05-12T00:00:00-05:00</published><updated>2018-05-12T00:00:00-05:00</updated><id>https://luddites.me/remote/work/tech/2018/05/12/remoting-its-even-better-and-even-worse-than-you-expected</id><content type="html" xml:base="https://luddites.me/remote/work/tech/2018/05/12/remoting-its-even-better-and-even-worse-than-you-expected.html">&lt;p&gt;Billions of gallons of ink have been spilled on this subject. Google if you want any other perspective. I think this one angle has received…&lt;/p&gt;

&lt;p&gt;Billions of gallons of ink have been spilled on this subject. Google if you want any other perspective. I think this one angle has received less attention than most (angles).&lt;/p&gt;

&lt;p&gt;I’ve had this thought rolling around in my head since at least November of last year. Previous title ideas included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remoting: the terrific highs and terrible lows.&lt;/li&gt;
  &lt;li&gt;513 things you didn’t know about Remoting but wished you did before you started.&lt;/li&gt;
  &lt;li&gt;Remoting sucks. This is why you should do it.&lt;/li&gt;
  &lt;li&gt;Want to hate yourself a little? Try remoting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I jest. I’m only 3/8 serious. It’s important to be accurate when you work in the field of bioinformatics and statistical analysis.&lt;/p&gt;

&lt;p&gt;We write a lot about our technical challenges, our innovations, our problem solving and tool adoption — all of that is exciting and fun to discuss. There’s a human element, a personal element, a uniquely individual element of working in this field and in this way that I think is oft ignored, and it is to that end that I’d like to call some attention. I think it’s as important as anything else — perhaps even more so. I can have the best of the best when it comes to hardware and software, but if I don’t have meaningful personal connections to those around the campfire — it’s all for naught.&lt;/p&gt;

&lt;p&gt;Remoting is a challenge; and it’s supremely challenging because every single person on every single team is different and unique and has their own set of needs and expectations.&lt;/p&gt;

&lt;p&gt;For me, I have five children. My day starts around 5:45 am. I’m sure that’s pretty late for some folks — I am not a morning person. I don’t like it. But that’s my day, and I love my kids, and I wouldn’t trade it for anything. So I go from an instant on, hard focus on the kids =&amp;gt; breakfast, kids =&amp;gt; dressed, kids =&amp;gt;packed and ready routine to a space from about 7:30 am to 9:00 am where I try to get a power nap and “really” get focused on the day. That almost never works. And then there’s the whole other separate reality which is my personal life vs my work life. The kids have karate, basketball, soccer, horse riding, concerts, plays, parent teacher conferences, doctors appointments, dentist appointments, play dates, birthday parties. My partner has her own life. We only have one car. Ignoring everything else about the nature of work — life is hard.&lt;/p&gt;

&lt;p&gt;Add your job on top of that. Meetings, requirements discussions, deadlines, real-time communications, conflicts, emotional engagements in that virtual office. For some, the profession comes first and the personal comes after; others invert that; I’m sure for some it’s neutral — but the challenge of remoting is that we open ourselves up to this realm wherein these worlds are going to collide against each other.&lt;/p&gt;

&lt;p&gt;I hope that it’s not a bait-and-switch. I don’t actually have any concrete advice or statistically significant analysis to offer to anyone. I couldn’t be the kind of father or partner or employee were it not for the ability to remote. Remoting has enabled/opened opportunities that would not exist otherwise.&lt;/p&gt;

&lt;p&gt;Remoting is a challenge. I’ve used almost all of my sick days for vacation. No matter how awful I might feel after getting the flu, I do this, “But I can put myself in front of the computer, so I can’t cop out today” sort of self-talk. I don’t give myself the care and attention that I deserve. I work longer hours than I think I would otherwise. The lack of physical contact and interaction makes it hard to self-assess about how well I’m executing/performing. A certain neurosis can set it.&lt;/p&gt;

&lt;p&gt;All of this is surmountable and solvable and usually (easily) addressed by just getting on a call with some other human and expressing my feelings. It’s a simple solution. But it’s an easy solution to forget. I think if I could say anything concrete or absolute, it would be that a person’s ability to recognize when they just need to physically (as much as is possible) connect with another human is the single most important criteria for determining whether remoting is right for you or no.&lt;/p&gt;

&lt;p&gt;I stand by it. It’s not easy, but it’s worth it.&lt;/p&gt;</content><author><name>CF</name></author><category term="remote" /><category term="work" /><category term="tech" /><summary type="html">Billions of gallons of ink have been spilled on this subject. Google if you want any other perspective. I think this one angle has received… Billions of gallons of ink have been spilled on this subject. Google if you want any other perspective. I think this one angle has received less attention than most (angles). I’ve had this thought rolling around in my head since at least November of last year. Previous title ideas included: Remoting: the terrific highs and terrible lows. 513 things you didn’t know about Remoting but wished you did before you started. Remoting sucks. This is why you should do it. Want to hate yourself a little? Try remoting. I jest. I’m only 3/8 serious. It’s important to be accurate when you work in the field of bioinformatics and statistical analysis. We write a lot about our technical challenges, our innovations, our problem solving and tool adoption — all of that is exciting and fun to discuss. There’s a human element, a personal element, a uniquely individual element of working in this field and in this way that I think is oft ignored, and it is to that end that I’d like to call some attention. I think it’s as important as anything else — perhaps even more so. I can have the best of the best when it comes to hardware and software, but if I don’t have meaningful personal connections to those around the campfire — it’s all for naught. Remoting is a challenge; and it’s supremely challenging because every single person on every single team is different and unique and has their own set of needs and expectations. For me, I have five children. My day starts around 5:45 am. I’m sure that’s pretty late for some folks — I am not a morning person. I don’t like it. But that’s my day, and I love my kids, and I wouldn’t trade it for anything. So I go from an instant on, hard focus on the kids =&amp;gt; breakfast, kids =&amp;gt; dressed, kids =&amp;gt;packed and ready routine to a space from about 7:30 am to 9:00 am where I try to get a power nap and “really” get focused on the day. That almost never works. And then there’s the whole other separate reality which is my personal life vs my work life. The kids have karate, basketball, soccer, horse riding, concerts, plays, parent teacher conferences, doctors appointments, dentist appointments, play dates, birthday parties. My partner has her own life. We only have one car. Ignoring everything else about the nature of work — life is hard. Add your job on top of that. Meetings, requirements discussions, deadlines, real-time communications, conflicts, emotional engagements in that virtual office. For some, the profession comes first and the personal comes after; others invert that; I’m sure for some it’s neutral — but the challenge of remoting is that we open ourselves up to this realm wherein these worlds are going to collide against each other. I hope that it’s not a bait-and-switch. I don’t actually have any concrete advice or statistically significant analysis to offer to anyone. I couldn’t be the kind of father or partner or employee were it not for the ability to remote. Remoting has enabled/opened opportunities that would not exist otherwise. Remoting is a challenge. I’ve used almost all of my sick days for vacation. No matter how awful I might feel after getting the flu, I do this, “But I can put myself in front of the computer, so I can’t cop out today” sort of self-talk. I don’t give myself the care and attention that I deserve. I work longer hours than I think I would otherwise. The lack of physical contact and interaction makes it hard to self-assess about how well I’m executing/performing. A certain neurosis can set it. All of this is surmountable and solvable and usually (easily) addressed by just getting on a call with some other human and expressing my feelings. It’s a simple solution. But it’s an easy solution to forget. I think if I could say anything concrete or absolute, it would be that a person’s ability to recognize when they just need to physically (as much as is possible) connect with another human is the single most important criteria for determining whether remoting is right for you or no. I stand by it. It’s not easy, but it’s worth it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2018-05-12-remoting-its-even-better-and-even-worse-than-you-expected.webp" /><media:content medium="image" url="https://luddites.me/images/2018-05-12-remoting-its-even-better-and-even-worse-than-you-expected.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Code Generation: There and Back Again</title><link href="https://luddites.me/metadata/retrospective/code/generation/2017/10/24/code-generation-there-and-back-again.html" rel="alternate" type="text/html" title="Code Generation: There and Back Again" /><published>2017-10-24T00:00:00-05:00</published><updated>2017-10-24T00:00:00-05:00</updated><id>https://luddites.me/metadata/retrospective/code/generation/2017/10/24/code-generation-there-and-back-again</id><content type="html" xml:base="https://luddites.me/metadata/retrospective/code/generation/2017/10/24/code-generation-there-and-back-again.html">&lt;p&gt;I can’t remember a project (engineering or otherwise) during which I haven’t paused to ask myself: “Why did I design this thing that way?” Sometimes as a result of this introspection, I find myself feeling remorse or self-loathing, regret or the hollow embrace of ennui. Sometimes the buyer’s remorse can begin to settle in only after years of work. Sometimes the anthropomorphic representation of the design conceit simply lurks in the shadows sewing mischief as it’s able. I’ll defer to future versions of myself to conclude the relative merits or lack thereof of this particular set of concerns.&lt;/p&gt;

&lt;p&gt;Every application — from this humble blog to the social behemoths starts with data. Most projects start with a fairly predictable set of questions: what language(s) are we going to write this thing in, what type of application is this, and where are we going to store the data? Vast amounts of our data is purely relational; equal volumes of equally critical data isn’t. At the end of the day, a relational database seemed the right choice — and most grown up databases these days support storing and searching on structured and unstructured data.&lt;/p&gt;

&lt;p&gt;I think this choice continues to make sense. Personally, I’ve always found managing relational databases at scale at the lower end of the spectrum of things which bring me joy as a developer. Data migrations, schema changes, wrestling with referential integrity constraints as customer requirements change…the whole mess of managing data leaves a foul taste that’s difficult to rinse out. So a younger version of myself, a rather clever fellow in his own mind, came up with a solution:&lt;/p&gt;

&lt;p&gt;Code generation!&lt;/p&gt;

&lt;p&gt;Looking back to the earliest commits in our repo, some of the very first were the JSON files that form the backbone of our code generating homunculus. A few simple properties in our library of JSON files are responsible for generating every C# class that backs the tables in our database. Tired of a property? Update a JSON file. Need more tables, more properties, more relationships? It’s all just JSON.&lt;/p&gt;

&lt;p&gt;This makes other aspects of developing the architecture rather pleasant. Need to create or maintain a factory? Never write another line of factory code by hand. Need certain classes to implement an interface? Automate it. Need DTO versions of your table classes? Already done. RESTful web services that automatically implement ALL the verbs for every class and every possible relationship between entities? Our homunculus did that for you the day before you asked for it.&lt;/p&gt;

&lt;p&gt;Orthogonally, at the database tier, we made a rather nice design choice to use globally unique ids. Our first table committed to code is a simple dictionary of Ids and Types. Every other table inherits from this base table, which means that given any valid Id, I can find the corresponding dog, cat, person or object with no extra information. When it comes to representing these data structures as REST resources, our routes can be as terse or verbose as desired. If we were so inclined, the route to add a dog to a person’s pets collection could be as simple as posting to &lt;em&gt;/api/{personId}/{petId}&lt;/em&gt;, although in practice we rarely deviate from RESTful norms (&lt;em&gt;/api/person/{personId}/pets/{petId}&lt;/em&gt; is the actual route).&lt;/p&gt;

&lt;p&gt;The flexibility that working with globally unique identifiers would be half as pleasant if we could not automatically create and maintain the factories required to fetch an object by id and then cast it to the appropriate implementation class. As objects mature, they often have a tendency to develop greater and deeper relationships with other objects in the database. Automatically generating these relationships and the pathways between them at every tier of our framework has been a boon.&lt;/p&gt;

&lt;p&gt;I regret none of this automation. As long as fundamental design choices remain constant (or at least change slowly), vertical changes to the code — changes to the JSON that result in the creation/deletion of code, scales smoothly.&lt;/p&gt;

&lt;p&gt;Life gets much more interesting as we scale horizontally — changing the templates that sit between the JSON and the final C# files. Diabolical bugs can lurk by manner of a single typo in a template, waiting to reproduce themselves across hundreds of files with the click of a button. Whitespace changes annoy to the extreme. We can (usually do) anticipate and surmount many of these hurdles. Frequent commits guarantee that noise doesn’t swallow avoidable faults. When refactoring a template, always make sure that optimization changes to the template code always produce identical outputs before other refactorings.&lt;/p&gt;

&lt;p&gt;Changes to behavior lead to the nightmarish class of faults that lurk under the bed and are far more insidious: changes to validation logic, unique validation, how objects are cached inside a database transaction, when/how permissions are evaluated. It is trivial to change a template in such a way that crippling performance issues are immediately injected into the app. Fail to properly dispose an object, and the app can begin gradually leaking memory. Hunting down these bugs is time consuming and tedious.&lt;/p&gt;

&lt;p&gt;Orthogonally (yet again), the technology choices we made to drive code generation are somewhat dated by today’s standards. T4 would be far easier to maintain than our antiquated format; and we have inconsistencies in where template code is defined: inside the template itself or in an external “code generation” project which has to be compiled before the templates can run. While it all technically works, the cost to maintain the code gen library has only increased over time — and the cost to refactor the project to use modern frameworks is difficult to justify relative to providing new features that someone would be willing to pay for.&lt;/p&gt;

&lt;p&gt;We have extracted a tremendous amount of value from this design decision overall, so I cannot condemn the philosophical approach we have taken; but within that bundle of ideas, design and technology choices there are multitudes of tiny decisions that certainly could have been better planned with an eye toward the future. The elegance of the design choices that I admire sadly must coexist with a certain amount of spaghetti, but such is the nature of development at times.&lt;/p&gt;

&lt;p&gt;I suspect these dichotomies are somewhat ubiquitous in nature, but I do look forward to the opportunity to either perfect our approach to code generation or discover a superior path forward.&lt;/p&gt;</content><author><name>CF</name></author><category term="metadata" /><category term="retrospective" /><category term="code" /><category term="generation" /><summary type="html">I can’t remember a project (engineering or otherwise) during which I haven’t paused to ask myself: “Why did I design this thing that way?” Sometimes as a result of this introspection, I find myself feeling remorse or self-loathing, regret or the hollow embrace of ennui. Sometimes the buyer’s remorse can begin to settle in only after years of work. Sometimes the anthropomorphic representation of the design conceit simply lurks in the shadows sewing mischief as it’s able. I’ll defer to future versions of myself to conclude the relative merits or lack thereof of this particular set of concerns. Every application — from this humble blog to the social behemoths starts with data. Most projects start with a fairly predictable set of questions: what language(s) are we going to write this thing in, what type of application is this, and where are we going to store the data? Vast amounts of our data is purely relational; equal volumes of equally critical data isn’t. At the end of the day, a relational database seemed the right choice — and most grown up databases these days support storing and searching on structured and unstructured data. I think this choice continues to make sense. Personally, I’ve always found managing relational databases at scale at the lower end of the spectrum of things which bring me joy as a developer. Data migrations, schema changes, wrestling with referential integrity constraints as customer requirements change…the whole mess of managing data leaves a foul taste that’s difficult to rinse out. So a younger version of myself, a rather clever fellow in his own mind, came up with a solution: Code generation! Looking back to the earliest commits in our repo, some of the very first were the JSON files that form the backbone of our code generating homunculus. A few simple properties in our library of JSON files are responsible for generating every C# class that backs the tables in our database. Tired of a property? Update a JSON file. Need more tables, more properties, more relationships? It’s all just JSON. This makes other aspects of developing the architecture rather pleasant. Need to create or maintain a factory? Never write another line of factory code by hand. Need certain classes to implement an interface? Automate it. Need DTO versions of your table classes? Already done. RESTful web services that automatically implement ALL the verbs for every class and every possible relationship between entities? Our homunculus did that for you the day before you asked for it. Orthogonally, at the database tier, we made a rather nice design choice to use globally unique ids. Our first table committed to code is a simple dictionary of Ids and Types. Every other table inherits from this base table, which means that given any valid Id, I can find the corresponding dog, cat, person or object with no extra information. When it comes to representing these data structures as REST resources, our routes can be as terse or verbose as desired. If we were so inclined, the route to add a dog to a person’s pets collection could be as simple as posting to /api/{personId}/{petId}, although in practice we rarely deviate from RESTful norms (/api/person/{personId}/pets/{petId} is the actual route). The flexibility that working with globally unique identifiers would be half as pleasant if we could not automatically create and maintain the factories required to fetch an object by id and then cast it to the appropriate implementation class. As objects mature, they often have a tendency to develop greater and deeper relationships with other objects in the database. Automatically generating these relationships and the pathways between them at every tier of our framework has been a boon. I regret none of this automation. As long as fundamental design choices remain constant (or at least change slowly), vertical changes to the code — changes to the JSON that result in the creation/deletion of code, scales smoothly. Life gets much more interesting as we scale horizontally — changing the templates that sit between the JSON and the final C# files. Diabolical bugs can lurk by manner of a single typo in a template, waiting to reproduce themselves across hundreds of files with the click of a button. Whitespace changes annoy to the extreme. We can (usually do) anticipate and surmount many of these hurdles. Frequent commits guarantee that noise doesn’t swallow avoidable faults. When refactoring a template, always make sure that optimization changes to the template code always produce identical outputs before other refactorings. Changes to behavior lead to the nightmarish class of faults that lurk under the bed and are far more insidious: changes to validation logic, unique validation, how objects are cached inside a database transaction, when/how permissions are evaluated. It is trivial to change a template in such a way that crippling performance issues are immediately injected into the app. Fail to properly dispose an object, and the app can begin gradually leaking memory. Hunting down these bugs is time consuming and tedious. Orthogonally (yet again), the technology choices we made to drive code generation are somewhat dated by today’s standards. T4 would be far easier to maintain than our antiquated format; and we have inconsistencies in where template code is defined: inside the template itself or in an external “code generation” project which has to be compiled before the templates can run. While it all technically works, the cost to maintain the code gen library has only increased over time — and the cost to refactor the project to use modern frameworks is difficult to justify relative to providing new features that someone would be willing to pay for. We have extracted a tremendous amount of value from this design decision overall, so I cannot condemn the philosophical approach we have taken; but within that bundle of ideas, design and technology choices there are multitudes of tiny decisions that certainly could have been better planned with an eye toward the future. The elegance of the design choices that I admire sadly must coexist with a certain amount of spaghetti, but such is the nature of development at times. I suspect these dichotomies are somewhat ubiquitous in nature, but I do look forward to the opportunity to either perfect our approach to code generation or discover a superior path forward.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2017-10-24-code-generation-there-and-back-again.jpg" /><media:content medium="image" url="https://luddites.me/images/2017-10-24-code-generation-there-and-back-again.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Tetraktys by Pythagoras</title><link href="https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/2017/07/15/the-tetraktys-by-pythagoras.html" rel="alternate" type="text/html" title="The Tetraktys by Pythagoras" /><published>2017-07-15T00:00:00-05:00</published><updated>2017-07-15T00:00:00-05:00</updated><id>https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/2017/07/15/the-tetraktys-by-pythagoras</id><content type="html" xml:base="https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/2017/07/15/the-tetraktys-by-pythagoras.html">&lt;p&gt;Mr. George Pyncheon bolted upright in bed and stared at the ceiling for a moment, before he reached to the corner stand at his bedside to pick up the phone. His fingers trembled in the spaces between the buttons on the phone as he hastily tried to dial his office. The trembling in his fingers had shifted to his voice.&lt;/p&gt;

&lt;p&gt;“Ms. Mansfield?”&lt;/p&gt;

&lt;p&gt;“Yes, I’m very sorry — I won’t be in to work today.”&lt;/p&gt;

&lt;p&gt;“Sick? No, no — nothing like that. No, quite the opposite, I feel wonderful.”&lt;/p&gt;

&lt;p&gt;“Well, it’s just that — I’ve discovered something, something quite incredible.”&lt;/p&gt;

&lt;p&gt;He paused to inhale deeply; the air raked across the roof of his mouth, gurgling in little eddies as he tried to exhale in the same moment. His fingers danced along the handle of the phone, and he struggled to maintain his grip.&lt;/p&gt;

&lt;p&gt;“Yes, I know it’s a rather unique request.”&lt;/p&gt;

&lt;p&gt;“Of course, I am just an accountant — you needn’t stress over that.”&lt;/p&gt;

&lt;p&gt;“Yes, well, I just need the day off — this is enormous, you see; it will change everything.”&lt;/p&gt;

&lt;p&gt;“No, no — I imagine that it’s sort of a permanent change.”&lt;/p&gt;

&lt;p&gt;“No, of course I’m not quitting, I’m talking about the discovery.”&lt;/p&gt;

&lt;p&gt;“Perhaps, tomorrow. We’ll see. Goodbye.”&lt;/p&gt;

&lt;p&gt;Martha Pyncheon rolled onto her side and judgingly watched George leap out of bed, as he rushed to his dresser, flinging clothes into the air, a few of which lighted atop his head.&lt;/p&gt;

&lt;p&gt;Rushing into the bathroom, George quickly dressed, barely stretching his arm through the sleeve of his shirt in time to rescue a toothbrush his other sleeve had aggressed. Walking back into the bedroom, he found Martha staring at him with a mixture of contempt and apathy. She began,&lt;/p&gt;

&lt;p&gt;“George, whatever are you doing?”&lt;/p&gt;

&lt;p&gt;“Martha, it just struck me. I’ve had a most singular revelation. It’s going to change this whole muddled mess of things.”&lt;/p&gt;

&lt;p&gt;“I hadn’t realized there was a mess, or that it was muddled. What are you talking about?”&lt;/p&gt;

&lt;p&gt;George paused to look about the room, apparently searching for some visual aid to help his forthcoming explanation. At last, he said, “Come to the kitchen — I’ll show you.”&lt;/p&gt;

&lt;p&gt;Martha detachedly watched George as he sped through the bedroom to the kitchen, letting his clothes struggle desperately to keep pace and eventually finally make their way onto his body. For a moment, George stood restlessly in the kitchen, glancing about at cabinet doors, while he finished pulling his pants up to their appropriate height. At last, his gaze settled on a drawer, which he quickly pulled open.&lt;/p&gt;

&lt;p&gt;With a satisfied smile, George called out to Martha as he began pulling four apples out of the drawer and placed them on the counter. Time passed. George found himself pondering the nature of breakfast and was absentmindedly lifting one of the apples to his mouth, when Martha emerged into the kitchen.&lt;/p&gt;

&lt;p&gt;“Well, George, what is it?”&lt;/p&gt;

&lt;p&gt;The question called up to George as if from the bottom of a staircase, which he presently began descending for reasons he could not accurately define. The stairs seemed solid enough to him, though he could not quite fathom why they needed to be employed at this moment. At last, he had reached the question and begun to size it up, when his wife repeated,&lt;/p&gt;

&lt;p&gt;“Well? What is it?”&lt;/p&gt;

&lt;p&gt;“Oh yes, quite right.” George slowly looked about the kitchen. He felt certain that something of great importance had brought him here. “Just a moment.” Searching for a clue, hint or remnant of purpose, he continued, “It will come to me; I’ve just forgotten momentarily.”&lt;/p&gt;

&lt;p&gt;His wife heaved a sigh from her shoulders and turned to exit the kitchen. “I should have known.” Taking a step forward, she stopped and looked at him briefly, “George, go back to bed, or go to work, or do something useful.”&lt;/p&gt;

&lt;p&gt;George nodded as if he had heard her, mumbling automatically, “Yes, dear;” while his eyes made a quick escape through the office of his mind, stopping at the doorway to render a sharp salute, before they about-faced and began to march the line along the counter from the sink to the row of apples. Finally, his mind peered up from its desk, rushed forward through the doorway and apprehended the eyes en route back to the apples. Taking them firmly in hand, mind and eyes approached the four apples and stood resolutely and placidly as if waiting for a sign. A minute passed.&lt;/p&gt;

&lt;p&gt;“Martha! Martha! How silly of me — I’ve remembered. Of course! Come here. Quickly, now. Have a look at this!”&lt;/p&gt;

&lt;p&gt;A voice called from the bedroom, “What is it, George?”&lt;/p&gt;

&lt;p&gt;“You have to see it to believe it. Come here!”&lt;/p&gt;

&lt;p&gt;Martha reemerged into the kitchen, barely catching up to the sigh, which had preceded her. “Yes?” she asked, fatigued.&lt;/p&gt;

&lt;p&gt;George stood with the eagerness of a schoolboy, who has finally arrived at the right answer after repeated failure. “Watch this.” George paired the apples apart. “Look, there’s four of them, right?” Not waiting for an answer, “Well, there are two of them on one side, and another two are on the other side.” George paused, “You see?”&lt;/p&gt;

&lt;p&gt;Martha made no move to answer. “Look here, the two plus the other two equals four. It’s so simple; it’s amazing.”&lt;/p&gt;

&lt;p&gt;Martha met George’s eagerness like she might have met a stray cat with a broom.&lt;/p&gt;

&lt;p&gt;“George — you’re an accountant, not a philosopher. Come back to bed.” Almost turning to leave it at that, she thought better of it and continued, “Besides, you haven’t considered the drawer yet. You may as well say 16+7=4; it’s all the same thing. Any child could tell you that, George.”&lt;/p&gt;

&lt;p&gt;“No, but Martha, I’m not talking about the apples in the drawer. I’m only talking about the four apples on the counter. Pretend the others don’t exist; or better yet, pretend we’re not even talking about apples at all, just the numbers themselves. I think that 2+2 always equals 4.”&lt;/p&gt;

&lt;p&gt;“George, look, there’s no use being foolish this early in the morning. You can’t dismiss all of the numbers that do exist and pretend that only a few of them matter. Look here, ‘two’ doesn’t exist. You know that. Or look at it this way, does it matter whether we call it two apples or a couple of apples? No, of course not. It’s just an adjective. A descriptive adjective. It doesn’t mean anything. We could just call them a group of apples, or we could pick any other word to describe them: two, three, fourteen — it doesn’t matter.” Sensing that George still needed further coaxing, she continued, “Look, let’s say there’s just the one apple — to use a metaphor. We know that one apple doesn’t exist. Of course not. There has to be a tree to make the apple, which means that other trees with apples have to pollinate that tree, which means that ‘thousands’ of apples and seeds and trees have to exist to produce the illusion of this, one apple. There’s never really one or two or four. You know that.”&lt;/p&gt;

&lt;p&gt;“Yes, of course, I know,” he said rather sheepishly; “but if you didn’t consider all the rest of them. What if we just pretend that the only apples that matter are these four apples, these four on the counter here? We could take them and say that 2+2=4 or 3+1=4 or anything else we wanted. You see?”&lt;/p&gt;

&lt;p&gt;“George, if you want to wake me up every time you feel like playing make-believe, don’t. Stop this nonsense and come to bed.”&lt;/p&gt;

&lt;p&gt;“But why is this nonsense? Look, it’s plain as day. 4 apples. 2 groups of 2. 4.”&lt;/p&gt;

&lt;p&gt;“George…” Martha stopped to run an angry hand over her eyes, “where were the apples before you put them on the counter? In the drawer, right? Where will they be in an hour? Who can say? Maybe back in the drawer, maybe eaten, maybe they’ll be thrown out with the trash, right? Well, it stands to reason that they only appear to be in groups of two for the moment — because you don’t really know where they are. It’s only an illusion, George. It doesn’t mean anything. You might as well try to figure out everywhere they’ve ever been and everywhere they’re going to be. You have to realize, George, that you can’t say anything real about them. The sky isn’t blue, now is it, George?”&lt;/p&gt;

&lt;p&gt;Flustered, George responded, “No, of course not.”&lt;/p&gt;

&lt;p&gt;Pressing him, Martha continued, “And it’s not pink, either, is it?”&lt;/p&gt;

&lt;p&gt;Reverting to his schoolboy form, George almost recited, “No, colours are just an illusion, a product of imprecision. Everyone knows that.”&lt;/p&gt;

&lt;p&gt;“Yes, and numbers are the same thing. What appear to be two one moment may be three the next moment. Numbers are inefficient ways to describe temporary abnormalities.”&lt;/p&gt;

&lt;p&gt;George looked down at his feet and almost pleaded with them to agree with him, “But what if they weren’t? I mean, who says that they have to be temporary or abnormal? What if we just pretended for a moment that there was some real, definite and quantifiable way to look at these apples? What does it matter if the quantity changes? Couldn’t we just add them again afterwards?”&lt;/p&gt;

&lt;p&gt;Martha almost struck George across the face, but in a quick feat of composure, resumed her lecturing. “Look here, if numbers were real, you’d be separating groups of apples into twos, ‘adding’ and ‘subtracting’ constantly. Don’t you see? You’d never be saying anything about anything else. Isn’t that what’s most important, George — saying something true? There’s no way to make progress by controlling the ‘number’ of apples. You see that, don’t you? You’re trying to impose your own system of order where it doesn’t belong instead of trying to say what can be said.”&lt;/p&gt;

&lt;p&gt;Martha felt relieved. She had established her point, and George would surely accept it. The matter had been resolved satisfactorily. Pleased with herself, she finished, “No, George, you just stick to accounting; and all will be well.”&lt;/p&gt;

&lt;p&gt;George was not, however, entirely convinced. “But…Martha, what if…you see, we could use the same sorts of numbers and arrange them to describe all of that. Wouldn’t that be grand? We could describe the number of apples coming on to and off of the counter just as easily as we liked. It would be no problem,” he paused, “really, it wouldn’t.”&lt;/p&gt;

&lt;p&gt;The cool composure that Martha had struggled to achieve flew out of her with an exasperated cry of rage. “George, you ignorant fool! Sometimes I wonder how our marriage lasts! You self-conceited pig; you dumb ass! Don’t you see? You’re just trying to control the world. You feel dissatisfied with your place, because of some sick, twisted envy or greed for power that has overcome you. By ‘quantifying’ and ‘collecting’ you introduce some measure of control over a world that will not be controlled. You become powerful, assertive, aggressive, and for what? It’s a pleasant delusion, George; I agree with you there. But have you thought about the cost? The terrible cost? Where could we find freedom in a system that imposes such ridiculous and inconstant rules — or any rules at all? You do support, freedom; don’t you, George? Of course you do — you’re not a traitor, stupid as you are. We need to stay focused on what’s real, what’s important — on the things that matter.”&lt;/p&gt;

&lt;p&gt;“Why shouldn’t this matter? It could be useful, helpful even. Imagine if I could tell Harry more than ‘Yes, we have money today,’ or ‘No, Harry, no money today.’” What if I could tell him, ‘Harry, we have 28,000 dollars.’? What might that be like? What if we created business exchanges based on quantities — on numbers?”&lt;/p&gt;

&lt;p&gt;“To accomplish what, exactly? Look at the apples, George. Look at them! Do you see any numbers there? Are they separated into any groups? No! Do you know why that is? Because they don’t exist! Because you imagined them and imposed these things upon the apples. Where is a ‘one’? Do you see ‘one,’ because I don’t? Now stop all of this before you make me more upset than I already am. Stop it at once!”&lt;/p&gt;

&lt;p&gt;George felt like the schoolboy, who had been publicly humiliated by the teacher, though he still felt certain, perhaps even more certain than he had been before, that he was right.&lt;/p&gt;

&lt;p&gt;“Martha, listen to me — ”&lt;/p&gt;

&lt;p&gt;But Martha had had quite, “ENOUGH.” With that, she stormed out of the kitchen to the bedroom. George stood by the counter, staring resolutely at the apples. The sound of dialing wafted into the kitchen with the scent of his wife’s perfume. He was vaguely aware of some rapid, hushed dialog; though, his mind paid attention only to the groups of two that he observed beneath him. After a moment, he was aware of the sound of a handle being placed quietly on the receiver. Cautiously, he turned and approached the bedroom and peaked through the doorway to look at his wife, who sat huddled on the bed, her knees drawn up to her chin. She was crying, he noticed.&lt;/p&gt;

&lt;p&gt;“Martha, Martha — what’s the matter. Why are you crying?” George began.&lt;/p&gt;

&lt;p&gt;“George, are you ready to drop all this nonsense about numbers and apples?” She raised her eyes over the knees she had hid them behind to look at him, slowly wiping a tear from her eye.&lt;/p&gt;

&lt;p&gt;“Martha, perhaps I’ve explained it all badly. Let me try again in a way that won’t upset you.”&lt;/p&gt;

&lt;p&gt;“No, you needn’t bother, George.” Martha sobbed. “There’s someone I think you should talk to.”&lt;/p&gt;

&lt;p&gt;The car ride passed in silence. George stared out of the passenger-side window of the car into the countryside. As the car ambled along the road, George caught his eyes and mind closed within their offices, calculating odd sums, counting telephone poles and bridges, and creating little equations. George left them to their business and looked at the heavy silence that sat like a wet loaf of bread between him and Martha. He briefly considered eating his way through. In the end, he followed his eyes out the window and passed the car ride agreeing with his own conclusions. He didn’t turn back to look at Martha until he noticed that the car had stopped moving and the engine was cold.&lt;/p&gt;

&lt;p&gt;“George, are you still certain of these little ideas of yours?”&lt;/p&gt;

&lt;p&gt;“Martha, I feel as if I’ve never been more certain of anything in my life. The whole countryside seems to be alive with sums and calculations. I don’t know how I could have missed them for so long.”&lt;/p&gt;

&lt;p&gt;Martha struggled to maintain her composure. She felt tears welling up inside her, but resisted them with the desire to be strong for her husband, who needed her now more than ever. “Ok, George…” she paused to wipe her palm against her brow, “…I just hope Mr. Laughton can help.”&lt;/p&gt;

&lt;p&gt;George felt as if there was something very large that should be obviously apparent to him that he could simply not make out. “Help? Whatever with?”&lt;/p&gt;

&lt;p&gt;Stepping out of the car, Martha said, “Just follow me, George.”&lt;/p&gt;

&lt;p&gt;George followed her automatically. The office building that stood before him made no impression on George. It seemed to him to be vaguely familiar, if only because it looked like every other office building he had ever seen. The only distinguishing characteristic that drew George’s attention stood against a sign, which faced inward toward the building, showing the word “Integration” to all the open windows of the office. George followed Martha into the lobby towards a receptionist.&lt;/p&gt;

&lt;p&gt;“Well, well, welcome,” the rosy woman greeted them. The receptionist briefly glanced at a clipboard on her desk. Smiling broadly, she said, “George, Martha, so good to see you. Mr. Laughton is waiting for you.”&lt;/p&gt;

&lt;p&gt;“Thank you,” Martha said.&lt;/p&gt;

&lt;p&gt;“Wonderful, wonderful. Marvelous.”&lt;/p&gt;

&lt;p&gt;Martha pointed George in the right direction, and released him like a wind-up toy. Martha began to follow sadly behind him, when the receptionist quietly motioned to her.&lt;/p&gt;

&lt;p&gt;“Pardon me, Martha, how bad is it?” she whispered.&lt;/p&gt;

&lt;p&gt;“Worse than you can possibly imagine.”&lt;/p&gt;

&lt;p&gt;“Don’t worry, there’s a girl. Mr. Laughton will know what to do. No worries.”&lt;/p&gt;

&lt;p&gt;George and Martha had stood in the waiting room less than a moment, before Mr. Laughton appeared, a mountain of hand-shaking and ‘how-are- you’s. Laughton’s face had almost been split in two with the smiles that flashed across it in rapid succession.&lt;/p&gt;

&lt;p&gt;“Well, well, what a wonderful surprise, what a pleasant surprise we have here. My goodness, my. Yes, wonderful. Well, what seems to be our little problem? Yes, what indeed? What seems to be our situation? Goodness. My. And how are you George? Looking wonderful. Yes, my — goodness. What can be done? What can I do?”&lt;/p&gt;

&lt;p&gt;Martha gushed, “Oh, please Mr. Laughton, you have to help him. You simply must. Please, he woke up this morning half-mad, talking about twos and fours, apples, and a whole lot of other nonsense; and he won’t give it up. He’s even getting worse, talking about ‘certainties’ and ‘equations’ and who-knows what else.”&lt;/p&gt;

&lt;p&gt;“Who-knows, indeed. Oh my! Goodness! George? What’s all this? Come, George, tell me what’s on your mind. What can be done, I say. I say, what can we do?”&lt;/p&gt;

&lt;p&gt;George stared down at his feet, wondering fleetingly how a sheep might describe the look. “Well, it’s just that…” he paused to take a deep breath, “…I was looking at these apples this morning, four of them, you see; and I noticed that you could divide them into two groups of two and then add them back together again to make four, you see. Well, I was rather thinking that you could do that in general.”&lt;/p&gt;

&lt;p&gt;“I say, what? Divide apples, you say? In general? Come George, let me have it all.”&lt;/p&gt;

&lt;p&gt;“Well, yes, of course apples, I suppose; but I was thinking that you could make a sort of general principle out of it, you know. Like, you could say 2+2=4.”&lt;/p&gt;

&lt;p&gt;Martha spurted, “Do you see what I mean? I’ve been arguing with him all morning, but he just won’t listen to reason. You see how he is.” She pouted, jabbing her thumb toward George.&lt;/p&gt;

&lt;p&gt;Laughing vigorously, Mr. Laughton said, “Martha, why don’t you wait out here, while I talk to George inside.”&lt;/p&gt;

&lt;p&gt;Turning, he took George by the arm and led him through the doorway to his office. Laughing and closing the door behind him, he continued, “Wonderful! Marvelous! George, of course you can! 2+2=4? Quite rich, George. Quite funny. You’re absolutely right, George. Quite right. Let me show you something.”&lt;/p&gt;

&lt;p&gt;George looked around the small office, while Laughton searched his bookcase for a specific volume. The bookcase itself, was little more than a piece of rusted wire, bent and twisted in a long series of angles, upon which sat a great many volumes, resting against each other unevenly. Between George and the bookcase stood a tall, gold-framed picture of a dark, mahogany bookcase, filled with leather bound volumes. Next to the bookcase sat a cardboard box, upon which someone had scribbled, “Desk.” Another picture sat adjacent to the box, featuring a mahogany desk in the same style as the bookcase. Behind the desk sat a metal, foldout chair, next to which stood a picture of a high-back, leather-upholstered chair. In front of the box, George noticed another foldout chair, next to which stood a picture of a long leather couch.&lt;/p&gt;

&lt;p&gt;Turning from the bookcase, Mr. Laughton said, “George, have a seat on the couch; make yourself comfortable. Relax, George, that’s the thing. Nothing to stress over. No reason to be uncomfortable. Oh no! Not here, George. No reason at all.”&lt;/p&gt;

&lt;p&gt;George sat down in the chair.&lt;/p&gt;

&lt;p&gt;“That’s the spirit, George. What do you think about that couch there? It’s fresh in from Europe — very expensive, very, I dare say, sheik. Oh yes. My! Goodness! Now…about your revelation, your little hypothesis, let’s have a look.”&lt;/p&gt;

&lt;p&gt;Mr. Laughton retrieved a book from the top shelf and turned toward George. “2+2=4? Wonderful. Marvelous! It’s so avant-garde. It’s so prosaic. Very post-modern. Very, dare I say, edgy. That’s the thing, when you’re writing poetry; you want it in their faces, upfront and uncomfortable. I dare say. Not like here, not like now — oh no. You want to express something. Am I right?”&lt;/p&gt;

&lt;p&gt;“Well, yes, I do suppose that’s right. I do want to express something — ”&lt;/p&gt;

&lt;p&gt;“ — Of course you do, my boy, of course you do. Are you familiar, I wonder, with some of the ancient Greek poetry? I dare say you aren’t. It’s very dry reading, very drab, very prosaic — but quite profound, quite unique.”&lt;/p&gt;

&lt;p&gt;Taking the volume in his hand, he walked towards George and handed him the book.&lt;/p&gt;

&lt;p&gt;“Here’s a fellow, quite extraordinary, quite delicious, name of Euclid. Take a look at him now, if you like. Quite harmless, quite vague. He has written a neat collection of poems there in a unique “Earth meter,” I believe. He coined the phrase, you know. Very edgy. Of course, it’s a question of interpretation, mind you. Is he talking about sunsets or rose gardens? You see where I’m driving at, do you not? You see my direction?”&lt;/p&gt;

&lt;p&gt;George opened the book and turned a few pages. “A point is that which has no parts.”&lt;/p&gt;

&lt;p&gt;Flipping through the book, he looked up, “What if…I mean…suppose we interpreted him literally, you know?”&lt;/p&gt;

&lt;p&gt;Mr. Laughton paused and scratched his head before an enormous grin united his ears.&lt;/p&gt;

&lt;p&gt;“George, it might be genius! I think I see where you’re driving at, George, where you’re driving to — this is interesting. Very. Perhaps, you’ve been wasted as an accountant. Perhaps you should have been a schoolteacher for literature. Your grasp on these things is quite intuitive. Perhaps you are right. It could be that Euclid is using poetry as a medium to speak philosophically. There was that undercurrent of ambient philosophy with the Greeks — their form is always so legalistic, so rigid — always so difficult to understand what they were trying to say. But that’s another matter, George. Quite another, distant matter. The important thing, the thing of importance, the thing I cannot stress enough, George, is that all of this is quite normal. Quite usual. Quite healthy. You wouldn’t believe the quiet, normal people who come in here for a quick spot of advice on their way to work, now and again.”&lt;/p&gt;

&lt;p&gt;“So other people have had the same thoughts?”&lt;/p&gt;

&lt;p&gt;“Oh my! Yes, George. All the time. They just need a push in the right direction, like you, to help them say what it is that they want to express. Sometimes, you get a notion in your head, and it becomes difficult to separate this thought from the Truth. One moment, you don’t like your job, or you have the thought that you’d be better off skydiving than accounting. You don’t like skying diving, do you George?”&lt;/p&gt;

&lt;p&gt;“Why, I suppose not, no,” George said.&lt;/p&gt;

&lt;p&gt;“Of course you don’t. But sometimes you have this thought, and the next thing you know the only thing in your life worth a toss is the idea of throwing yourself out of an airplane. You see what I mean.”&lt;/p&gt;

&lt;p&gt;“Well, I’m not sure that I do; I’m not sure how all of this relates to me. I just had this idea, you know…I don’t really see what all of the fuss is about.”&lt;/p&gt;

&lt;p&gt;“Ah! Hrmmm…I see…Well, George, I hadn’t wanted to get into this — but, well, perhaps. Let me put it this way, George. We, you and I, George, are not terribly smart men. We’re competent, I dare say, technically proficient, you know — we function well, you and I. We are not great minds. We are not ‘the thinkers,’ George. There have been and will always be the great minds. These men wrestle with ideas. They’ve been doing it since the Greeks. Now, you would object to a carpenter, who began to lecture you about how to perform accounting, would you not? I dare say you would. As would I. Well, in the same right, it is the job of the great minds to do some amount of thinking. I say, it’s their job, you know. They think these thoughts; I say, these things have been thought through. They’ve been decided. Resolved. Sometimes, it’s true; the great minds have a change of opinion. Evidences come to light. Proofs. It’s true. It happens. But look at yourself, George. Are you a man to challenge a carpenter? Will you build a better house? Have you the tools, my good man? I mean, of course, have you studied? Have you been to university? Have you trained? Have you researched and conferred with peers the same caliber as yourself? No? Well, I am not such a man to be arrogant about these things. Not so proud that I dare to challenge what men smarter than myself have learned. Do you not think they are men just like yourself, with the best intentions? Men after the Truth? Men looking out for the good of their work and the pursuit of freedom? Do you not? These are men of science, George. Men of Progress. Yes. Now, I know you, George. You’re no more arrogant than I am. No, clearly not. You’re right of course, men have ideas. You have ideas. This is the right and proper thing for men to do. But more than this, George, we must learn how to express ourselves. That’s the thing. Thoughts crave expression. Expression is part of Freedom, is it not, George?”&lt;/p&gt;

&lt;p&gt;George nodded his agreement.&lt;/p&gt;

&lt;p&gt;“Of course it is. Now, we are civilized men, you and I — we are properly progressive. We are supporters of the Institution of Freedom, are we not? We are not the types to cry ‘fire!’ in a theater. We are not treasonous. No. We are both servants, you and I, to our proper commissions. There is no great fuss, you see — no cause for alarm. We must strive to do our best by doing that which we do well, as we have always done. You see what I mean, don’t you, George?”&lt;/p&gt;

&lt;p&gt;“Well, yes, of course. I suppose I do. I hadn’t thought of it all quite like that. You must be right, I’m sure.” George paused to look at the picture of the bookshelf. “That is a lovely bookcase.”&lt;/p&gt;

&lt;p&gt;“Quite right, George. Quite. Hmm…the bookshelf? Oh, yes.” Mr. Laughton paused to allow himself a confident grin. “Yes, I suppose that they do allow me certain privileges, certain liberties. It is a positive, yes. But these fine things,” he gestured toward the whole room, “are as much for your comfort and pleasure as they are for mine. I am only a servant.”&lt;/p&gt;

&lt;p&gt;“So this has been studied before, I take it? The great minds have researched it?”&lt;/p&gt;

&lt;p&gt;“Quite thoroughly, George. Quite. Volumes have been written. Critical responses. Whole libraries of poetry have been dedicated to questions such as these. The important thing, I say, the thing to note is that we know how to express ourselves. We do not wish to run about shouting that the sky is blue or the world is round or any such nonsense, not unless we mean to make a point, unless we mean to say something about Truth, unless we are exercising our Freedom, George. As long as we recognize the metaphor for what it is, we are free to use it however we feel.”&lt;/p&gt;

&lt;p&gt;“So I’m free to use it — ”&lt;/p&gt;

&lt;p&gt;“ — Free indeed, George! Free indeed. We mustn’t do anything to jeopardize Freedom, George. That is the golden rule, dare I say, the only rule. We cannot challenge our universal right to freedom — that is the thing that must be protected, valued, I say, defended at all costs. You are free to be free. And this great charge has but only one price: you must not limit freedom. It must free to grow and expand, as it will, free to flourish. Yes. If I were a smarter man than I am, I might speculate that this very notion may have been present before the great minds when they decided on such things as numbers and adjectives and metaphors — this very notion may have prompted their studies, their diligent inquiries, their painstaking research in some small way. But this is my speculation, mind you; only my humble hypothesis shared between close friends, only a wild guess — not a fact, not by any means a certainty. The important thing, George is that you not challenge the march of Freedom. Certainly not.”&lt;/p&gt;

&lt;p&gt;“I believe that I begin to see your meaning,” George began. “I must confess, I hadn’t thought of these things quite this way before. I hadn’t realized — ”&lt;/p&gt;

&lt;p&gt;“ — Worry not, George! You have no reason to feel anything but totally liberated, totally free. As I said in the beginning, there is nothing to worry about. Nothing unusual. No fuss, I dare say, no problems whatsoever. Martha, no doubt, has your best interest always in mind, so to speak. Marriage can be trying, you understand. It’s easy to react, to overreact, to jump to conclusions, I won’t wager. Easy to misunderstand. That’s why we must be careful, considerate, ‘forgiving’ so to speak. There’s no fault to be found, no reason to be ungrateful. No, no, quite not. Quite the opposite. Wonderful, really, all of it. No, I’ll just have a quick word with her to explain today’s misunderstanding, a quick note of reassurance passed between friends, a quick chat to sooth the seas.”&lt;/p&gt;

&lt;p&gt;George stood up from his chair, looking most pleased and grateful for Mr. Laughton’s sudden proposal of kindness. “Thank you. I would appreciate it. You know…”&lt;/p&gt;

&lt;p&gt;George stopped to peer again at his feet, which had been hidden so recently beneath the chair; satisfied that they were each in order, “You know, I do hate to be a bother.”&lt;/p&gt;

&lt;p&gt;Laughing and smiling preceded Mr. Laughton’s reassuring, “Bother? Don’t be absurd, George. No bother at all. None whatsoever. None at all. This is all quite usual. Quite normal. Ordinary. I am your servant. Just ask Margaret on your way out, and she’ll have transportation arranged to your office. No sense missing work, am I right, George?”&lt;/p&gt;

&lt;p&gt;“Oh, yes, most certainly. Thank you again for your assistance. I shill be on my way, then.”&lt;/p&gt;

&lt;p&gt;“Anytime, George, anytime. I am here for you. For you, I dare say, I am here.”&lt;/p&gt;

&lt;p&gt;Moments later, George observed his feet as they stood on the edge of the sidewalk looking toward the road. An unmistakably plain van pulled around the corner and stopped in front of George. Stepping between a picture of a stretch limousine and the door, he climbed into the vehicle. “To the Ministry of Accounting, then, George?” the driver asked.&lt;/p&gt;

&lt;p&gt;“Please, if you will, thank you.”&lt;/p&gt;

&lt;p&gt;Mr. Laughton took Martha into his office with the grave air of a surgeon about him. His many smiles had been replaced by concentrated frowns.&lt;/p&gt;

&lt;p&gt;“Martha…” he paused to place a hand on her shoulder, “you did the right thing, I say, the thing to do. George is in bad shape, Martha. It’s not the worst I’ve seen. I have seen worse. We need to watch him, though; keep a close eye on him. The thing to keep in mind through all of this is that you don’t want to keep the embers burning. You don’t want him to flare up again. You don’t want to fan the fire. You don’t want to suggest that his delusions are in fact delusions. You want him to feel quite ordinary, quite free. The feelings are the thing. When these common people snap, when the common man suffers from these mental fancies, when they take their dreaming a step too far, you must humor them to a point — to a point, Martha. We want them to adjust properly. Believe it or not, nothing is more dangerous to the cause of Freedom than the common man. The confused thinker, the dissident mind, that ghastly, uneducated mind, which begins to make leaps without a proper foundation, can incite a most unfree spirit among its peers.&lt;/p&gt;

&lt;p&gt;It’s not the thoughts that are important so much as the feeling. That sense of challenge, of pride, of awful vanity can spread infectiously from man to man. No, at all costs, George must not suspect that anything is wrong. Nothing unusual about his thoughts. He must believe them to be quite usual. He must begin to express himself properly. As I said, Martha, you did the right thing. Quite. But let us not react too violently to his thoughts. Let our reaction be of no reaction. Interpret his meanings for him. Compliment him on his cleverness and quick wit. That’s the medicine, that’s the ticket to be bought, that’s the course to be followed. Of course, do let me know if the situation becomes worse. Measures may need to be taken. Measures may be needed. We may need to follow certain paths. Indeed. Quite.”&lt;/p&gt;

&lt;p&gt;Martha extended her thanks as she nodded seriously throughout Mr. Laughton’s prognosis. Exiting the office, she allowed herself a sigh of relief. Once the door had been shut, Mr. Laughton turned toward his desk, glancing about the room. “Now, where did I set that Euclid?”&lt;/p&gt;

&lt;p&gt;Seating himself in his cubicle, George glanced up to look at the picture of his workplace, which portrayed a solid cherry desk, several gold-trimmed leather chairs, and a series of other odd pieces of furniture. Shifting uncomfortably in the metal foldout chair, upon which he sat, he grasped the ringing phone. “Hello?” “Yes, of course.”&lt;/p&gt;

&lt;p&gt;George stood and walked toward the department manager’s office. He had barely begun to knock when the door swung open to greet the manager himself, who peered down at George through a pair of horn-rimmed glasses, which seemed to be struggling desperately to remain in place atop the manager’s nose. Smiling enormously, he swept George into the office with a broad welcome. “Well, George, it’s good to see you. Come in, come in.”&lt;/p&gt;

&lt;p&gt;The manager closed the door behind him.&lt;/p&gt;

&lt;p&gt;“We’re all so glad you’re well. Ms. Mansfield told me that you had called in sick; now, here you are, right as rain! I talked to Martha a few moments ago — she called to make sure you had arrived here safely. I just wanted to talk to you privately for a moment, to express how valuable you are to this department. You are valuable, George. What’s more, to show our appreciation, I think you may have noticed that we have taken the liberty of refurnishing your office. How do you like it?”&lt;/p&gt;

&lt;p&gt;George beamed, “It’s wonderful, thank you.”&lt;/p&gt;

&lt;p&gt;“Think nothing of it, George. We’ll spare no expense for you, George. Not for you.”&lt;/p&gt;

&lt;p&gt;The manager stopped as if to assess the situation. Apparently finding everything in order, he continued, “Well, that about covers it. I can expect the usual finance report from you today?”&lt;/p&gt;

&lt;p&gt;Nodding assuredly, “Yes, of course.”&lt;/p&gt;

&lt;p&gt;“Wonderful. I know you haven’t had a chance to go over the books yet, so to speak; but can you tell me ‘off-the- record,’ have we got any money?”&lt;/p&gt;

&lt;p&gt;“Yes, I would say that we’ve got quite a lot of it.”&lt;/p&gt;

&lt;p&gt;The manager laughed instantly and heartily, “That’s too rich, George. Quite a sense of humor you’ve got. Keep up the good work then.”&lt;/p&gt;</content><author><name>CF</name></author><category term="fiction" /><category term="translation" /><category term="ελλάς" /><summary type="html">Mr. George Pyncheon bolted upright in bed and stared at the ceiling for a moment, before he reached to the corner stand at his bedside to pick up the phone. His fingers trembled in the spaces between the buttons on the phone as he hastily tried to dial his office. The trembling in his fingers had shifted to his voice. “Ms. Mansfield?” “Yes, I’m very sorry — I won’t be in to work today.” “Sick? No, no — nothing like that. No, quite the opposite, I feel wonderful.” “Well, it’s just that — I’ve discovered something, something quite incredible.” He paused to inhale deeply; the air raked across the roof of his mouth, gurgling in little eddies as he tried to exhale in the same moment. His fingers danced along the handle of the phone, and he struggled to maintain his grip. “Yes, I know it’s a rather unique request.” “Of course, I am just an accountant — you needn’t stress over that.” “Yes, well, I just need the day off — this is enormous, you see; it will change everything.” “No, no — I imagine that it’s sort of a permanent change.” “No, of course I’m not quitting, I’m talking about the discovery.” “Perhaps, tomorrow. We’ll see. Goodbye.” Martha Pyncheon rolled onto her side and judgingly watched George leap out of bed, as he rushed to his dresser, flinging clothes into the air, a few of which lighted atop his head. Rushing into the bathroom, George quickly dressed, barely stretching his arm through the sleeve of his shirt in time to rescue a toothbrush his other sleeve had aggressed. Walking back into the bedroom, he found Martha staring at him with a mixture of contempt and apathy. She began, “George, whatever are you doing?” “Martha, it just struck me. I’ve had a most singular revelation. It’s going to change this whole muddled mess of things.” “I hadn’t realized there was a mess, or that it was muddled. What are you talking about?” George paused to look about the room, apparently searching for some visual aid to help his forthcoming explanation. At last, he said, “Come to the kitchen — I’ll show you.” Martha detachedly watched George as he sped through the bedroom to the kitchen, letting his clothes struggle desperately to keep pace and eventually finally make their way onto his body. For a moment, George stood restlessly in the kitchen, glancing about at cabinet doors, while he finished pulling his pants up to their appropriate height. At last, his gaze settled on a drawer, which he quickly pulled open. With a satisfied smile, George called out to Martha as he began pulling four apples out of the drawer and placed them on the counter. Time passed. George found himself pondering the nature of breakfast and was absentmindedly lifting one of the apples to his mouth, when Martha emerged into the kitchen. “Well, George, what is it?” The question called up to George as if from the bottom of a staircase, which he presently began descending for reasons he could not accurately define. The stairs seemed solid enough to him, though he could not quite fathom why they needed to be employed at this moment. At last, he had reached the question and begun to size it up, when his wife repeated, “Well? What is it?” “Oh yes, quite right.” George slowly looked about the kitchen. He felt certain that something of great importance had brought him here. “Just a moment.” Searching for a clue, hint or remnant of purpose, he continued, “It will come to me; I’ve just forgotten momentarily.” His wife heaved a sigh from her shoulders and turned to exit the kitchen. “I should have known.” Taking a step forward, she stopped and looked at him briefly, “George, go back to bed, or go to work, or do something useful.” George nodded as if he had heard her, mumbling automatically, “Yes, dear;” while his eyes made a quick escape through the office of his mind, stopping at the doorway to render a sharp salute, before they about-faced and began to march the line along the counter from the sink to the row of apples. Finally, his mind peered up from its desk, rushed forward through the doorway and apprehended the eyes en route back to the apples. Taking them firmly in hand, mind and eyes approached the four apples and stood resolutely and placidly as if waiting for a sign. A minute passed. “Martha! Martha! How silly of me — I’ve remembered. Of course! Come here. Quickly, now. Have a look at this!” A voice called from the bedroom, “What is it, George?” “You have to see it to believe it. Come here!” Martha reemerged into the kitchen, barely catching up to the sigh, which had preceded her. “Yes?” she asked, fatigued. George stood with the eagerness of a schoolboy, who has finally arrived at the right answer after repeated failure. “Watch this.” George paired the apples apart. “Look, there’s four of them, right?” Not waiting for an answer, “Well, there are two of them on one side, and another two are on the other side.” George paused, “You see?” Martha made no move to answer. “Look here, the two plus the other two equals four. It’s so simple; it’s amazing.” Martha met George’s eagerness like she might have met a stray cat with a broom. “George — you’re an accountant, not a philosopher. Come back to bed.” Almost turning to leave it at that, she thought better of it and continued, “Besides, you haven’t considered the drawer yet. You may as well say 16+7=4; it’s all the same thing. Any child could tell you that, George.” “No, but Martha, I’m not talking about the apples in the drawer. I’m only talking about the four apples on the counter. Pretend the others don’t exist; or better yet, pretend we’re not even talking about apples at all, just the numbers themselves. I think that 2+2 always equals 4.” “George, look, there’s no use being foolish this early in the morning. You can’t dismiss all of the numbers that do exist and pretend that only a few of them matter. Look here, ‘two’ doesn’t exist. You know that. Or look at it this way, does it matter whether we call it two apples or a couple of apples? No, of course not. It’s just an adjective. A descriptive adjective. It doesn’t mean anything. We could just call them a group of apples, or we could pick any other word to describe them: two, three, fourteen — it doesn’t matter.” Sensing that George still needed further coaxing, she continued, “Look, let’s say there’s just the one apple — to use a metaphor. We know that one apple doesn’t exist. Of course not. There has to be a tree to make the apple, which means that other trees with apples have to pollinate that tree, which means that ‘thousands’ of apples and seeds and trees have to exist to produce the illusion of this, one apple. There’s never really one or two or four. You know that.” “Yes, of course, I know,” he said rather sheepishly; “but if you didn’t consider all the rest of them. What if we just pretend that the only apples that matter are these four apples, these four on the counter here? We could take them and say that 2+2=4 or 3+1=4 or anything else we wanted. You see?” “George, if you want to wake me up every time you feel like playing make-believe, don’t. Stop this nonsense and come to bed.” “But why is this nonsense? Look, it’s plain as day. 4 apples. 2 groups of 2. 4.” “George…” Martha stopped to run an angry hand over her eyes, “where were the apples before you put them on the counter? In the drawer, right? Where will they be in an hour? Who can say? Maybe back in the drawer, maybe eaten, maybe they’ll be thrown out with the trash, right? Well, it stands to reason that they only appear to be in groups of two for the moment — because you don’t really know where they are. It’s only an illusion, George. It doesn’t mean anything. You might as well try to figure out everywhere they’ve ever been and everywhere they’re going to be. You have to realize, George, that you can’t say anything real about them. The sky isn’t blue, now is it, George?” Flustered, George responded, “No, of course not.” Pressing him, Martha continued, “And it’s not pink, either, is it?” Reverting to his schoolboy form, George almost recited, “No, colours are just an illusion, a product of imprecision. Everyone knows that.” “Yes, and numbers are the same thing. What appear to be two one moment may be three the next moment. Numbers are inefficient ways to describe temporary abnormalities.” George looked down at his feet and almost pleaded with them to agree with him, “But what if they weren’t? I mean, who says that they have to be temporary or abnormal? What if we just pretended for a moment that there was some real, definite and quantifiable way to look at these apples? What does it matter if the quantity changes? Couldn’t we just add them again afterwards?” Martha almost struck George across the face, but in a quick feat of composure, resumed her lecturing. “Look here, if numbers were real, you’d be separating groups of apples into twos, ‘adding’ and ‘subtracting’ constantly. Don’t you see? You’d never be saying anything about anything else. Isn’t that what’s most important, George — saying something true? There’s no way to make progress by controlling the ‘number’ of apples. You see that, don’t you? You’re trying to impose your own system of order where it doesn’t belong instead of trying to say what can be said.” Martha felt relieved. She had established her point, and George would surely accept it. The matter had been resolved satisfactorily. Pleased with herself, she finished, “No, George, you just stick to accounting; and all will be well.” George was not, however, entirely convinced. “But…Martha, what if…you see, we could use the same sorts of numbers and arrange them to describe all of that. Wouldn’t that be grand? We could describe the number of apples coming on to and off of the counter just as easily as we liked. It would be no problem,” he paused, “really, it wouldn’t.” The cool composure that Martha had struggled to achieve flew out of her with an exasperated cry of rage. “George, you ignorant fool! Sometimes I wonder how our marriage lasts! You self-conceited pig; you dumb ass! Don’t you see? You’re just trying to control the world. You feel dissatisfied with your place, because of some sick, twisted envy or greed for power that has overcome you. By ‘quantifying’ and ‘collecting’ you introduce some measure of control over a world that will not be controlled. You become powerful, assertive, aggressive, and for what? It’s a pleasant delusion, George; I agree with you there. But have you thought about the cost? The terrible cost? Where could we find freedom in a system that imposes such ridiculous and inconstant rules — or any rules at all? You do support, freedom; don’t you, George? Of course you do — you’re not a traitor, stupid as you are. We need to stay focused on what’s real, what’s important — on the things that matter.” “Why shouldn’t this matter? It could be useful, helpful even. Imagine if I could tell Harry more than ‘Yes, we have money today,’ or ‘No, Harry, no money today.’” What if I could tell him, ‘Harry, we have 28,000 dollars.’? What might that be like? What if we created business exchanges based on quantities — on numbers?” “To accomplish what, exactly? Look at the apples, George. Look at them! Do you see any numbers there? Are they separated into any groups? No! Do you know why that is? Because they don’t exist! Because you imagined them and imposed these things upon the apples. Where is a ‘one’? Do you see ‘one,’ because I don’t? Now stop all of this before you make me more upset than I already am. Stop it at once!” George felt like the schoolboy, who had been publicly humiliated by the teacher, though he still felt certain, perhaps even more certain than he had been before, that he was right. “Martha, listen to me — ” But Martha had had quite, “ENOUGH.” With that, she stormed out of the kitchen to the bedroom. George stood by the counter, staring resolutely at the apples. The sound of dialing wafted into the kitchen with the scent of his wife’s perfume. He was vaguely aware of some rapid, hushed dialog; though, his mind paid attention only to the groups of two that he observed beneath him. After a moment, he was aware of the sound of a handle being placed quietly on the receiver. Cautiously, he turned and approached the bedroom and peaked through the doorway to look at his wife, who sat huddled on the bed, her knees drawn up to her chin. She was crying, he noticed. “Martha, Martha — what’s the matter. Why are you crying?” George began. “George, are you ready to drop all this nonsense about numbers and apples?” She raised her eyes over the knees she had hid them behind to look at him, slowly wiping a tear from her eye. “Martha, perhaps I’ve explained it all badly. Let me try again in a way that won’t upset you.” “No, you needn’t bother, George.” Martha sobbed. “There’s someone I think you should talk to.” The car ride passed in silence. George stared out of the passenger-side window of the car into the countryside. As the car ambled along the road, George caught his eyes and mind closed within their offices, calculating odd sums, counting telephone poles and bridges, and creating little equations. George left them to their business and looked at the heavy silence that sat like a wet loaf of bread between him and Martha. He briefly considered eating his way through. In the end, he followed his eyes out the window and passed the car ride agreeing with his own conclusions. He didn’t turn back to look at Martha until he noticed that the car had stopped moving and the engine was cold. “George, are you still certain of these little ideas of yours?” “Martha, I feel as if I’ve never been more certain of anything in my life. The whole countryside seems to be alive with sums and calculations. I don’t know how I could have missed them for so long.” Martha struggled to maintain her composure. She felt tears welling up inside her, but resisted them with the desire to be strong for her husband, who needed her now more than ever. “Ok, George…” she paused to wipe her palm against her brow, “…I just hope Mr. Laughton can help.” George felt as if there was something very large that should be obviously apparent to him that he could simply not make out. “Help? Whatever with?” Stepping out of the car, Martha said, “Just follow me, George.” George followed her automatically. The office building that stood before him made no impression on George. It seemed to him to be vaguely familiar, if only because it looked like every other office building he had ever seen. The only distinguishing characteristic that drew George’s attention stood against a sign, which faced inward toward the building, showing the word “Integration” to all the open windows of the office. George followed Martha into the lobby towards a receptionist. “Well, well, welcome,” the rosy woman greeted them. The receptionist briefly glanced at a clipboard on her desk. Smiling broadly, she said, “George, Martha, so good to see you. Mr. Laughton is waiting for you.” “Thank you,” Martha said. “Wonderful, wonderful. Marvelous.” Martha pointed George in the right direction, and released him like a wind-up toy. Martha began to follow sadly behind him, when the receptionist quietly motioned to her. “Pardon me, Martha, how bad is it?” she whispered. “Worse than you can possibly imagine.” “Don’t worry, there’s a girl. Mr. Laughton will know what to do. No worries.” George and Martha had stood in the waiting room less than a moment, before Mr. Laughton appeared, a mountain of hand-shaking and ‘how-are- you’s. Laughton’s face had almost been split in two with the smiles that flashed across it in rapid succession. “Well, well, what a wonderful surprise, what a pleasant surprise we have here. My goodness, my. Yes, wonderful. Well, what seems to be our little problem? Yes, what indeed? What seems to be our situation? Goodness. My. And how are you George? Looking wonderful. Yes, my — goodness. What can be done? What can I do?” Martha gushed, “Oh, please Mr. Laughton, you have to help him. You simply must. Please, he woke up this morning half-mad, talking about twos and fours, apples, and a whole lot of other nonsense; and he won’t give it up. He’s even getting worse, talking about ‘certainties’ and ‘equations’ and who-knows what else.” “Who-knows, indeed. Oh my! Goodness! George? What’s all this? Come, George, tell me what’s on your mind. What can be done, I say. I say, what can we do?” George stared down at his feet, wondering fleetingly how a sheep might describe the look. “Well, it’s just that…” he paused to take a deep breath, “…I was looking at these apples this morning, four of them, you see; and I noticed that you could divide them into two groups of two and then add them back together again to make four, you see. Well, I was rather thinking that you could do that in general.” “I say, what? Divide apples, you say? In general? Come George, let me have it all.” “Well, yes, of course apples, I suppose; but I was thinking that you could make a sort of general principle out of it, you know. Like, you could say 2+2=4.” Martha spurted, “Do you see what I mean? I’ve been arguing with him all morning, but he just won’t listen to reason. You see how he is.” She pouted, jabbing her thumb toward George. Laughing vigorously, Mr. Laughton said, “Martha, why don’t you wait out here, while I talk to George inside.” Turning, he took George by the arm and led him through the doorway to his office. Laughing and closing the door behind him, he continued, “Wonderful! Marvelous! George, of course you can! 2+2=4? Quite rich, George. Quite funny. You’re absolutely right, George. Quite right. Let me show you something.” George looked around the small office, while Laughton searched his bookcase for a specific volume. The bookcase itself, was little more than a piece of rusted wire, bent and twisted in a long series of angles, upon which sat a great many volumes, resting against each other unevenly. Between George and the bookcase stood a tall, gold-framed picture of a dark, mahogany bookcase, filled with leather bound volumes. Next to the bookcase sat a cardboard box, upon which someone had scribbled, “Desk.” Another picture sat adjacent to the box, featuring a mahogany desk in the same style as the bookcase. Behind the desk sat a metal, foldout chair, next to which stood a picture of a high-back, leather-upholstered chair. In front of the box, George noticed another foldout chair, next to which stood a picture of a long leather couch. Turning from the bookcase, Mr. Laughton said, “George, have a seat on the couch; make yourself comfortable. Relax, George, that’s the thing. Nothing to stress over. No reason to be uncomfortable. Oh no! Not here, George. No reason at all.” George sat down in the chair. “That’s the spirit, George. What do you think about that couch there? It’s fresh in from Europe — very expensive, very, I dare say, sheik. Oh yes. My! Goodness! Now…about your revelation, your little hypothesis, let’s have a look.” Mr. Laughton retrieved a book from the top shelf and turned toward George. “2+2=4? Wonderful. Marvelous! It’s so avant-garde. It’s so prosaic. Very post-modern. Very, dare I say, edgy. That’s the thing, when you’re writing poetry; you want it in their faces, upfront and uncomfortable. I dare say. Not like here, not like now — oh no. You want to express something. Am I right?” “Well, yes, I do suppose that’s right. I do want to express something — ” “ — Of course you do, my boy, of course you do. Are you familiar, I wonder, with some of the ancient Greek poetry? I dare say you aren’t. It’s very dry reading, very drab, very prosaic — but quite profound, quite unique.” Taking the volume in his hand, he walked towards George and handed him the book. “Here’s a fellow, quite extraordinary, quite delicious, name of Euclid. Take a look at him now, if you like. Quite harmless, quite vague. He has written a neat collection of poems there in a unique “Earth meter,” I believe. He coined the phrase, you know. Very edgy. Of course, it’s a question of interpretation, mind you. Is he talking about sunsets or rose gardens? You see where I’m driving at, do you not? You see my direction?” George opened the book and turned a few pages. “A point is that which has no parts.” Flipping through the book, he looked up, “What if…I mean…suppose we interpreted him literally, you know?” Mr. Laughton paused and scratched his head before an enormous grin united his ears. “George, it might be genius! I think I see where you’re driving at, George, where you’re driving to — this is interesting. Very. Perhaps, you’ve been wasted as an accountant. Perhaps you should have been a schoolteacher for literature. Your grasp on these things is quite intuitive. Perhaps you are right. It could be that Euclid is using poetry as a medium to speak philosophically. There was that undercurrent of ambient philosophy with the Greeks — their form is always so legalistic, so rigid — always so difficult to understand what they were trying to say. But that’s another matter, George. Quite another, distant matter. The important thing, the thing of importance, the thing I cannot stress enough, George, is that all of this is quite normal. Quite usual. Quite healthy. You wouldn’t believe the quiet, normal people who come in here for a quick spot of advice on their way to work, now and again.” “So other people have had the same thoughts?” “Oh my! Yes, George. All the time. They just need a push in the right direction, like you, to help them say what it is that they want to express. Sometimes, you get a notion in your head, and it becomes difficult to separate this thought from the Truth. One moment, you don’t like your job, or you have the thought that you’d be better off skydiving than accounting. You don’t like skying diving, do you George?” “Why, I suppose not, no,” George said. “Of course you don’t. But sometimes you have this thought, and the next thing you know the only thing in your life worth a toss is the idea of throwing yourself out of an airplane. You see what I mean.” “Well, I’m not sure that I do; I’m not sure how all of this relates to me. I just had this idea, you know…I don’t really see what all of the fuss is about.” “Ah! Hrmmm…I see…Well, George, I hadn’t wanted to get into this — but, well, perhaps. Let me put it this way, George. We, you and I, George, are not terribly smart men. We’re competent, I dare say, technically proficient, you know — we function well, you and I. We are not great minds. We are not ‘the thinkers,’ George. There have been and will always be the great minds. These men wrestle with ideas. They’ve been doing it since the Greeks. Now, you would object to a carpenter, who began to lecture you about how to perform accounting, would you not? I dare say you would. As would I. Well, in the same right, it is the job of the great minds to do some amount of thinking. I say, it’s their job, you know. They think these thoughts; I say, these things have been thought through. They’ve been decided. Resolved. Sometimes, it’s true; the great minds have a change of opinion. Evidences come to light. Proofs. It’s true. It happens. But look at yourself, George. Are you a man to challenge a carpenter? Will you build a better house? Have you the tools, my good man? I mean, of course, have you studied? Have you been to university? Have you trained? Have you researched and conferred with peers the same caliber as yourself? No? Well, I am not such a man to be arrogant about these things. Not so proud that I dare to challenge what men smarter than myself have learned. Do you not think they are men just like yourself, with the best intentions? Men after the Truth? Men looking out for the good of their work and the pursuit of freedom? Do you not? These are men of science, George. Men of Progress. Yes. Now, I know you, George. You’re no more arrogant than I am. No, clearly not. You’re right of course, men have ideas. You have ideas. This is the right and proper thing for men to do. But more than this, George, we must learn how to express ourselves. That’s the thing. Thoughts crave expression. Expression is part of Freedom, is it not, George?” George nodded his agreement. “Of course it is. Now, we are civilized men, you and I — we are properly progressive. We are supporters of the Institution of Freedom, are we not? We are not the types to cry ‘fire!’ in a theater. We are not treasonous. No. We are both servants, you and I, to our proper commissions. There is no great fuss, you see — no cause for alarm. We must strive to do our best by doing that which we do well, as we have always done. You see what I mean, don’t you, George?” “Well, yes, of course. I suppose I do. I hadn’t thought of it all quite like that. You must be right, I’m sure.” George paused to look at the picture of the bookshelf. “That is a lovely bookcase.” “Quite right, George. Quite. Hmm…the bookshelf? Oh, yes.” Mr. Laughton paused to allow himself a confident grin. “Yes, I suppose that they do allow me certain privileges, certain liberties. It is a positive, yes. But these fine things,” he gestured toward the whole room, “are as much for your comfort and pleasure as they are for mine. I am only a servant.” “So this has been studied before, I take it? The great minds have researched it?” “Quite thoroughly, George. Quite. Volumes have been written. Critical responses. Whole libraries of poetry have been dedicated to questions such as these. The important thing, I say, the thing to note is that we know how to express ourselves. We do not wish to run about shouting that the sky is blue or the world is round or any such nonsense, not unless we mean to make a point, unless we mean to say something about Truth, unless we are exercising our Freedom, George. As long as we recognize the metaphor for what it is, we are free to use it however we feel.” “So I’m free to use it — ” “ — Free indeed, George! Free indeed. We mustn’t do anything to jeopardize Freedom, George. That is the golden rule, dare I say, the only rule. We cannot challenge our universal right to freedom — that is the thing that must be protected, valued, I say, defended at all costs. You are free to be free. And this great charge has but only one price: you must not limit freedom. It must free to grow and expand, as it will, free to flourish. Yes. If I were a smarter man than I am, I might speculate that this very notion may have been present before the great minds when they decided on such things as numbers and adjectives and metaphors — this very notion may have prompted their studies, their diligent inquiries, their painstaking research in some small way. But this is my speculation, mind you; only my humble hypothesis shared between close friends, only a wild guess — not a fact, not by any means a certainty. The important thing, George is that you not challenge the march of Freedom. Certainly not.” “I believe that I begin to see your meaning,” George began. “I must confess, I hadn’t thought of these things quite this way before. I hadn’t realized — ” “ — Worry not, George! You have no reason to feel anything but totally liberated, totally free. As I said in the beginning, there is nothing to worry about. Nothing unusual. No fuss, I dare say, no problems whatsoever. Martha, no doubt, has your best interest always in mind, so to speak. Marriage can be trying, you understand. It’s easy to react, to overreact, to jump to conclusions, I won’t wager. Easy to misunderstand. That’s why we must be careful, considerate, ‘forgiving’ so to speak. There’s no fault to be found, no reason to be ungrateful. No, no, quite not. Quite the opposite. Wonderful, really, all of it. No, I’ll just have a quick word with her to explain today’s misunderstanding, a quick note of reassurance passed between friends, a quick chat to sooth the seas.” George stood up from his chair, looking most pleased and grateful for Mr. Laughton’s sudden proposal of kindness. “Thank you. I would appreciate it. You know…” George stopped to peer again at his feet, which had been hidden so recently beneath the chair; satisfied that they were each in order, “You know, I do hate to be a bother.” Laughing and smiling preceded Mr. Laughton’s reassuring, “Bother? Don’t be absurd, George. No bother at all. None whatsoever. None at all. This is all quite usual. Quite normal. Ordinary. I am your servant. Just ask Margaret on your way out, and she’ll have transportation arranged to your office. No sense missing work, am I right, George?” “Oh, yes, most certainly. Thank you again for your assistance. I shill be on my way, then.” “Anytime, George, anytime. I am here for you. For you, I dare say, I am here.” Moments later, George observed his feet as they stood on the edge of the sidewalk looking toward the road. An unmistakably plain van pulled around the corner and stopped in front of George. Stepping between a picture of a stretch limousine and the door, he climbed into the vehicle. “To the Ministry of Accounting, then, George?” the driver asked. “Please, if you will, thank you.” Mr. Laughton took Martha into his office with the grave air of a surgeon about him. His many smiles had been replaced by concentrated frowns. “Martha…” he paused to place a hand on her shoulder, “you did the right thing, I say, the thing to do. George is in bad shape, Martha. It’s not the worst I’ve seen. I have seen worse. We need to watch him, though; keep a close eye on him. The thing to keep in mind through all of this is that you don’t want to keep the embers burning. You don’t want him to flare up again. You don’t want to fan the fire. You don’t want to suggest that his delusions are in fact delusions. You want him to feel quite ordinary, quite free. The feelings are the thing. When these common people snap, when the common man suffers from these mental fancies, when they take their dreaming a step too far, you must humor them to a point — to a point, Martha. We want them to adjust properly. Believe it or not, nothing is more dangerous to the cause of Freedom than the common man. The confused thinker, the dissident mind, that ghastly, uneducated mind, which begins to make leaps without a proper foundation, can incite a most unfree spirit among its peers. It’s not the thoughts that are important so much as the feeling. That sense of challenge, of pride, of awful vanity can spread infectiously from man to man. No, at all costs, George must not suspect that anything is wrong. Nothing unusual about his thoughts. He must believe them to be quite usual. He must begin to express himself properly. As I said, Martha, you did the right thing. Quite. But let us not react too violently to his thoughts. Let our reaction be of no reaction. Interpret his meanings for him. Compliment him on his cleverness and quick wit. That’s the medicine, that’s the ticket to be bought, that’s the course to be followed. Of course, do let me know if the situation becomes worse. Measures may need to be taken. Measures may be needed. We may need to follow certain paths. Indeed. Quite.” Martha extended her thanks as she nodded seriously throughout Mr. Laughton’s prognosis. Exiting the office, she allowed herself a sigh of relief. Once the door had been shut, Mr. Laughton turned toward his desk, glancing about the room. “Now, where did I set that Euclid?” Seating himself in his cubicle, George glanced up to look at the picture of his workplace, which portrayed a solid cherry desk, several gold-trimmed leather chairs, and a series of other odd pieces of furniture. Shifting uncomfortably in the metal foldout chair, upon which he sat, he grasped the ringing phone. “Hello?” “Yes, of course.” George stood and walked toward the department manager’s office. He had barely begun to knock when the door swung open to greet the manager himself, who peered down at George through a pair of horn-rimmed glasses, which seemed to be struggling desperately to remain in place atop the manager’s nose. Smiling enormously, he swept George into the office with a broad welcome. “Well, George, it’s good to see you. Come in, come in.” The manager closed the door behind him. “We’re all so glad you’re well. Ms. Mansfield told me that you had called in sick; now, here you are, right as rain! I talked to Martha a few moments ago — she called to make sure you had arrived here safely. I just wanted to talk to you privately for a moment, to express how valuable you are to this department. You are valuable, George. What’s more, to show our appreciation, I think you may have noticed that we have taken the liberty of refurnishing your office. How do you like it?” George beamed, “It’s wonderful, thank you.” “Think nothing of it, George. We’ll spare no expense for you, George. Not for you.” The manager stopped as if to assess the situation. Apparently finding everything in order, he continued, “Well, that about covers it. I can expect the usual finance report from you today?” Nodding assuredly, “Yes, of course.” “Wonderful. I know you haven’t had a chance to go over the books yet, so to speak; but can you tell me ‘off-the- record,’ have we got any money?” “Yes, I would say that we’ve got quite a lot of it.” The manager laughed instantly and heartily, “That’s too rich, George. Quite a sense of humor you’ve got. Keep up the good work then.”</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2017-07-15-the-tetraktys-by-pythagoras.jpg" /><media:content medium="image" url="https://luddites.me/images/2017-07-15-the-tetraktys-by-pythagoras.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Apeiron by Thales of Miletus</title><link href="https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/15/apeiron-by-thales-of-miletus.html" rel="alternate" type="text/html" title="Apeiron by Thales of Miletus" /><published>2017-07-15T00:00:00-05:00</published><updated>2017-07-15T00:00:00-05:00</updated><id>https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/15/apeiron-by-thales-of-miletus</id><content type="html" xml:base="https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/15/apeiron-by-thales-of-miletus.html">&lt;p&gt;I opened his heart on the kitchen counter this morning with a pairing knife and a garlic press. His body lay still, still warm on the hearth as I worked; and the dawn still played table tennis with the snow — returning awkward beams of light back and forth from the heaven to the ground. His flesh was less malleable than I had anticipated. It lacked any of the phantom palpitations I half expected from late night and early morning movies, but it moved between my fingers in a way that almost felt conscious. That he didn’t give it to me doesn’t lead to the conclusion that I stole it. Quite the contrary. His daughter pleaded with me to take it; and now we stand together in the act of its dissection — morally, if not literally.&lt;/p&gt;

&lt;p&gt;Of particular interest to me is the right ventricle. I long suspected it to be deficient in at least one capacity, and it is now my good fortune to arrive at a firsthand, concrete resolution.&lt;/p&gt;</content><author><name>CF</name></author><category term="fiction" /><category term="translation" /><category term="ελλάς" /><category term="short story" /><summary type="html">I opened his heart on the kitchen counter this morning with a pairing knife and a garlic press. His body lay still, still warm on the hearth as I worked; and the dawn still played table tennis with the snow — returning awkward beams of light back and forth from the heaven to the ground. His flesh was less malleable than I had anticipated. It lacked any of the phantom palpitations I half expected from late night and early morning movies, but it moved between my fingers in a way that almost felt conscious. That he didn’t give it to me doesn’t lead to the conclusion that I stole it. Quite the contrary. His daughter pleaded with me to take it; and now we stand together in the act of its dissection — morally, if not literally. Of particular interest to me is the right ventricle. I long suspected it to be deficient in at least one capacity, and it is now my good fortune to arrive at a firsthand, concrete resolution.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2017-07-15-apeiron-by-thales-of-miletus.jpg" /><media:content medium="image" url="https://luddites.me/images/2017-07-15-apeiron-by-thales-of-miletus.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Arkhē by Heraclitus of Ephesus</title><link href="https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/14/arkhe-by-heraclitus-of-ephesus.html" rel="alternate" type="text/html" title="Arkhē by Heraclitus of Ephesus" /><published>2017-07-14T00:00:00-05:00</published><updated>2017-07-14T00:00:00-05:00</updated><id>https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/14/arkhe-by-heraclitus-of-ephesus</id><content type="html" xml:base="https://luddites.me/fiction/translation/%CE%B5%CE%BB%CE%BB%CE%AC%CF%82/short%20story/2017/07/14/arkhe-by-heraclitus-of-ephesus.html">&lt;p&gt;The mechanic paused to wipe the grease from his hands across the murky surface of his coveralls before he grabbed the x-ray from the rack overhead. A cigarette clung precariously to his bottom lip as he held the x-ray up against the light of a lone, white light bulb swinging at the end of a length of electrical wire. Looking away from the x-ray toward a chart posted against the wall, the mechanic walked steadily towards the man on the operating table.&lt;/p&gt;

&lt;p&gt;“Well, Mr. Guthrey, she don’t look good — and that’s a fact.” The mechanic spoke quickly, carelessly slurring his words together as he brushed grease stained fingers across the x-ray.&lt;/p&gt;

&lt;p&gt;“Now, I’m thinkin’ we ken go in right through here — quick in, swap her out, and have you up an’ running ‘n less than two hours. But here’s tha thing….” The mechanic paused to stub his cigarette out on the corner of the operating table as he leaned in closer to the patient, speaking more hurriedly and anxiously. “The whole block’s gotta come out. The whole dern thing. I mean, it’s bad through ‘n through. Plain bad. Now, yer good for 2…maybe 3 weeks after I swap out this here part; but we’ll get those parts on order, get that new block in, have it here for you Monday, whenever yer ready, bring you in, swap’er out, in — out, good as new, no more than a few hours parts and labor.”&lt;/p&gt;

&lt;p&gt;Mr. Guthrey stared at him for a moment from the table, “I just don’t know, Ted.” Pausing to scratch his head, he continued, “I don’t know — can’t you just rebuild it?”&lt;/p&gt;

&lt;p&gt;The mechanic paused to scratch his head, lighting another cigarette as he returned to examine the x-ray. “Well, I mean, here’s the deal…I pull that sucker out an’ start workin’ on her, no tellin’ what can happen, no sir, no way to know. I mean, I get her open’ up, no tellin’ what all’s messed up in there, what all’s gone wrong. The heart’s a funny little contraption, and that’s no lie. I mean, say I get her out and realize that I can’t do it? Say she’s blocked up something awful? Say she’s just plain unfixable? Well, then yer stuck on the arty until Monday anyways. Nope. No sir. Don’t feel comfortable with that. Not a bit. If it was a kidney, you know — no problem. Take that puppy out, have her fixed up, good as new, stick her back in whenever yer ready. No problem. But this here…” he said gesturing towards the heart, “is the meat ‘n potatoes of yer whole operation.”&lt;/p&gt;

&lt;p&gt;“Well, Ted, I’m just not sure — do you mind if I get a second opinion?”&lt;/p&gt;

&lt;p&gt;“Not a problem, Mr. Guthrey. Bill’s just down the street; and you know Phil’s across town — he’s a good mech; and you know I’ll match prices with any of the locals.”&lt;/p&gt;

&lt;p&gt;“Sure thing, Ted, I’ll let you know.”&lt;/p&gt;

&lt;p&gt;“Well, don’t think about her too long, now — that right ventricle…she’s going down. Any day now, I swear. Got the parts right here, you know. Just you be careful. Keep putting in premium ‘till we get that baby out.”&lt;/p&gt;

&lt;p&gt;“Will do, Ted.”&lt;/p&gt;

&lt;p&gt;The mechanic waved at Ted and turned to walk into the shop’s waiting room. “I can take another customer in bay three,” he said.&lt;/p&gt;

&lt;p&gt;A big man, farmer type stepped up and followed Ted into the bay. Turning, Ted looked at him and asked, “Well, sir, what ken we do for you?”&lt;/p&gt;

&lt;p&gt;“Well, I just need a tune-up, really; but my knee has been making this funny noise lately. Can you take a look at it?”&lt;/p&gt;

&lt;p&gt;“Sure can. Why don’t you have a seat and describe that noise for me.”&lt;/p&gt;</content><author><name>CF</name></author><category term="fiction" /><category term="translation" /><category term="ελλάς" /><category term="short story" /><summary type="html">The mechanic paused to wipe the grease from his hands across the murky surface of his coveralls before he grabbed the x-ray from the rack overhead. A cigarette clung precariously to his bottom lip as he held the x-ray up against the light of a lone, white light bulb swinging at the end of a length of electrical wire. Looking away from the x-ray toward a chart posted against the wall, the mechanic walked steadily towards the man on the operating table. “Well, Mr. Guthrey, she don’t look good — and that’s a fact.” The mechanic spoke quickly, carelessly slurring his words together as he brushed grease stained fingers across the x-ray. “Now, I’m thinkin’ we ken go in right through here — quick in, swap her out, and have you up an’ running ‘n less than two hours. But here’s tha thing….” The mechanic paused to stub his cigarette out on the corner of the operating table as he leaned in closer to the patient, speaking more hurriedly and anxiously. “The whole block’s gotta come out. The whole dern thing. I mean, it’s bad through ‘n through. Plain bad. Now, yer good for 2…maybe 3 weeks after I swap out this here part; but we’ll get those parts on order, get that new block in, have it here for you Monday, whenever yer ready, bring you in, swap’er out, in — out, good as new, no more than a few hours parts and labor.” Mr. Guthrey stared at him for a moment from the table, “I just don’t know, Ted.” Pausing to scratch his head, he continued, “I don’t know — can’t you just rebuild it?” The mechanic paused to scratch his head, lighting another cigarette as he returned to examine the x-ray. “Well, I mean, here’s the deal…I pull that sucker out an’ start workin’ on her, no tellin’ what can happen, no sir, no way to know. I mean, I get her open’ up, no tellin’ what all’s messed up in there, what all’s gone wrong. The heart’s a funny little contraption, and that’s no lie. I mean, say I get her out and realize that I can’t do it? Say she’s blocked up something awful? Say she’s just plain unfixable? Well, then yer stuck on the arty until Monday anyways. Nope. No sir. Don’t feel comfortable with that. Not a bit. If it was a kidney, you know — no problem. Take that puppy out, have her fixed up, good as new, stick her back in whenever yer ready. No problem. But this here…” he said gesturing towards the heart, “is the meat ‘n potatoes of yer whole operation.” “Well, Ted, I’m just not sure — do you mind if I get a second opinion?” “Not a problem, Mr. Guthrey. Bill’s just down the street; and you know Phil’s across town — he’s a good mech; and you know I’ll match prices with any of the locals.” “Sure thing, Ted, I’ll let you know.” “Well, don’t think about her too long, now — that right ventricle…she’s going down. Any day now, I swear. Got the parts right here, you know. Just you be careful. Keep putting in premium ‘till we get that baby out.” “Will do, Ted.” The mechanic waved at Ted and turned to walk into the shop’s waiting room. “I can take another customer in bay three,” he said. A big man, farmer type stepped up and followed Ted into the bay. Turning, Ted looked at him and asked, “Well, sir, what ken we do for you?” “Well, I just need a tune-up, really; but my knee has been making this funny noise lately. Can you take a look at it?” “Sure can. Why don’t you have a seat and describe that noise for me.”</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://luddites.me/images/2017-07-14-arkhe-by-heraclitus-of-ephesus.jpg" /><media:content medium="image" url="https://luddites.me/images/2017-07-14-arkhe-by-heraclitus-of-ephesus.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>